{"version":3,"sources":["webpack:///./src/components/common/pagination.vue?4ed7","webpack:///./src/utils/scroll-to.js","webpack:///src/components/common/pagination.vue","webpack:///./src/components/common/pagination.vue?9ff3","webpack:///./src/components/common/pagination.vue?d3ce","webpack:///./node_modules/@amcharts/amcharts4/.internal/themes/animated.js","webpack:///./node_modules/@amcharts/amcharts4/themes/animated.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Image.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyarc.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Morpher.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Polygon.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Preloader.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Slider.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/PlayButton.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradientModifier.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinePattern.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RectPattern.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/ColorizeFilter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/BlurFilter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/FocusFilter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/CirclePattern.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/PatternSet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Plugin.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/AmChartsLogo.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Instance.js","webpack:///./node_modules/@amcharts/amcharts4/core.js","webpack:///./src/components/common/pagination.vue?3cfb","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Grip.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/SankeyDiagram.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/ChordDiagram.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/TreeMap.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart3D.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/OHLCSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeriesSegment.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarColumnSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelTick.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/PictorialStackedSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/CurvedColumnSeries.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/cursors/RadarCursor.js","webpack:///./node_modules/@amcharts/amcharts4/charts.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./src/components/uploadSituation/uploadSituation.vue?a541","webpack:///./src/components/uploadSituation/chartData1.js","webpack:///./src/components/uploadSituation/chartData2.js","webpack:///src/components/uploadSituation/uploadSituation.vue","webpack:///./src/components/uploadSituation/uploadSituation.vue?20f9","webpack:///./src/components/uploadSituation/uploadSituation.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","hidden","_b","attrs","background","currentPage","pageSize","layout","pageSizes","total","on","handleSizeChange","handleCurrentChange","$attrs","staticRenderFns","Math","easeInOutQuad","t","b","c","d","requestAnimFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","move","amount","document","documentElement","scrollTop","body","parentNode","position","scrollTo","to","duration","start","change","increment","currentTime","animateScroll","val","name","props","required","type","Number","page","default","limit","Array","String","Boolean","autoScroll","computed","get","set","$emit","methods","component","theme","object","transitionDuration","rangeChangeDuration","interpolationDuration","sequencedInterpolation","defaultState","hiddenState","animationDuration","properties","opacity","showOnInit","_super","Image","_this","call","className","element","paper","add","applyTheme","width","height","prototype","draw","href","innerWidth","innerHeight","widthRatio","heightRatio","attr","attrNS","Object","defineProperty","getPropertyValue","value","setPropertyValue","enumerable","configurable","x","y","pixelWidth","pixelHeight","Sprite","registeredClasses","Polyarc","controlPointDistance","controlPointPosition","makePath","_distance","segments","length","path","_realSegments","i","len","points","realPoints","push","p","pointA","pointB","distanceAB","cpDistance","angle","cpx","cpy","controlPoint1","cpx2","cpy2","controlPoint2","stepCount","ceil","prevPoint","i_1","point","Polyline","Morpher","morphable","_bboxes","morphDuration","morphEasing","morphToSingle","scaleRatio","morphToPolygon","toPoints","easing","currentPoints","sortPoints","_morphFromPointsReal","_morphToPointsReal","normalizePoints","animation","Animation","property","from","_disposers","pointsA","pointsB","surfaceA","holeA","bboxA","middleX","middleY","addPoints","distance","Infinity","splitAt","a","newDistance","partA","slice","partB","concat","sort","bbox1","bbox2","bboxes","surface","morphToCircle","radius","commonBBox","hole","fromPoints","bbox","realRadius","min","startAngle","count","realAngle","pointOnCircle","hlen","mustHaveCount","addToSegmentCount","round","newPoints","point0","point1","percent","extraPoint","lastPoint","morphToRectangle","realWidth","realHeight","i_2","i_3","_morphProgress","currentArea","surfaceFrom","holeFrom","surfaceTo","holeTo","currentSurface","i_4","slen","currentPoint","currentHole","i_5","morphBack","_animations","Base","Polygon","shapeRendering","_currentPoints","valueStr","split","s","segment","areaHole","areaArr","holeArr","pointsArr","area","areaAndHole","coords","pointsArr_1","left","right","top","bottom","h","setPath","_bbox","group","getBBox","measureElement","_morpher","Preloader","interfaceColors","InterfaceColorSet","sliceContainer","createChild","Container","shouldClone","backgroundSlice","Slice","arc","fill","getFor","fillOpacity","innerRadius","isMeasured","progressSlice","label","Label","horizontalCenter","verticalCenter","align","valign","contentAlign","contentValign","delay","states","create","visible","hide","__disabled","validateLayout","text","_started","undefined","events","once","isFinished","interactionsEnabled","Date","getTime","show","Slider","thumb","endGrip","startGrip","_start","_isBusy","__start","Scrollbar","PlayButton","padding","showSystemTooltip","cornerRadius","stroke","strokeOpacity","getKey","playIcon","Triangle","direction","marginLeft","marginRight","icon","stopIcon","RoundedRectangle","togglable","activeState","applyInternalDefaults","readerTitle","language","translate","Button","RadialGradientModifier","gradient","RadialGradient","copyFrom","source","clone","GradientModifier","LinePattern","_line","addElement","rotation","w","gap","step","strokeWidth","Pattern","RectPattern","rectHeight","rectWidth","_rect","ColorizeFilter","feColorMatrix","filterPrimitives","intensity","applyFilter","r","g","ii","color","rgb","Filter","BlurFilter","feGaussianBlur","blur","scale","FocusFilter","feFlood","feMorphology","feComposite","feBlend","setSprite","_sprite","removeStyle","addStyle","CirclePattern","_circle","PatternSet","_list","_currentStep","_startIndex","_currentPass","baseColor","Color","list","getLinePattern","getRectPattern","getCirclePattern","sqrt","size","thickness","strokeDashArray","pattern","strokeDasharray","outline","reset","next","getIndex","currentStep","generatePatterns","processConfig","config","Plugin","_disposed","init","isDisposed","dispose","disposer","shift","AmChartsLogo","url","urlTarget","aColor","alternative","hex","aGradient","LinearGradient","addColor","aStroke","m","Polyspline","tensionX","tensionY","desaturateFilter","DesaturateFilter","filters","desaturateFilterHover","saturation","hoverState","htmlElement","classType","htmlContainer","innerHTML","svgDiv_1","SVGContainer","Paper","container_1","svgContainer","append","relativeWidth","relativeHeight","container","sprite_1","topParent","uid","invalidSprites","invalidDatas","invalidPositions","invalidLayouts","baseId","isBaseSprite","focusFilter","baseSprites","baseSpritesByUid","maskRectangle","max","event","previousWidth","previousHeight","deepInvalidate","loopTimer_1","loop_1","dom","addDisposer","Disposer","clearTimeout","tooltipContainer_1","tooltipContainer","tooltip","Tooltip","setBounds","maxWidth","maxHeight","preloader_1","preloader","hasLicense","logo_1","ev","isHidden","isHiding","logo","numberFormatter","isStandaloneInstance","onlyShowOnViewport","viewportTarget","queue","addToQueue","disposers","viewPortHandler","vpDisposer","log","Error","disposeAllCharts","pop","sprite","indexOf","disableType","queueHandler","removeFromQueue","index","splice","nextSprite","enableType","Component","invalidateData","reinit","appear","classError","chart","raiseCriticalError","createFromConfig","finalType","useTheme","themes","unuseTheme","unuseAllThemes","addLicense","license","licenses","$export","defined","fails","spaces","space","non","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","trim","P","F","string","TYPE","replace","module","exports","Grip","cs","margin","pixelPerfect","autoHideDelay","_autoHideTimeout","ChartDataItem","DataItem","Chart","_legend","constructor","template","titles","List","chartAndLegendContainer","chartContainer","processTitle","updateReaderTitleReferences","role","fixLayout","legend","toBack","toFront","feedLegend","title","newValue","parent","uidAttr","titleIds_1","iterator","setSVGAttribute","join","removeSVGAttribute","setLegend","removeChildren","_dragGrip","grip_1","touch","focusable","relevant","Responsive","widthXS","state","target","stateId","pixelPaddingLeft","paddingLeft","pixelPaddingRight","paddingRight","heightXS","pixelPaddingTop","paddingTop","pixelPaddingBottom","paddingBottom","widthXXS","heightXXS","Bullet","tooltipX","tooltipY","applyOnClones","copyToLegendMarker","dataItem","invalidate","isXS","disabled","LegendDataItem","childrenCreated","_label","label_1","labels","addSprite","itemContainer","removeValue","setProperty","_valueLabel","valueLabel_1","valueLabels","_itemContainer","component_1","itemContainer_1","itemContainers","toggleDataItem","focusedItem","dataContext","readerControls","readerLabelledBy","readerChecked","isActive","dataItems","remove","_marker","marker_1","markers","LegendSettings","createMarker","Legend","clickable","cursorOverStyle","Mouse","pointer","isKey","marker","setStateOnChildren","propertyFields","disabledColor","child","rectangle","valueLabel","textAlign","createDataItem","validateDataElement","legendDataItem","legendSettings","createLegendMarker","useDefaultMarker","updateLegendValue","invalid","validate","currentText","itemValueText","valueText","truncate","fullWords","item","colorOrig","handleDataItemPropertyChange","SeriesDataItem","values","_bullets","Dictionary","bullets","clear","setValue","Series","_ignoreMinMax","_showBullets","_tmin","_tmax","_smin","_smax","dataItemsByAxis","skipFocusThreshold","_itemReaderTextChanged","calculatePercent","autoDispose","simplifiedProcessing","axisRanges","processAxisRange","minBulletDistance","mainContainer","mask","bulletsContainer","_shouldBeReady","virtualParent","transitionEasing","autoSetClassName","setClassName","_chart","positionBullet","bullet","processBullet","isTemplate","itemsFocusable","removeBullet","oldValue","each","eachBullet","validateDataItems","processValues","getFirstValue","key","startIndex","getActualWorkingValue","getAbsoluteFirstValue","rangeChangeUpdate","working","count_1","sum_1","absoluteSum_1","low_1","high_1","open_1","close_1","previous_1","first_1","absoluteFirst_1","startIndex_1","_workingStartIndex","endIndex","_workingEndIndex","dataItem_1","_loop_1","dataItem_2","abs","setCalculatedValue","prevValue","_loop_2","dataItem_3","ksum","zeroItem_1","dataItem_4","axisRange","pixelX","pixelY","children","updateTooltipBounds","rect","shouldCreateBullet","bulletTemplate","disabledField","currentDataItem","setKey","readerText_1","itemReaderText","xField","yField","isDynamic","populateString","hoverable","itemWidth","itemHeight","handleDataItemWorkingValueChange","dataRangeInvalid","invalidateProcessedData","invalidateDataItems","createMask","rangesContainer","contents","isRange","getAxisField","axis","showTooltipAtPosition","xPosition","yPosition","invalidateRawData","readerText","_itemReaderText","tooltipText","tooltipHTML","_adapterO","apply","_legendDataItem","notRange","itemLabelText","labelText","e","modal","content","adapter","message","closable","open","verbose","console","applyFilters","filter","_heatRules","heatRule","dataField_1","dataField","min_1","max_1","seriesDataItem_1","property_1","minValue","maxValue","foundSprite","sprites","clonedFrom","anySprite","anyChild","foundSprite_1","ruleTarget","propertyField","low","high","fieldValues","workingValue","heatRules","rule","map","hasKey","parts","listitem","maybeColorOrPercent","configOrder","setVisibility","SerialChartDataItem","SerialChart","colors","ColorSet","_usesData","seriesContainer","zIndex","patterns","_series","createSeries","handleSeriesAdded","series","dataUsers","dataUser","_dataUsers","moveValue","handleSeriesAdded2","dataInvalid","data","legendData_1","hiddenInLegend","dataFields","inited","AxisBreak","_axis","breakSize","marginTop","marginBottom","fillShape","WavedLine","_fillShape","startLine","_startLine","endLine","_endLine","addBreakSprite","renderer","gridContainer","createBreakSprites","breakTemplate","axisBreaks","invalidateSeries","positionToPoint","startPosition","endPosition","updateBreakElement","AxisItemLocation","AxisDataItem","_grid","grid_1","grid","_tick","component_2","tick_1","tick","ticks","component_3","_axisFill","component_4","axisFill_1","axisFill","axisFills","_text","_mask","_contents","createFill","_axisBreak","axisBreak","appendChildren","appendDataItem","hasProperty","prop","minPosition","maxPosition","noChangeValues","_bullet","Axis","_gridCount","_axisItemCount","hideTooltipWhileZooming","minWidth","minHeight","toggleZoomOutButton","_dataItemsIterator","createNewItems","pointerLength","fitPointerToBounds","readerHidden","fillRule","invalidateLayout","validateDataElements","ghostLabel","updateLabelElement","end","updateGridCount","axisLength","minGridDistance","axisFullLength","updateAxisLine","updateTooltip","updateBaseGridElement","_prevLength","dispatchImmediately","initRenderer","above","updateGridContainer","validateAxisRanges","validateBreaks","_axisBreaks","processBreak","breakContainer","registerSeries","_renderer","ghostLabel_1","positionToAngle","pointToPosition","positionToCoordinate","getAnyRangePath","getPositionRangePath","anyToPosition","anyToPoint","hideTooltip","_tooltipPosition","local","_tooltip","toAxisPosition","tooltipLocation","getCellStartPosition","getCellEndPosition","tooltipPosition","tooltipLocation2","startPoint","endPoint","currentItemStartPoint","currentItemEndPoint","fullWidthTooltip","globalPoint","line","getTooltipText","pointTo","cursorTooltipEnabled","inversed","toGlobalPosition","pointerOrientation","boundingRectangle","roundPosition","location","axisLocation","_axisRanges","SortedList","createAxisBreak","adjustedStartValue","processSeriesDataItems","processSeriesDataItem","axisLetter","postProcessSeriesDataItems","postProcessSeriesDataItem","updateAxisBySeries","hideUnusedDataItems","dataItemsIterator","getSeriesDataItem","findNearest","getAngle","stackKey","range","getX","getPositionX","getY","getPositionY","dataChangeUpdate","seriesDataChangeUpdate","adjustDifference","difference","startValue","endValue","adjustedEndValue","intersection","isInBreak","fixAxisBreaks","update","firstAxisBreak","first","previousEndValue_1","getPositionLabel","createSeriesRange","resetIterators","setDisabled","changed","_title","maybeXS","AxisLine","AxisFill","fillPath","Grid","AxisLabel","Tick","nonScalingStroke","AxisTick","AxisRenderer","inside","cellStartLocation","cellEndLocation","minLabelPosition","maxLabelPosition","invalidateAxisItems","baseGrid","setAxis","bind","processRenderer","positionItem","moveTo","position2","coordinate","getHeight","getWidth","coordinateToPosition","coordinate2","updateGridElement","updateTickElement","updateBullet","updateFillElement","toggleVisibility","updatedStart","updatedEnd","_axisFills","createGrid","_ticks","createTick","_labels","createLabel","AxisBullet","AxisRendererY","opposite","inversedPosition","relativePositionSprite","relativeY","Percent","bigNum","bbx","bby","bbw","bbh","measuredHeight","y1","y2","tickLength","measuredWidth","_a","basePoint","deltaX","x1","pixelMarginLeft","x2","pixelMarginRight","wavedRectangle","WavedRectangle","setWavedSides","widthS","ValueAxisBreak","valueToPosition","ValueAxisDataItem","ValueAxis","_stepDecimalPlaces","_baseValue","_adjustedStart","_adjustedEnd","_extremesChanged","_deltaMinMax","calculateTotals","axisFieldName","MAX_VALUE","keepSelection","includeRangesInMinMax","_end","_maxZoomed","_maxDefined","_minZoomed","_minDefined","_maxAdjusted","_minAdjusted","this_1","excludeFromTotal","getMinMax","calculateZoom","validateAxisElements","positionToValue","differece","minMaxStep","adjustMinMax","_step","value_1","minZoomed","logarithmic","differencePower","LOG10E","pow","floor","maxZoomed","dataItemsIterator_1","find","formatLabel","stepPower","decCount","renderer_1","breakValue_1","adjustedMin","adjustedMax","adjustedStep","itemIndex","fillEndPosition","format","baseValue","valueToPoint","_difference","difference_1","value_2","breakStartPosition","breakEndPosition","breakStartValue","breakEndValue","breakPosition","E","xToValue","yToValue","animateMinMax","animate","rangeChangeEasing","POSITIVE_INFINITY","NEGATIVE_INFINITY","ignoreMinMax","seriesMin","seriesMax","_minReal","_maxReal","dif","fixMin","fixMax","exponent","power","extraMin","extraMax","strict","strictMinMax","_minMaxAnimation","_finalMax","_finalMin","handleSelectionExtremesChange","gridCount","strictMode","initialMin","initialMax","extra","stepDivisor","maxPrecision","minCount","maxCount","handleExtremesChange","selectionMin","selectionMax","allHidden","seriesSelectionMin","seriesSelectionMax","minMaxStep2","zoom","mw_1","getWorkingValue","stack","getValue","zoomToValues","skipRangeEvent","instantly","axisBreakDif","axisBreakGridCount","breakMinMaxStep","showTooltipAt","DateAxisBreak","DateAxisDataItem","date","endDate","dates","setDate","DateAxis","_gapBreaks","gridIntervals","groupIntervals","dateFormats","periodChangeDateFormats","_baseIntervalReal","timeUnit","_minDifference","_firstWeekDay","groupMin","groupMax","snapTooltip","groupCount","getDFFormatter","pushAll","gridInterval","_gridInterval","gridDuration","baseDuration","periodCount","getFirstWeekDay","mainBaseDuration","mainBaseInterval","maxZoomFactor","newPeriodCount","dataSetChanged","groupData","groupInterval","chooseInterval","_groupInterval","_currentDataSetId","baseAxis","setDataSet","baseInterval","_nextGridUnit","_intervalDuration","_gridDate","_df","utc","field_1","minZoomedStr","toString","startDataItem","currentDataSetId","findFirst","findClosestIndex","maxZoomedStr","endDataItem","validateDataRange","time","previousDataItem","previousDate","validateData","minDifference","JSON","stringify","_baseInterval","mainDataSet","groupSeriesData","addEmptyUnitsBreaks","dataGrouped","intervals_1","mainIntervalDuration_1","interval","intervalDuration","_dataSets","dataSetId","dataSet","dataSets","newDataItem","previousTime","dfkey","df","dfk","getDate","roundedDate","firstDayOfWeek","_index","vkey","dvalues","close","sum","average","fieldValue","f","hasProperties","groupDataItems","groupFieldName","groupFields","dateFormatter","intervalID","startDate","startTime","skipEmptyPeriods","startTimeStr","hasData","breakGridCount","gridDate","getGridDate","intervalCount","realIntervalCount","prevTimestamp","newDate","timestamp","durationBreaksRemoved","countBreaksRemoved","getBreaklessDate","prevGridDate","this_2","markUnitChange","timeUnit_1","intervalCount_1","prevGridDate_1","timestamp_1","_loop_3","text_1","endTimestamp","location_1","endTime","startLocation","endLocation","intervals","lastIndex","dateToPosition","dateToPoint","positionToDate","getTimeByLocation","workingLocations","openTime","openDate","prevSeriesTime","_prevSeriesTime","_mainBaseInterval","timeInterval","tooltipDateFormat","dateFormat","setTime","key_1","getCurrentLabelFormat","dispatch","id","zoomToDates","adjust","parse","isEnd","isStart","asIs","field","closestDate_1","actualDate","actualTime_1","xAxis","dateX","yAxis","dateY","closestTime_1","showTooltipAtDataItem","_seriesPoints","makeGap","previous","connect","autoGapCount","prevDate","prevTime","AxisRendererX","deltaY","pixelMarginTop","pixelMarginBottom","relativeX","CategoryAxisBreak","indexToPosition","category","categoryToIndex","CategoryAxisDataItem","seriesDataItems","locations","endCategory","Adapter","isEnabled","CategoryAxis","dataItemsByCategory","_lastDataItem","categoryAxisDataItem","seriesId","invalidateDataRange","positionToIndex","minIndex","maxIndex","axisDataItem","seriesDataItem","dataCount","frequency","_endIndex","_frequency","frequency_1","itemIndex_1","fillEndIndex","fillPosition","html","disposeData","processDataItem","getDataItem","breakStartIndex","breakEndIndex","categoryToPosition","categoryToPoint","zoomToCategories","startCategory","zoomToIndexes","startPos","endPos","getFirstSeriesDataItem","categoryX","categoryY","getLastSeriesDataItem","index_1","sdi_1","category_1","categories","tooltipDataItem","positionToCategory","XYSeriesDataItem","customValue","valueX","valueY","openValueX","openValueY","openDateX","openDateY","setLocation","setCategory","openCategoryX","openCategoryY","getMin","fields","stackValue","getMax","XYSeries","_xAxis","_yAxis","_xValueFields","_yValueFields","usesShowFields","_dataSetChanged","cursorHoverEnabled","setElement","stacked","returnBulletDefaultState","valueYShow","openValueXShow","openValueYShow","defineFields","updateItemReaderText","_xField","_yField","setInitialWorkingValues","updateDataItem","dataItemsX","clearCatAxis","dataItemsY","xAxisFieldName","xOpenField","yAxisFieldName","yOpenField","_xOpenField","_yOpenField","addValueField","setCategoryAxisField","setDateAxisField","afterDraw","path_1","getMaskPath","xAxes","setXAxis","oldAxis","removeKey","yAxes","setYAxis","handleYAxisSet","_baseAxis","minX","maxX","minY","maxY","workingStartIndex","workingEndIndex","getStackValue","stackX","stackY","xAxisId","yAxisId","stackedSeries","appeared","tmin","tmax","_prevTooltipDataItem","isShowing","getAdjustedXLocation","getAdjustedYLocation","e_1","cursor","hideSeriesTooltipsOnSelection","selection","downPoint","tooltipXField","tooltipYField","tooltipPoint","getPoint","done","isHover","e_1_1","error","return","showTooltip","e_2_1","e_2","hasValue","bulletLocationX","getBulletLocationX","bulletLocationY","getBulletLocationY","positionX","positionY","openValue","closeValue","middleValue","rightLocation","leftLocation","openPositionX","topLocation","bottomLocation","openPositionY","positionBulletReal","bulletLocation","locationX","locationY","anim","sequencedInterpolationDelay","disable","enable","axisSeries","backwards","prevSeries","prevDataItem","prevRealValue","_tooltipXField","_tooltipYField","processingErrors","xKey","yKey","stackKeyX","stackKeyY","XYChartScrollbar","scrollbarChart","_scrollbarChart","unselectedOverlay","_unselectedOverlay","thumbBackground","downState","handleSeriesRemoved","sourceSeries","zoomOutButton","locale","addXAxis","addYAxis","labelsTemplate","maxZoomCount","minZoomCount","vAxis_1","sourceAxis","minDefined","maxDefined","vAxis_2","vAxis_3","vAxis_4","zoomOutAxes","updateByOrientation","orientation","off","err","handleDataChanged","dataProvider","updateThumb","XYChartDataItem","XYChart","_axisRendererX","_axisRendererY","maskBullets","arrangeTooltips","topAxesCont","topAxesContainer","yAxesAndPlotCont","yAxesAndPlotContainer","bottomAxesCont","bottomAxesContainer","leftAxesCont","updateXAxesMargins","leftAxesContainer","plotCont","plotContainer","mouseWheelBehavior","_cursorContainer","rightAxesCont","rightAxesContainer","ZoomOutButton","MAX_SAFE_INTEGER","axisBulletsContainer","_bulletMask","exportable","updateSeriesLegend","updatePlotElements","_parseDataFrom","leftAxesWidth","rightAxesWidth","handleXAxisChange","updateXAxis","handleYAxisChange","updateYAxis","processXAxis","observe","handleXAxisRangeChange","processAxis","processYAxis","handleYAxisRangeChange","getCommonAxisRange","scrollbarX","zoomAxes","updateScrollbar","show_1","minZoomFactor","seriesAppeared","scrollbarY","scrollbar","skipRangeEvents","axes","axisStart","axisEnd","updateSeriesMasks","_xAxes","handleAxisRemoval","_yAxes","removeFromInvalidComponents","backgroundOpacity","_cursor","removeDispose","handleCursorPositionChange","handleCursorZoomStart","handleCursorZoomEnd","handleCursorPanStart","handleCursorPanning","handleCursorPanEnd","handleCursorCanceled","handleHideCursor","tapToActivate","setTapToActivate","xPosition_1","yPosition_1","showSeriesTooltip","exceptAxis","snapToSeries","xAxis_1","yAxis_1","closestDataItem_1","minDistance_1","dxPosition","dyPosition","_cursorXPosition","showAxisTooltip","_cursorYPosition","sortSeriesTooltips","hideObjectTooltip","seriesPoints","topLeft","bottomRight","filteredSeriesPoints","seriesPoint","firstSeries","reverse","averageY","top_1","dropped","nextHeight","pointY","nextY","except","getUpdatedRange","behavior","xRange","priority","yRange","_panStartXRange","_panStartYRange","_panEndXRange","panEndRange","delta","_panEndYRange","maxPanOut","panStartRange","newStart","newEnd","newRange","_scrollbarX","handleXScrollbarChange","arg","_scrollbarY","handleYScrollbarChange","fixRange","declination","realRange","cellWidth","handleWheel","svgPoint","cssScale","plotPoint","handleWheelReal","handleHorizontalWheel","horizontalMouseWheelBehavior","rangeX","rangeY","shiftStep","differenceX","newStartX","newEndX","differenceY","newStartY","newEndY","_mouseWheelDisposer","wheelable","_mouseWheelDisposer2","dataSourceDateFields","populateDataSourceFields","dataSourceNumberFields","len_1","len_2","_zoomOutButton","button","addData","rawDataItem","removeCount","addScrollbarData","removeScrollbarData","removeData","interactions","isTouchProtected","handleTapToActivate","handleTapToActivateDeactivation","sbstate","LineSeriesSegment","fillSprite","strokeSprite","drawSegment","closePoints","smoothnessX","smoothnessY","smooth","lineElement","fillElement","LineSeriesDataItem","LineSeries","minDistance","createSegment","_segmentsIterator","segmentsContainer","initialY","setWorkingValue","setWorkingLocation","initialX","tooltipColorSource","openSegmentWrapper","_adjustedStartIndex","sliceData","findAdjustedIndex","adjustedIndex","openIndex","params","openSegment","addToClose","closeIndex","propertiesChanged","getFirst","valuesFound","updateSegmentProperties","closeSegment","itemProperties","checkOnly","propertyName","currentValue","currentValueStr","disposeChildren","Line","Rectangle","hasLabels","RadarSeriesDataItem","RadarSeries","connectEnds","endAngle","pixelRadius","pixelInnerRadius","unshift","updateRendererRefs","rendererX","rendererY","axisRendererY","AxisFillCircular","setPercentProperty","GridCircular","AxisLabelCircular","fdx","fdy","axisRadius","sign","pixelRadiusY","axisRadiusY","fixPosition","dx","dy","isNegative","relativeRotation","labelRadius","bent","point_1","locationOnPath","dH","dW","_measuredHeight","_measuredWidth","AxisRendererCircular","pixelRadiusReal","useChartAngles","cos","atan2","sin","PI","gridInnerRadius","fitsToBounds","AxisRendererRadial","gridType","axisAngle","gridLocation","WavedCircle","tooltipOrientation","RadarChartDataItem","RadarChart","innerRadiusModifyer","radarContainer","Circle","beforeDraw","innerRect","wr","hr","mr","maxRadius","diameter","_pixelInnerRadius","definedBBox","validatePosition","ClockHand","pin","startWidth","endWidth","hand","Trapezoid","leftSide","rightSide","x0","_pin","_hand","showValue","_value","newAngle","currentAngle","rotationDirection","updateValue","GaugeChartDataItem","GaugeChart","hands","processHand","PercentSeriesDataItem","toValue","ticksContainer","labelsContainer","_slice","slice_1","slices","slicesContainer","PercentSeries","_addAllDataItems","alignLabels","createSlice","_slices","initSlice","initTick","initLabel","arrangeLabels","lh","nextLabel","getNextLabel","arrangeLabels2","previousTop","nextDataItem","handleSliceScale","handleSliceMove","setAlignLabels","labelState","tickState","PercentChartDataItem","PercentChart","PieTick","ix","y0","iy","radiusY","PieSeriesDataItem","radiusValue","PieSeries","shiftRadius","_leftItems","_rightItems","_currentStartAngle","_arcRect","_maxRadiusPercent","radiusValuePercent","aAngle","middleAngle","bAngle","ignoreZeroValues","normalizedMiddleAngle","arcRect","depth","_pixelRadius","_startAngleInternal","_endAngleInternal","PieChartDataItem","PieChart","updateRadius","_chartPixelRadius","updateSeriesAngles","chartCont","chartRadius","chartPixelInnerRadius","seriesRadius","_chartPixelInnerRadius","PieSeries3DDataItem","depthValue","PieSeries3D","Slice3D","depthPercent","PieChart3DDataItem","PieChart3D","invalidateDataUsers","SlicedChartDataItem","SlicedChart","FlowDiagramNode","draggable","inert","invalidateLinks","handleHit","outgoingDataItems","toNode","incomingDataItems","fromNode","link","colorMode","stop_1","stops","stop_2","_incomingDataItems","sortBy","_incomingSorted","fromName","_outgoingDataItems","_outgoingSorted","setColorProperty","_background","column","FlowDiagramLink","positionBullets","_bulletsContainer","_bulletsMask","bulletsMask","middleLine","rotationField","setFill","_gradient","getTooltipX","getTooltipY","FlowDiagramDataItem","toName","_link","link_1","links","FlowDiagram","nodePadding","minNodeSize","linksContainer","nodesContainer","nodes","sortNodes","node","strokeModifier","LinearGradientModifier","opacities","fillModifier","strNode","getNodeValue","_sorted","sortedIterator","incomingTotal","outgoingTotal","totalIncoming","totalOutgoing","changeSorting","_nodes","createNode","_links","createLink","LabelBullet","hideOversized","handleMaxSize","SankeyNode","nextInCoord","nextOutCoord","nameLabel","orientation_1","endX","endY","linkWidth","valueHeight","startX","startY","SankeyLink","tension","xt0","yt0","xt1","yt1","xb0","xb1","yb0","yb1","xm0","xm1","ym0","ym1","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","kxb0","kyb0","kxb1","kyb1","SankeyDiagramDataItem","SankeyDiagram","nodeAlign","_levelCount","level","getNodeLevel","levels","calculateValueHeight","_levelSum","_levelNodesCount","maxSum","availableHeight","maxSumLevel","realValue","levelNodeCount","_maxSumLevel","maxSumLevelNodeCount","finalHeight","_heightAnimation","animationOptions","interpolationEasing","nextCoordinate","levelCoordinate","nodeCount","showReal","nodeHeight","_valueHeight","ChordNode","updateRotation","arc_1","sliceStartAngle_1","childAngle","childRadius","labelAngle","adjustedTotal","nextAngle","nonRibbon","percentWidth","valueAngle","mAngle","trueStartAngle","tx","ty","QuadraticCurve","p1","p2","cp","point2","ChordLink","fromX","fromY","toX","toY","mAngle1","mAngle2","ChordDiagramDataItem","ChordDiagram","chordContainer","newTotal","Column","createAssets","handleKidAdded","ColumnSeriesDataItem","_column","setColumn","columns","_rangesColumns","ColumnSeries","_startLocation","_endLocation","clustered","columnsContainer","_columnsContainer","baseAxisSeries","clusterCount_1","disableUnusedColumns","validateDataElementReal","getStartLocation","getEndLocation","l","percentHeight","outOfBounds","offset","fixHorizontalCoordinate","fixVerticalCoordinate","axisLenght","column_1","realX","realY","setColumnStates","rangeColumn","rangesColumns","_dropFromOpenState","_dropFromPreviousState","_riseFromOpenState","_riseFromPreviousState","droppedFromOpen","setState","droppedFromPrevious","_columns","createColumnTemplate","fromOpenState_1","fromPreviousState_1","TreeMapSeriesDataItem","treeMapDataItem","_dataContext","TreeMapSeries","configField","hideReal","TreeMapDataItem","rows","hasChildren","getDuration","childValue","TreeMap","layoutAlgorithm","squarify","zoomable","maxLevels","currentLevel","hideParentColumns","sorting","xRenderer","yRenderer","seriesTemplates","zoomToChartDataItem","_homeDataItem","_navigationBar","navigationBar","createTreeSeries","_tempSeries","homeDataItem","_homeText","layoutItems","_updateDataItemIndexes","navigationData","parentDataItem","initSeries","createTreeSeriesReal","setData","currentlyZoomed","zoomToSeriesDataItem","toggleBullets","rangeChangeAnimation","_dataDisposers","binaryTree","dice","sliceDice","validateRawData","n","sums","partition","j","valueOffset","valueTarget","k","hi","mid","valueLeft","valueRight","xk","yk","nodeValue","sumValue","newRatio","minRatio","alpha","beta","ratio","i0","i1","row","handleDataItemValueChange","getLegendLevel","legendParent","getExporting","exporting","info","AxisRendererX3D","dx3D","dy3D","handle3DChanged","AxisRendererY3D","Column3D","column3D","Rectangle3D","ColumnSeries3DDataItem","ColumnSeries3D","XYChart3DDataItem","XYChart3D","fixColumns","depthIndex","inversed_1","maskColumns","HeatLegend","markerContainer","markerCount","getMinFromRules","minValue_1","getMaxFromRules","maxValue_1","valueAxis","reverseOrder","minColor","maxColor","seriesFill","minOpacity","maxOpacity","minStrokeOpacity","maxStrokeOpacity","minStroke","maxStroke","strokeGradient","color_1","opacity_1","_valueAxis","dataFieldDefined","updateMinMax","seriesId_1","disposer_1","Candlestick","lowLine","highLine","CandlestickSeriesDataItem","lowValueX","lowValueY","highValueX","highValueY","CandlestickSeries","positiveColor","negativeColor","dropFromOpenState","riseFromOpenState","validateCandlestick","lowLine_1","highLine_1","yOpen","yClose","yLow","yLowField","yHigh","yHighField","open_2","close_2","xOpen","xClose","xLow","xLowField","xHigh","xHighField","rangeLowLine","rangehighLine","_xLowField","_yLowField","_xHighField","_yHighField","cw","ch","OHLC","openLine","highLowLine","closeLine","OHLCSeriesDataItem","OHLCSeries","openLine_1","highLowLine_1","closeLine_1","rangeOpenLine","rangeCloseLine","rangeHighLowLine","StepLineSeriesSegment","noRisers","vertical","StepLineSeriesDataItem","StepLineSeries","startLocationX","endLocationX","startLocationY","endLocationY","RadarColumn","radarColumn","RadarColumnSeriesDataItem","RadarColumnSeries","lAngle","rAngle","tRadius","bRadius","cellAngle","temp","FunnelSlice","bottomWidth","topWidth","expandDistance","pt","pb","pr","pl","ed","tw","bw","tl","tr","br","bl","cpr","cpl","qp1","qp2","tickPoint","tt","tb","bt","bb","mlx","mrx","mty","mby","FunnelTick","p0","labelsOpposite","maxRight","maxBottom","FunnelSeriesDataItem","_sliceLink","sliceLink_1","sliceLinks","FunnelSeries","_nextY","bottomRatio","labelTemplate","dItem","_total","_count","getNextValue","nextValue","nextItem","formDataElement","sliceLink","decorateSlice","linkHeight","getLastLabel","lastLabel","lastY","lastX","_sliceLinks","labelAlign","labelValign","PyramidSeriesDataItem","PyramidSeries","pyramidHeight","valueIs","_nextWidth","relValue","_pyramidHeight","_pyramidWidth","absoluteSum","pyramidWidth","sliceTopWidth","tan","sliceHeight","sliceBottomWidth","totalSquare","square","sliceWidth","PictorialStackedSeriesDataItem","PictorialStackedSeries","_maskSprite","maskSprite","pictureWidth","pictureHeight","newWidth","newHeight","hs","ConeColumn","coneColumn","Cone","ConeSeriesDataItem","ConeSeries","CurvedColumn","curvedColumn","CurvedColumnSeriesDataItem","CurvedColumnSeries","DurationAxisDataItem","DurationAxis","_baseUnit","durationFormatter","axisDurationFormat","baseUnit","divisors","realDivisor","divisors_1","divisors_1_1","divisor","reducedCount","closest","getValueUnit","getFormat","_tooltipDurationFormat","tooltipDurationFormat","CircleBullet","circle","ErrorBullet","errorLine","NavigationBarDataItem","NavigationBar","textLink","TextLink","_linksIterator","triangle","separators","activeLink","fontWeight","getLast","separator","Cursor","_stick","trackable","interaction","handleCursorDown","handleCursorUp","handleCursorMove","_generalBehavior","isLocalElement","svg","_stickPoint","triggerMove","stick","triggerMoveReal","invalidatePosition","getPositions","triggerDown","triggerDownReal","setGlobalStyle","grabbing","triggerUp","triggerUpReal","requestFrame","updatePoint","upPoint","_upPointOrig","_downPointOrig","getHitOption","updateSelection","cancelable","shouldPreventGestures","preventDefault","lockElement","XYCursor","_lineX","_lineY","lineX","lineY","updateSize","_usesSelection","_positionPrecision","fixPoint","updateLinePositions","getPanningRanges","selectionX","selectionY","getRanges","currentX","currentY","handleXTooltipPosition","handleYTooltipPosition","fullWidthLineX","fullWidthLineY","_selection","_snapToDisposer","handleSnap","xx","yy","animationEasing","RadarCursor","truePixelRadius","updateLineX","updateLineY","fillStartAngle","fillEndAngle","downAngle","downRadius","currentRadius","_prevAngle","downSin","downCos","upAngle","upRadius","global","has","cof","inheritIfRequired","toPrimitive","gOPN","gOPD","dP","$trim","NUMBER","$Number","proto","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","charCodeAt","NaN","code","digits","parseInt","arguments","that","valueOf","keys","_v","model","$$v","yearVal","expression","monthVal","ref","pageIndex","mounted","makeXYChart","makePieChart","makeLineChart","formatNumber","fontSize","categoryAxis","columnTemplate","responsive","enabled","pieSeries","lineSeries"],"mappings":"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","file":"js/chunk-d9c8794a.3e0d72c7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pagination-container\",class:{'hidden':_vm.hidden}},[_c('el-pagination',_vm._b({attrs:{\"background\":_vm.background,\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"layout\":_vm.layout,\"page-sizes\":_vm.pageSizes,\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}},'el-pagination',_vm.$attrs,false))],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","Math.easeInOutQuad = function(t, b, c, d) {\r\n  t /= d / 2\r\n  if (t < 1) {\r\n    return c / 2 * t * t + b\r\n  }\r\n  t--\r\n  return -c / 2 * (t * (t - 2) - 1) + b\r\n}\r\n\r\n// requestAnimationFrame for Smart Animating http://goo.gl/sx5sts\r\nvar requestAnimFrame = (function() {\r\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) { window.setTimeout(callback, 1000 / 60) }\r\n})()\r\n\r\n/**\r\n * Because it's so fucking difficult to detect the scrolling element, just move them all\r\n * @param {number} amount\r\n */\r\nfunction move(amount) {\r\n  document.documentElement.scrollTop = amount\r\n  document.body.parentNode.scrollTop = amount\r\n  document.body.scrollTop = amount\r\n}\r\n\r\nfunction position() {\r\n  return document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop\r\n}\r\n\r\n/**\r\n * @param {number} to\r\n * @param {number} duration\r\n * @param {Function} callback\r\n */\r\nexport function scrollTo(to, duration, callback) {\r\n  const start = position()\r\n  const change = to - start\r\n  const increment = 20\r\n  let currentTime = 0\r\n  duration = (typeof (duration) === 'undefined') ? 500 : duration\r\n  var animateScroll = function() {\r\n    // increment the time\r\n    currentTime += increment\r\n    // find the value with the quadratic in-out easing function\r\n    var val = Math.easeInOutQuad(currentTime, start, change, duration)\r\n    // move the document.body\r\n    move(val)\r\n    // do the animation unless its over\r\n    if (currentTime < duration) {\r\n      requestAnimFrame(animateScroll)\r\n    } else {\r\n      if (callback && typeof (callback) === 'function') {\r\n        // the animation is done so lets callback\r\n        callback()\r\n      }\r\n    }\r\n  }\r\n  animateScroll()\r\n}\r\n","<template>\r\n  <div :class=\"{'hidden':hidden}\" class=\"pagination-container\">\r\n    <el-pagination\r\n      :background=\"background\"\r\n      :current-page=\"currentPage\"\r\n      :page-size=\"pageSize\"\r\n      :layout=\"layout\"\r\n      :page-sizes=\"pageSizes\"\r\n      :total=\"total\"\r\n      v-bind=\"$attrs\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { scrollTo } from '@/utils/scroll-to'\r\n\r\nexport default {\r\n  name: 'Pagination',\r\n  props: {\r\n    total: {\r\n      required: true,\r\n      type: Number\r\n    },\r\n    page: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 20\r\n    },\r\n    pageSizes: {\r\n      type: Array,\r\n      default() {\r\n        return [5, 10, 20, 30, 50]\r\n      }\r\n    },\r\n    layout: {\r\n      type: String,\r\n      default: 'total, sizes, prev, pager, next, jumper'\r\n    },\r\n    background: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    autoScroll: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    hidden: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  computed: {\r\n    currentPage: {\r\n      get() {\r\n        return this.page\r\n      },\r\n      set(val) {\r\n        this.$emit('update:page', val)\r\n      }\r\n    },\r\n    pageSize: {\r\n      get() {\r\n        return this.limit\r\n      },\r\n      set(val) {\r\n        this.$emit('update:limit', val)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleSizeChange(val) {\r\n      this.$emit('update:limit', val)\r\n      this.$emit('pagination', { page: this.currentPage, limit: val })\r\n      if (this.autoScroll) {\r\n        scrollTo(0, 800)\r\n      }\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.$emit('update:page', val)\r\n      this.$emit('pagination', { page: val, limit: this.pageSize })\r\n      if (this.autoScroll) {\r\n        scrollTo(0, 800)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.pagination-container {\r\n  background: #fff;\r\n  padding: 32px 16px;\r\n  .btn-prev, .btn-next {\r\n    width: 30px;\r\n  }\r\n}\r\n.pagination-container.hidden {\r\n  display: none;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pagination.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pagination.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./pagination.vue?vue&type=template&id=28b9ca94&\"\nimport script from \"./pagination.vue?vue&type=script&lang=js&\"\nexport * from \"./pagination.vue?vue&type=script&lang=js&\"\nimport style0 from \"./pagination.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { is } from \"../core/utils/Type\";\r\nvar theme = function (object) {\r\n    if (is(object, \"SpriteState\")) {\r\n        object.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Component\")) {\r\n        object.rangeChangeDuration = 500;\r\n        object.interpolationDuration = 500;\r\n        object.sequencedInterpolation = false;\r\n        if (is(object, \"SankeyDiagram\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n        if (is(object, \"FunnelSeries\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n    }\r\n    if (is(object, \"Chart\")) {\r\n        object.defaultState.transitionDuration = 2000;\r\n        object.hiddenState.transitionDuration = 1000;\r\n    }\r\n    if (is(object, \"Tooltip\")) {\r\n        object.animationDuration = 400;\r\n        object.defaultState.transitionDuration = 400;\r\n        object.hiddenState.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Scrollbar\")) {\r\n        object.animationDuration = 500;\r\n    }\r\n    if (is(object, \"Series\")) {\r\n        object.defaultState.transitionDuration = 1000;\r\n        object.hiddenState.transitionDuration = 700;\r\n        object.hiddenState.properties.opacity = 1;\r\n        object.showOnInit = true;\r\n    }\r\n    if (is(object, \"MapSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"PercentSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"FunnelSlice\")) {\r\n        object.defaultState.transitionDuration = 800;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Slice\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Preloader\")) {\r\n        object.hiddenState.transitionDuration = 2000;\r\n    }\r\n    if (is(object, \"Column\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Column3D\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n};\r\nexport default theme;\r\n//# sourceMappingURL=animated.js.map","export { default } from \"../.internal/themes/animated\";\r\n//# sourceMappingURL=animated.js.map","/**\r\n * Functionality for adding images in SVG tree.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to add `<image>` elements to SVG.\r\n *\r\n * @see {@link IImageEvents} for a list of available events\r\n * @see {@link IImageAdapters} for a list of available Adapters\r\n */\r\nvar Image = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Image, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Image() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Image\";\r\n        _this.element = _this.paper.add(\"image\");\r\n        _this.applyTheme();\r\n        _this.width = 50;\r\n        _this.height = 50;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws an `<image>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Image.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this.href) {\r\n            var width = this.innerWidth;\r\n            var height = this.innerHeight;\r\n            if ($type.isNumber(this.widthRatio)) {\r\n                width = height * this.widthRatio;\r\n                this.width = width;\r\n            }\r\n            if ($type.isNumber(this.heightRatio)) {\r\n                height = width * this.heightRatio;\r\n                this.height = height;\r\n            }\r\n            this.element.attr({\r\n                \"width\": width,\r\n                \"height\": height\r\n            });\r\n            this.element.attrNS($dom.XLINK, \"xlink:href\", this.href);\r\n        }\r\n    };\r\n    Object.defineProperty(Image.prototype, \"href\", {\r\n        /**\r\n         * @return Image URI\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"href\");\r\n        },\r\n        /**\r\n         * An image URI.\r\n         *\r\n         * @param value  Image URI\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"href\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"widthRatio\", {\r\n        /**\r\n         * @return Ratio\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"widthRatio\");\r\n        },\r\n        /**\r\n         * Sets image `width` relatively to its `height`.\r\n         *\r\n         * If image's `height = 100` and `widthRatio = 0.5` the actual width will be\r\n         * `50`.\r\n         *\r\n         * @param value  Ratio\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"widthRatio\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"heightRatio\", {\r\n        /**\r\n         * @return Ratio\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"heightRatio\");\r\n        },\r\n        /**\r\n         * Sets image `height` relatively to its `width`.\r\n         *\r\n         * If image's `width = 100` and `heightRatio = 0.5` the actual height will be\r\n         * `50`.\r\n         *\r\n         * @param value  Ratio\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"heightRatio\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            return {\r\n                x: 0,\r\n                y: 0,\r\n                width: this.pixelWidth,\r\n                height: this.pixelHeight\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Image;\r\n}(Sprite));\r\nexport { Image };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Image\"] = Image;\r\n//# sourceMappingURL=Image.js.map","/**\r\n * Module for a multi-part arched line.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Polyline } from \"./Polyline\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a multi-part arched line.\r\n *\r\n * @see {@link IPolyarcEvents} for a list of available events\r\n * @see {@link IPolyarcAdapters} for a list of available Adapters\r\n */\r\nvar Polyarc = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Polyarc, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Polyarc() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Polyarc\";\r\n        _this.controlPointDistance = 0.5;\r\n        _this.controlPointPosition = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creats and adds an SVG path for the arc.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Polyarc.prototype.makePath = function () {\r\n        this._distance = 0;\r\n        var segments = this.segments;\r\n        if (segments && segments.length > 0) {\r\n            var path = \"\";\r\n            this._realSegments = [];\r\n            for (var i = 0, len = segments.length; i < len; i++) {\r\n                var points = segments[i];\r\n                var realPoints = [];\r\n                this._realSegments.push(realPoints);\r\n                if (points.length > 0) {\r\n                    path += $path.moveTo(points[0]);\r\n                    for (var p = 1; p < points.length; p++) {\r\n                        var pointA = points[p - 1];\r\n                        var pointB = points[p];\r\n                        var distanceAB = $math.getDistance(pointB, pointA);\r\n                        var cpDistance = distanceAB * this.controlPointDistance;\r\n                        var controlPointPosition = this.controlPointPosition;\r\n                        var angle = -$math.getAngle(pointA, pointB);\r\n                        var cpx = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 0.5 - cpDistance * $math.sin(angle);\r\n                        var cpy = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 0.5 - cpDistance * $math.cos(angle);\r\n                        var controlPoint1 = { x: cpx, y: cpy };\r\n                        var cpx2 = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 1.5 - cpDistance * $math.sin(angle);\r\n                        var cpy2 = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 1.5 - cpDistance * $math.cos(angle);\r\n                        var controlPoint2 = { x: cpx2, y: cpy2 };\r\n                        path += $path.cubicCurveTo(pointB, controlPoint1, controlPoint2);\r\n                        // we add a lot of points in order to get the position/angle later\r\n                        var stepCount = Math.ceil(distanceAB);\r\n                        var prevPoint = pointA;\r\n                        if (stepCount > 0) {\r\n                            for (var i_1 = 0; i_1 <= stepCount; i_1++) {\r\n                                var point = $math.getPointOnCubicCurve(pointA, pointB, controlPoint1, controlPoint2, i_1 / stepCount);\r\n                                realPoints.push(point);\r\n                                this._distance += $math.getDistance(prevPoint, point);\r\n                                prevPoint = point;\r\n                            }\r\n                        }\r\n                        else {\r\n                            realPoints.push(pointA);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.path = path;\r\n        }\r\n    };\r\n    Object.defineProperty(Polyarc.prototype, \"controlPointPosition\", {\r\n        /**\r\n         * @return Position (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"controlPointPosition\");\r\n        },\r\n        /**\r\n         * Relative position along the line the control point is. (0-1)\r\n         *\r\n         * @default 0.5\r\n         * @param value  Position (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"controlPointPosition\", value);\r\n            this.makePath();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Polyarc.prototype, \"controlPointDistance\", {\r\n        /**\r\n         * @return Distance (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"controlPointDistance\");\r\n        },\r\n        /**\r\n         * Relative distance of the control point. (0-1)\r\n         *\r\n         * Default is half the length of the line. (0.5)\r\n         *\r\n         * @default 0.5\r\n         * @param value  Distance (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"controlPointDistance\", value);\r\n            this.makePath();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Polyarc;\r\n}(Polyline));\r\nexport { Polyarc };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polyarc\"] = Polyarc;\r\n//# sourceMappingURL=Polyarc.js.map","/**\r\n * Morpher module contains functionality that allows morphing one polygon to\r\n * another.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Animation, AnimationDisposer } from \"../utils/Animation\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * Morpher can be used to morph one polygon to some other polygon.\r\n */\r\nvar Morpher = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Morpher, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param morphable An object to morph\r\n     */\r\n    function Morpher(morphable) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A storage for measurements.\r\n         */\r\n        _this._bboxes = [];\r\n        /**\r\n         * Duration of the morphing animation in milliseconds.\r\n         */\r\n        _this.morphDuration = 800;\r\n        /**\r\n         * An easing function to use for morphing animation.\r\n         *\r\n         * @see {@link Ease}\r\n         */\r\n        _this.morphEasing = $ease.cubicOut;\r\n        /**\r\n         * If set to `true`, all separate parts of the multi-part polygon will\r\n         * morph into a single circle or polygon when using built-in methods\r\n         * `morphToCircle()` or `morphToPolygon()`.\r\n         *\r\n         * Otherwise each separate part of polygon will morph to individual target\r\n         * circle or polgyon.\r\n         */\r\n        _this.morphToSingle = true;\r\n        /**\r\n         * A ratio to scale morphed object in relation to the source object.\r\n         */\r\n        _this.scaleRatio = 1;\r\n        _this.className = \"Morpher\";\r\n        _this.morphable = morphable;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Morphs a polygon to another polygon.\r\n     *\r\n     * @param toPoints  Corner points of the target shape\r\n     * @param duration  Duration in milliseconds\r\n     * @param easing    Easing function\r\n     * @return Animation\r\n     */\r\n    Morpher.prototype.morphToPolygon = function (toPoints, duration, easing) {\r\n        var points = this.morphable.currentPoints;\r\n        if (points && toPoints) {\r\n            this.sortPoints(points);\r\n            this.sortPoints(toPoints);\r\n            this._morphFromPointsReal = [];\r\n            this._morphToPointsReal = [];\r\n            if (!$type.hasValue(duration)) {\r\n                duration = this.morphDuration;\r\n            }\r\n            if (!$type.hasValue(easing)) {\r\n                easing = this.morphEasing;\r\n            }\r\n            this._morphFromPointsReal = this.normalizePoints(toPoints, points);\r\n            this._morphToPointsReal = this.normalizePoints(points, toPoints);\r\n            this.morphable.currentPoints = this._morphFromPointsReal;\r\n            var animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n            this._disposers.push(animation);\r\n            animation.start();\r\n            return animation;\r\n        }\r\n    };\r\n    /**\r\n     * [normalizePoints description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param pointsA  Point A\r\n     * @param pointsB  Point B\r\n     * @return Normalized points\r\n     */\r\n    Morpher.prototype.normalizePoints = function (pointsA, pointsB) {\r\n        for (var i = 0, len = pointsA.length; i < len; i++) {\r\n            var surfaceA = pointsA[i][0];\r\n            var holeA = pointsA[i][1];\r\n            var bboxA = $type.getValue($math.getBBox(surfaceA));\r\n            var middleX = bboxA.x + bboxA.width;\r\n            var middleY = bboxA.y + bboxA.height;\r\n            // check if we have the same in PointsB\r\n            if (!pointsB[i]) {\r\n                pointsB[i] = [];\r\n            }\r\n            // check if we have surface in pointsB\r\n            if (surfaceA && !pointsB[i][0]) {\r\n                pointsB[i][0] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];\r\n            }\r\n            if (pointsB[i][0]) {\r\n                pointsB[i][0] = this.addPoints(pointsB[i][0], surfaceA.length);\r\n                var distance = Infinity;\r\n                var splitAt = 0;\r\n                for (var a = 0; a < pointsB[i][0].length; a++) {\r\n                    var newDistance = $math.getDistance(pointsB[i][0][a], surfaceA[0]);\r\n                    if (newDistance < distance) {\r\n                        splitAt = a;\r\n                        distance = newDistance;\r\n                    }\r\n                }\r\n                var partA = pointsB[i][0].slice(0, splitAt);\r\n                var partB = pointsB[i][0].slice(splitAt);\r\n                pointsB[i][0] = partB.concat(partA);\r\n            }\r\n            if (holeA) {\r\n                if (!pointsB[i][1]) {\r\n                    pointsB[i][1] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];\r\n                }\r\n                pointsB[i][1] = this.addPoints(pointsB[i][1], holeA.length);\r\n            }\r\n        }\r\n        return pointsB;\r\n    };\r\n    /**\r\n     * [sortPoints description]\r\n     *\r\n     * @ignore Exclude from doc\r\n     * @todo Description\r\n     * @param points  [description]\r\n     * @return                        common bbox of points\r\n     */\r\n    Morpher.prototype.sortPoints = function (points) {\r\n        points.sort(function (a, b) {\r\n            var bbox1 = $type.getValue($math.getBBox(a[0]));\r\n            var bbox2 = $type.getValue($math.getBBox(b[0]));\r\n            if (bbox1.width * bbox1.height > bbox2.width * bbox2.height) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        });\r\n        var bboxes = [];\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var surface = points[i][0];\r\n            if (surface) {\r\n                bboxes.push($type.getValue($math.getBBox(surface)));\r\n            }\r\n        }\r\n        return $math.getCommonRectangle(bboxes);\r\n    };\r\n    /**\r\n     * Morphs polygon to a circle (it is actually a polygon which makes a circle).\r\n     *\r\n     * @param radius    Target circle radius (px)\r\n     * @param duration  Duration (ms)\r\n     * @param easing    Easing function\r\n     * @return Animation\r\n     */\r\n    Morpher.prototype.morphToCircle = function (radius, duration, easing) {\r\n        var points = this.morphable.points;\r\n        var commonBBox = this.sortPoints(points);\r\n        this._morphFromPointsReal = [];\r\n        this._morphToPointsReal = [];\r\n        if (!$type.hasValue(duration)) {\r\n            duration = this.morphDuration;\r\n        }\r\n        if (!$type.hasValue(easing)) {\r\n            easing = this.morphEasing;\r\n        }\r\n        // surface\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var surface = points[i][0];\r\n            var hole = points[i][1];\r\n            this._morphFromPointsReal[i] = [];\r\n            this._morphToPointsReal[i] = [];\r\n            if (surface) {\r\n                var toPoints = surface;\r\n                var fromPoints = surface;\r\n                var bbox = $type.getValue($math.getBBox(fromPoints)); // this._bboxes[i];\r\n                if (this.morphToSingle) {\r\n                    bbox = $type.getValue(commonBBox);\r\n                }\r\n                var middleX = bbox.x + bbox.width / 2;\r\n                var middleY = bbox.y + bbox.height / 2;\r\n                var realRadius = radius;\r\n                if (!$type.isNumber(realRadius)) {\r\n                    realRadius = Math.min(bbox.width / 2, bbox.height / 2);\r\n                }\r\n                toPoints = [];\r\n                // find angle for the first point\r\n                var startAngle = $math.getAngle({ x: middleX, y: middleY }, surface[0]);\r\n                var count = 100;\r\n                if (surface.length > count) {\r\n                    count = surface.length;\r\n                }\r\n                fromPoints = this.addPoints(surface, count);\r\n                count = fromPoints.length; // add Points might increase number a bit\r\n                var angle = 360 / (count - 1);\r\n                for (var a = 0; a < count; a++) {\r\n                    var realAngle = angle * a + startAngle;\r\n                    var pointOnCircle = { x: middleX + realRadius * $math.cos(realAngle), y: middleY + realRadius * $math.sin(realAngle) };\r\n                    toPoints[a] = pointOnCircle;\r\n                }\r\n                if (hole && hole.length > 0) {\r\n                    for (var i_1 = 0, hlen = hole.length; i_1 < hlen; i_1++) {\r\n                        toPoints.push({ x: middleX, y: middleY });\r\n                    }\r\n                }\r\n                this._morphFromPointsReal[i][0] = fromPoints;\r\n                this._morphToPointsReal[i][0] = toPoints;\r\n            }\r\n        }\r\n        this.morphable.currentPoints = this._morphFromPointsReal;\r\n        var animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n        this._disposers.push(animation);\r\n        animation.start();\r\n        return animation;\r\n    };\r\n    /**\r\n     * [addPoints description]\r\n     *\r\n     * @ignore Exclude from doc\r\n     * @todo Description\r\n     * @param points         [description]\r\n     * @param mustHaveCount  [description]\r\n     * @return [description]\r\n     */\r\n    Morpher.prototype.addPoints = function (points, mustHaveCount) {\r\n        var addToSegmentCount = Math.round(mustHaveCount / points.length);\r\n        var newPoints = [];\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var point0 = points[i];\r\n            var point1 = void 0;\r\n            if (i == points.length - 1) {\r\n                point1 = points[0];\r\n            }\r\n            else {\r\n                point1 = points[i + 1];\r\n            }\r\n            newPoints.push(point0);\r\n            for (var p = 1; p < addToSegmentCount; p++) {\r\n                var percent = p / addToSegmentCount;\r\n                var extraPoint = { x: point0.x + (point1.x - point0.x) * percent, y: point0.y + (point1.y - point0.y) * percent };\r\n                newPoints.push(extraPoint);\r\n            }\r\n            // stop adding in case we already added more than left in original\r\n            if (newPoints.length + points.length - i == mustHaveCount) {\r\n                addToSegmentCount = 0;\r\n            }\r\n        }\r\n        if (newPoints.length < mustHaveCount && points.length > 0) {\r\n            var lastPoint = points[points.length - 1];\r\n            for (var p = newPoints.length; p < mustHaveCount; p++) {\r\n                // add same as last\r\n                newPoints.push({ x: lastPoint.x, y: lastPoint.y });\r\n            }\r\n        }\r\n        return newPoints;\r\n    };\r\n    /**\r\n     * Morphs polygon into a rectangular polygon.\r\n     *\r\n     * @param width     Width of the target rectangle (px)\r\n     * @param height    Height of the target rectangle (px)\r\n     * @param duration  Duration (ms)\r\n     * @param easing    Easing function\r\n     * @return Animation\r\n     */\r\n    Morpher.prototype.morphToRectangle = function (width, height, duration, easing) {\r\n        var points = this.morphable.points;\r\n        this.sortPoints(points);\r\n        this._morphFromPointsReal = [];\r\n        this._morphToPointsReal = [];\r\n        if (!$type.hasValue(duration)) {\r\n            duration = this.morphDuration;\r\n        }\r\n        if (!$type.hasValue(easing)) {\r\n            easing = this.morphEasing;\r\n        }\r\n        //\t\tlet biggestBBox: IRectangle = this._bboxes[this._biggestIndex];\r\n        // surface\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var surface = points[i][0];\r\n            var hole = points[i][1];\r\n            this._morphFromPointsReal[i] = [];\r\n            this._morphToPointsReal[i] = [];\r\n            if (surface) {\r\n                var toPoints = surface;\r\n                var fromPoints = surface;\r\n                var bbox = this._bboxes[i];\r\n                // we only work with first area. TODO: maybe we should find the biggest one?\r\n                if (this.morphToSingle) {\r\n                    //if (i != this._biggestIndex) {\r\n                    //\tbbox = { x: biggestBBox.x + biggestBBox.width / 2, y: biggestBBox.y + biggestBBox.height / 2, width: 0, height: 0 };\r\n                    //}\r\n                }\r\n                var x = bbox.x;\r\n                var y = bbox.y;\r\n                var realWidth = width;\r\n                var realHeight = height;\r\n                if (!$type.isNumber(realWidth)) {\r\n                    realWidth = bbox.width;\r\n                }\r\n                if (!$type.isNumber(realHeight)) {\r\n                    realHeight = bbox.height;\r\n                }\r\n                toPoints = [{ x: x, y: y }, { x: x + realWidth, y: y }, { x: x + realWidth, y: y + realHeight }, { x: x, y: y + realHeight }];\r\n                toPoints = this.addPoints(toPoints, surface.length);\r\n                // if polygon has less points then count, add\r\n                if (surface.length < 4) {\r\n                    for (var i_2 = surface.length; i_2 < 4; i_2++) {\r\n                        toPoints.push({ x: surface[i_2].x, y: surface[i_2].y });\r\n                    }\r\n                }\r\n                if (hole && hole.length > 0) {\r\n                    var middleX = bbox.x + bbox.width / 2;\r\n                    var middleY = bbox.y + bbox.height / 2;\r\n                    for (var i_3 = 0, hlen = hole.length; i_3 < hlen; i_3++) {\r\n                        toPoints.push({ x: middleX, y: middleY });\r\n                    }\r\n                }\r\n                this._morphFromPointsReal[i][0] = fromPoints;\r\n                this._morphToPointsReal[i][0] = toPoints;\r\n            }\r\n        }\r\n        this.morphable.currentPoints = this._morphFromPointsReal;\r\n        var animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n        this._disposers.push(animation);\r\n        animation.start();\r\n        return animation;\r\n    };\r\n    Object.defineProperty(Morpher.prototype, \"morphProgress\", {\r\n        /**\r\n         * Returns the progress of morph transition.\r\n         *\r\n         * @return Progress (0-1)\r\n         */\r\n        get: function () {\r\n            return this._morphProgress;\r\n        },\r\n        /**\r\n         * Progress of the morph transition.\r\n         *\r\n         * Setting this will also trigger actual transformation.\r\n         *\r\n         * @param value  Progress (0-1)\r\n         */\r\n        set: function (value) {\r\n            this._morphProgress = value;\r\n            var currentPoints = [];\r\n            if (value != null) {\r\n                var fromPoints = this._morphFromPointsReal;\r\n                var toPoints = this._morphToPointsReal;\r\n                if (fromPoints != null && toPoints != null) {\r\n                    for (var i = 0, len = fromPoints.length; i < len; i++) {\r\n                        var currentArea = [];\r\n                        currentPoints.push(currentArea);\r\n                        var surfaceFrom = fromPoints[i][0];\r\n                        var holeFrom = fromPoints[i][1];\r\n                        var surfaceTo = toPoints[i][0];\r\n                        var holeTo = toPoints[i][1];\r\n                        if (surfaceFrom && surfaceFrom.length > 0 && surfaceTo && surfaceTo.length > 0) {\r\n                            var currentSurface = [];\r\n                            for (var i_4 = 0, slen = surfaceFrom.length; i_4 < slen; i_4++) {\r\n                                var point0 = surfaceFrom[i_4];\r\n                                var point1 = surfaceTo[i_4];\r\n                                var currentPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value };\r\n                                currentSurface.push(currentPoint);\r\n                            }\r\n                            currentArea[0] = currentSurface;\r\n                        }\r\n                        if (holeFrom && holeFrom.length > 0 && holeTo && holeTo.length > 0) {\r\n                            var currentHole = [];\r\n                            for (var i_5 = 0, hlen = holeFrom.length; i_5 < hlen; i_5++) {\r\n                                var point0 = holeFrom[i_5];\r\n                                var point1 = holeTo[i_5];\r\n                                var currentPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value };\r\n                                currentHole.push(currentPoint);\r\n                            }\r\n                            currentArea[1] = currentHole;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.morphable.currentPoints = currentPoints;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Restores the polygon to its original appearance.\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param easing    Easing function\r\n     * @return Animation\r\n     */\r\n    Morpher.prototype.morphBack = function (duration, easing) {\r\n        this._morphToPointsReal = this._morphFromPointsReal;\r\n        this._morphFromPointsReal = this.morphable.currentPoints;\r\n        if (!$type.hasValue(duration)) {\r\n            duration = this.morphDuration;\r\n        }\r\n        if (!$type.hasValue(easing)) {\r\n            easing = this.morphEasing;\r\n        }\r\n        var animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n        this._disposers.push(animation);\r\n        animation.start();\r\n        return animation;\r\n    };\r\n    Object.defineProperty(Morpher.prototype, \"animations\", {\r\n        /**\r\n         * Returns a list of morph animations currently being played.\r\n         *\r\n         * @return List of animations\r\n         */\r\n        get: function () {\r\n            if (!this._animations) {\r\n                this._animations = [];\r\n                this._disposers.push(new AnimationDisposer(this._animations));\r\n            }\r\n            return this._animations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Morpher;\r\n}(BaseObject));\r\nexport { Morpher };\r\n//# sourceMappingURL=Morpher.js.map","/**\r\n * Polygon module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Morpher } from \"../utils/Morpher\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a polygon.\r\n *\r\n * @see {@link IPolygonEvents} for a list of available events\r\n * @see {@link IPolygonAdapters} for a list of available Adapters\r\n */\r\nvar Polygon = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Polygon, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Polygon() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Polygon\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.shapeRendering = \"auto\";\r\n        _this._currentPoints = [];\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Polygon.prototype, \"points\", {\r\n        /**\r\n         * @return Polygon points\r\n         */\r\n        get: function () {\r\n            var points = this.getPropertyValue(\"points\");\r\n            var path = this.path;\r\n            if (path && (!points || points.length == 0)) {\r\n                var valueStr = path.slice(1, path.length - 1);\r\n                var segments = valueStr.split(\"ZM\");\r\n                for (var s = 0; s < segments.length; s++) {\r\n                    var segment = segments[s];\r\n                    if (segment.length > 0) {\r\n                        var areaHole = segment.split(\"M\");\r\n                        var areaArr = areaHole[0];\r\n                        var holeArr = areaHole[1];\r\n                        if (areaArr && areaArr.length > 0) {\r\n                            var pointsArr = areaArr.split(\"L\");\r\n                            if (pointsArr.length > 0) {\r\n                                var area = [];\r\n                                var areaAndHole = [area];\r\n                                points.push(areaAndHole);\r\n                                for (var p = 0; p < pointsArr.length; p++) {\r\n                                    var coords = pointsArr[p].split(\",\");\r\n                                    area.push({ x: +coords[0], y: +coords[1] });\r\n                                }\r\n                                if (holeArr && holeArr.length > 0) {\r\n                                    var pointsArr_1 = holeArr.split(\"L\");\r\n                                    if (pointsArr_1.length > 0) {\r\n                                        var hole = [];\r\n                                        areaAndHole.push(hole);\r\n                                        for (var p = pointsArr_1.length - 1; p >= 0; p--) {\r\n                                            var coords = pointsArr_1[p].split(\",\");\r\n                                            hole.push({ x: +coords[0], y: +coords[1] });\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.setPropertyValue(\"points\", points);\r\n                this._currentPoints = points;\r\n            }\r\n            return points;\r\n        },\r\n        /**\r\n         * An array of X/Y coordinates for each elbow of the polygon.\r\n         *\r\n         * @todo Example\r\n         * @param points  Polygon points\r\n         */\r\n        set: function (points) {\r\n            this.setPropertyValue(\"points\", points, true);\r\n            this._currentPoints = points;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Polygon.prototype, \"currentPoints\", {\r\n        /**\r\n         * @return Polygon points\r\n         */\r\n        get: function () {\r\n            if ((!this._currentPoints || this._currentPoints.length == 0) && this.path) {\r\n                this._currentPoints = this.points;\r\n            }\r\n            return this._currentPoints;\r\n        },\r\n        /**\r\n         * Current points. Used when morphing the element, so that original `points`\r\n         * are not overwritten.\r\n         *\r\n         * @param points  Polygon points\r\n         */\r\n        set: function (points) {\r\n            if (this._currentPoints != points) {\r\n                this._currentPoints = points;\r\n                this.draw();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Polygon.prototype.draw = function () {\r\n        var path = \"\";\r\n        var points = this._currentPoints;\r\n        var left;\r\n        var right;\r\n        var top;\r\n        var bottom;\r\n        if (points.length > 0) {\r\n            // separate areas\r\n            for (var i = 0, len = points.length; i < len; i++) {\r\n                // surface\r\n                var surface = points[i][0];\r\n                var hole = points[i][1];\r\n                if (surface && surface.length > 0) {\r\n                    var point = surface[0];\r\n                    path += $path.moveTo(point);\r\n                    for (var s = 0; s < surface.length; s++) {\r\n                        point = surface[s];\r\n                        path += $path.lineTo(point);\r\n                        if (!$type.isNumber(right) || (right < point.x)) {\r\n                            right = point.x;\r\n                        }\r\n                        if (!$type.isNumber(left) || (left > point.x)) {\r\n                            left = point.x;\r\n                        }\r\n                        if (!$type.isNumber(top) || (top > point.y)) {\r\n                            top = point.y;\r\n                        }\r\n                        if (!$type.isNumber(bottom) || (bottom < point.y)) {\r\n                            bottom = point.y;\r\n                        }\r\n                    }\r\n                }\r\n                // hole\r\n                if (hole && hole.length > 0) {\r\n                    var point = hole[0];\r\n                    path += $path.moveTo(point);\r\n                    for (var h = 0, hlen = hole.length; h < hlen; h++) {\r\n                        point = hole[h];\r\n                        path += $path.lineTo(point);\r\n                    }\r\n                }\r\n            }\r\n            if (path) {\r\n                path += $path.closePath();\r\n            }\r\n            this.bbox.x = left;\r\n            this.bbox.y = top;\r\n            this.bbox.width = right - left;\r\n            this.bbox.height = bottom - top;\r\n            _super.prototype.setPath.call(this, path);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Polygon.prototype.setPath = function (value) {\r\n        if (_super.prototype.setPath.call(this, value)) {\r\n            this.points = [];\r\n            this._bbox = this.group.getBBox();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Measures element\r\n     */\r\n    Polygon.prototype.measureElement = function () {\r\n        // Overriding to avoid extra measurement.\r\n    };\r\n    Object.defineProperty(Polygon.prototype, \"centerPoint\", {\r\n        /**\r\n         * A calculated center point for the shape.\r\n         *\r\n         * @readonly\r\n         * @return Center\r\n         */\r\n        get: function () {\r\n            return { x: this.bbox.x + this.bbox.width / 2, y: this.bbox.y + this.bbox.height / 2 };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Polygon.prototype, \"morpher\", {\r\n        /**\r\n         * A [[Morpher]] instance that is used to morph polygon into some other\r\n         * shape.\r\n         *\r\n         * @readonly\r\n         * @return Morpher instance\r\n         */\r\n        get: function () {\r\n            if (!this._morpher) {\r\n                this._morpher = new Morpher(this);\r\n                this._disposers.push(this._morpher);\r\n            }\r\n            return this._morpher;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Polygon;\r\n}(Sprite));\r\nexport { Polygon };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polygon\"] = Polygon;\r\n//# sourceMappingURL=Polygon.js.map","/**\r\n * Preloader module.\r\n *\r\n * Preloader is a progress indicator.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Slice } from \"./Slice\";\r\nimport { Label } from \"./Label\";\r\nimport { registry } from \"../Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IPreloaderEvents} for a list of available events\r\n * @see {@link IPreloaderAdapters} for a list of available Adapters\r\n */\r\nvar Preloader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Preloader, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Preloader() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"Preloader\";\r\n        // Set dimensions\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create main container\r\n        var sliceContainer = _this.createChild(Container);\r\n        sliceContainer.shouldClone = false;\r\n        // Add background (100%) slice\r\n        var backgroundSlice = sliceContainer.createChild(Slice);\r\n        backgroundSlice.shouldClone = false;\r\n        backgroundSlice.radius = 53;\r\n        backgroundSlice.arc = 360;\r\n        backgroundSlice.fill = interfaceColors.getFor(\"fill\");\r\n        backgroundSlice.fillOpacity = 0.8;\r\n        backgroundSlice.innerRadius = 42;\r\n        backgroundSlice.isMeasured = false;\r\n        _this.backgroundSlice = backgroundSlice;\r\n        // Add progress slice\r\n        var progressSlice = sliceContainer.createChild(Slice);\r\n        progressSlice.shouldClone = false;\r\n        progressSlice.radius = 50;\r\n        progressSlice.innerRadius = 45;\r\n        progressSlice.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        progressSlice.fillOpacity = 0.2;\r\n        progressSlice.isMeasured = false;\r\n        _this.progressSlice = progressSlice;\r\n        // Add text label element\r\n        var label = sliceContainer.createChild(Label);\r\n        label.shouldClone = false;\r\n        label.horizontalCenter = \"middle\";\r\n        label.verticalCenter = \"middle\";\r\n        label.isMeasured = false;\r\n        label.fill = interfaceColors.getFor(\"text\");\r\n        label.align = \"center\";\r\n        label.valign = \"middle\";\r\n        label.fillOpacity = 0.4;\r\n        _this.label = label;\r\n        // Set defaults\r\n        _this.background.opacity = 1;\r\n        _this.background.fill = interfaceColors.getFor(\"background\");\r\n        _this.contentAlign = \"center\";\r\n        _this.contentValign = \"middle\";\r\n        _this.delay = 300;\r\n        // Create hidden state\r\n        var hiddenState = _this.states.create(\"hidden\");\r\n        hiddenState.properties.opacity = 0;\r\n        // Hide by default\r\n        _this.visible = false;\r\n        _this.hide(0);\r\n        _this.__disabled = true;\r\n        // Make it disposable\r\n        // @todo Maybe it's enough to just dispose `sliceContainer`?\r\n        _this._disposers.push(_this.backgroundSlice);\r\n        _this._disposers.push(_this.progressSlice);\r\n        _this._disposers.push(_this.label);\r\n        _this._disposers.push(sliceContainer);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Preloader.prototype, \"progress\", {\r\n        /**\r\n         * @return Progress (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"progress\");\r\n        },\r\n        /**\r\n         * Current preload progress. (0-1)\r\n         *\r\n         * * 0 - 0%\r\n         * * 0.5 - 50%\r\n         * * 1 - 100%\r\n         *\r\n         * Setting this to a value less than 1, will automatically reveal the\r\n         * preloader, while setting it to 1 (100%) will hide it.\r\n         *\r\n         * @param value Progress (0-1)\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            this.__disabled = false;\r\n            this.validateLayout(); // show not in center without this\r\n            this.setPropertyValue(\"progress\", value);\r\n            /*if (!this.visible && value == 1) {\r\n                return;\r\n            }*/\r\n            this.progressSlice.arc = 360 * value;\r\n            if (this.label) {\r\n                this.label.text = Math.round(value * 100) + \"%\";\r\n            }\r\n            if (value >= 1) {\r\n                // Cancel the timeout\r\n                if (this._started) {\r\n                    this._started = undefined;\r\n                }\r\n                // TODO remove closure ?\r\n                registry.events.once(\"enterframe\", function () {\r\n                    var animation = _this.hide();\r\n                    if (animation && !animation.isFinished()) {\r\n                        animation.events.once(\"animationended\", function () {\r\n                            _this.__disabled = true;\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.__disabled = true;\r\n                    }\r\n                });\r\n                this.interactionsEnabled = false;\r\n                this.setPropertyValue(\"progress\", 0);\r\n            }\r\n            else if (value > 0) {\r\n                if (this.delay) {\r\n                    if (!this._started) {\r\n                        this._started = new Date().getTime();\r\n                    }\r\n                    else if ((this._started + this.delay) <= new Date().getTime()) {\r\n                        this.__disabled = false;\r\n                        this.show();\r\n                        this.interactionsEnabled = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this.__disabled = false;\r\n                    this.show();\r\n                    this.interactionsEnabled = true;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Preloader.prototype, \"delay\", {\r\n        /**\r\n         * @return Delay (ms)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"delay\");\r\n        },\r\n        /**\r\n         * Delay display of preloader by X milliseconds.\r\n         *\r\n         * When loading starts (`progress` is set to <1) and finishes (`progress` is\r\n         * set to 1) before `delay` ms, the loader is never shown.\r\n         *\r\n         * This is used to avoid brief flashing of the preload for very quick loads.\r\n         *\r\n         * @default 1000\r\n         * @param value  Delay (ms)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"delay\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Preloader;\r\n}(Container));\r\nexport { Preloader };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Preloader\"] = Preloader;\r\n//# sourceMappingURL=Preloader.js.map","/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\r\nvar Slider = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Slider, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Slider() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Slider\";\r\n        _this.thumb.opacity = 0;\r\n        _this.thumb.interactionsEnabled = false;\r\n        _this.endGrip.opacity = 0;\r\n        _this.endGrip.interactionsEnabled = false;\r\n        _this.startGrip.events.on(\"drag\", function () {\r\n            _this.endGrip.x = _this.startGrip.x;\r\n            _this.endGrip.y = _this.startGrip.y;\r\n        });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Slider.prototype, \"__end\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._start;\r\n        },\r\n        set: function (value) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slider.prototype, \"end\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._start;\r\n        },\r\n        /**\r\n         * Relative position (0-1) of the end grip.\r\n         *\r\n         * @param position  Position (0-1)\r\n         */\r\n        set: function (position) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slider.prototype, \"start\", {\r\n        /**\r\n         * @return Position (0-1)\r\n         */\r\n        get: function () {\r\n            return this._start;\r\n        },\r\n        /**\r\n         * Relative position (0-1) of the start grip.\r\n         *\r\n         * @param position  Position (0-1)\r\n         */\r\n        set: function (position) {\r\n            if (!this._isBusy) {\r\n                this.__start = position;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Slider;\r\n}(Scrollbar));\r\nexport { Slider };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slider\"] = Slider;\r\n//# sourceMappingURL=Slider.js.map","/**\r\n * Play button functionality.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button } from \"./Button\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Triangle } from \"./Triangle\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IPlayButtonEvents} for a list of available events\r\n * @see {@link IPlayButtonAdapters} for a list of available Adapters\r\n */\r\nvar PlayButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PlayButton, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PlayButton() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PlayButton\";\r\n        _this.padding(12, 12, 12, 12);\r\n        _this.showSystemTooltip = true;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var background = _this.background;\r\n        background.cornerRadius(25, 25, 25, 25);\r\n        background.fill = interfaceColors.getFor(\"primaryButton\");\r\n        background.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\r\n        background.strokeOpacity = 0;\r\n        background.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n        background.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n        // Create a play icon\r\n        var playIcon = new Triangle();\r\n        playIcon.direction = \"right\";\r\n        playIcon.width = 9;\r\n        playIcon.height = 11;\r\n        playIcon.marginLeft = 1;\r\n        playIcon.marginRight = 1;\r\n        playIcon.horizontalCenter = \"middle\";\r\n        playIcon.verticalCenter = \"middle\";\r\n        playIcon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n        playIcon.fill = playIcon.stroke;\r\n        _this.icon = playIcon;\r\n        // Create a play icon\r\n        var stopIcon = new RoundedRectangle();\r\n        stopIcon.width = 11;\r\n        stopIcon.height = 11;\r\n        stopIcon.horizontalCenter = \"middle\";\r\n        stopIcon.verticalCenter = \"middle\";\r\n        stopIcon.cornerRadius(0, 0, 0, 0);\r\n        stopIcon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n        stopIcon.fill = playIcon.stroke;\r\n        _this.togglable = true;\r\n        var activeState = _this.states.create(\"active\");\r\n        activeState.transitionDuration = 0;\r\n        activeState.properties.icon = stopIcon;\r\n        _this.defaultState.transitionDuration = 0;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PlayButton.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Play\");\r\n        }\r\n    };\r\n    return PlayButton;\r\n}(Button));\r\nexport { PlayButton };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PlayButton\"] = PlayButton;\r\n//# sourceMappingURL=PlayButton.js.map","import * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadialGradient } from \"./RadialGradient\";\r\nimport { GradientModifier } from \"./GradientModifier\";\r\nimport { registry } from \"../../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class can be used to modify radial gradient steps, changing visual\r\n * properties like lightness, brightness, opacity of each set.\r\n *\r\n * It can also set offsets for each gradient step.\r\n *\r\n * E.g. if I want to fill a columns in a column series to be a solid fill from\r\n * top to 80% of height, then gradually fades out, I can use the following\r\n * gradient modifier as a `fillModifier`:\r\n *\r\n * ```TypeScript\r\n * let fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JavaScript\r\n * var fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JSON\r\n * \"series\": [{\r\n *   \"type\": \"ColumnSeries\",\r\n *   \"columns\": {\r\n *     \"fillModifier\": {\r\n *       \"type\": \"LinearGradientModifier\",\r\n *       \"opacities\": [1, 1, 0],\r\n *       \"offsets\": [0, 0.8, 1]\r\n *     }\r\n *   }\r\n * }]\r\n * ```\r\n */\r\nvar RadialGradientModifier = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadialGradientModifier, _super);\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function RadialGradientModifier() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadialGradientModifier\";\r\n        _this.gradient = new RadialGradient();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    RadialGradientModifier.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.gradient = source.gradient.clone();\r\n    };\r\n    return RadialGradientModifier;\r\n}(GradientModifier));\r\nexport { RadialGradientModifier };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadialGradientModifier\"] = RadialGradientModifier;\r\n//# sourceMappingURL=RadialGradientModifier.js.map","import * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $path from \"../../rendering/Path\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Line pattern.\r\n */\r\nvar LinePattern = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LinePattern, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LinePattern() {\r\n        var _this = _super.call(this) || this;\r\n        _this.properties[\"gap\"] = 0;\r\n        _this._line = _this.paper.add(\"path\");\r\n        _this.addElement(_this._line);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the pattern.\r\n     */\r\n    LinePattern.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n            this.properties[\"shapeRendering\"] = \"auto\";\r\n        }\r\n        if (this._line) {\r\n            var w = this.width;\r\n            var h = this.height;\r\n            var path = \"\";\r\n            if (!this.gap) {\r\n                if (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n                    path = $path.moveTo({ x: -w, y: h / 2 }) + $path.lineTo({ x: w * 2, y: h / 2 });\r\n                    this.properties[\"rotationX\"] = this.width / 2;\r\n                    this.properties[\"rotationY\"] = this.height / 2;\r\n                }\r\n                else {\r\n                    path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n                }\r\n            }\r\n            else {\r\n                var step = this.gap + this.strokeWidth;\r\n                var count = this.height / step;\r\n                for (var i = -count / 2; i < count * 1.5; i++) {\r\n                    if (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n                        path += $path.moveTo({ x: -w, y: (i + 0.5) * step }) + $path.lineTo({ x: w * 2, y: (i + 0.5) * step });\r\n                        this.properties[\"rotationX\"] = this.width / 2;\r\n                        this.properties[\"rotationY\"] = this.height / 2;\r\n                    }\r\n                    else {\r\n                        path += $path.moveTo({ x: -w, y: i * step }) + $path.lineTo({ x: w * 2, y: i * step });\r\n                    }\r\n                }\r\n            }\r\n            this._line.attr({ \"d\": path });\r\n        }\r\n    };\r\n    Object.defineProperty(LinePattern.prototype, \"gap\", {\r\n        /**\r\n         * @return gap\r\n         */\r\n        get: function () {\r\n            return this.properties[\"gap\"];\r\n        },\r\n        /**\r\n         * Number of pixels between pattern lines.\r\n         *\r\n         * The pattern will automatically draw required number of lines to fill\r\n         * pattern area maintaining `gap` distance between them.\r\n         *\r\n         * 0 (zero) means only single line will be drawn.\r\n         *\r\n         * @default 0\r\n         * @since 4.7.7\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"gap\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LinePattern;\r\n}(Pattern));\r\nexport { LinePattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinePattern\"] = LinePattern;\r\n//# sourceMappingURL=LinePattern.js.map","/**\r\n * Rectangular pattern module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Rectangular pattern\r\n */\r\nvar RectPattern = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RectPattern, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RectPattern() {\r\n        var _this = _super.call(this) || this;\r\n        _this.rectHeight = 1;\r\n        _this.rectWidth = 1;\r\n        _this._rect = _this.paper.add(\"rect\");\r\n        _this.addElement(_this._rect);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the rectangular element.\r\n     */\r\n    RectPattern.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        this.properties[\"rotationX\"] = this.width / 2;\r\n        this.properties[\"rotationY\"] = this.height / 2;\r\n        if (this._rect) {\r\n            this._rect.attr({ \"width\": this.rectWidth, \"height\": this.rectHeight, \"x\": (this.width - this.rectWidth) / 2, \"y\": (this.height - this.rectHeight) / 2 });\r\n        }\r\n    };\r\n    Object.defineProperty(RectPattern.prototype, \"rectWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rectWidth\"];\r\n        },\r\n        /**\r\n         * Rectangle width in pixels.\r\n         *\r\n         * @param value Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rectWidth\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RectPattern.prototype, \"rectHeight\", {\r\n        /**\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rectHeight\"];\r\n        },\r\n        /**\r\n         * Rectangle height in pixels.\r\n         *\r\n         * @param value Height (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rectHeight\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RectPattern;\r\n}(Pattern));\r\nexport { RectPattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;\r\n//# sourceMappingURL=RectPattern.js.map","/**\r\n * Module for \"Colorize\" filter.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter } from \"./Filter\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\r\nvar ColorizeFilter = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ColorizeFilter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColorizeFilter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColorizeFilter\";\r\n        // Create elements\r\n        // NOTE: we do not need to add each individual element to `_disposers`\r\n        // because `filterPrimitives` has an event handler which automatically adds\r\n        // anything added to it to `_disposers`\r\n        _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\r\n        _this.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n        //this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\r\n        _this.filterPrimitives.push(_this.feColorMatrix);\r\n        // Set default properties\r\n        _this.intensity = 1;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)applies colors to the already existing filter by modifying filyer's\r\n     * color matrix element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColorizeFilter.prototype.applyFilter = function () {\r\n        var i = this.intensity;\r\n        var ii = 1 - i;\r\n        var r;\r\n        var g;\r\n        var b;\r\n        var color = this.color;\r\n        if (color && color.rgb) {\r\n            r = color.rgb.r / 255 * i;\r\n            g = color.rgb.g / 255 * i;\r\n            b = color.rgb.b / 255 * i;\r\n        }\r\n        else {\r\n            r = 0;\r\n            g = 0;\r\n            b = 0;\r\n        }\r\n        this.feColorMatrix.attr({ \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\" });\r\n    };\r\n    Object.defineProperty(ColorizeFilter.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"color\"];\r\n        },\r\n        /**\r\n         * Target color to apply to the element.\r\n         *\r\n         * Depending on the `intensity`, all colors of the target element will steer\r\n         * towards this color.\r\n         *\r\n         * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"color\"] = value;\r\n            this.applyFilter();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorizeFilter.prototype, \"intensity\", {\r\n        /**\r\n         * @return Intensity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties.intensity;\r\n        },\r\n        /**\r\n         * Intensity of the color (0-1).\r\n         *\r\n         * The bigger the number the more of a `color` target's colors will become.\r\n         *\r\n         * 0 means the colors will remain as they are.\r\n         * 1 means all colors will become the target `color`.\r\n         *\r\n         * @default 1\r\n         * @param value  Intensity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties.intensity = value;\r\n            this.applyFilter();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColorizeFilter;\r\n}(Filter));\r\nexport { ColorizeFilter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;\r\n//# sourceMappingURL=ColorizeFilter.js.map","/**\r\n * Module for \"Blur\" filter.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter } from \"./Filter\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"Blur\" filter.\r\n */\r\nvar BlurFilter = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlurFilter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function BlurFilter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"BlurFilter\";\r\n        // Create elements\r\n        // NOTE: we do not need to add each individual element to `_disposers`\r\n        // because `filterPrimitives` has an event handler which automatically adds\r\n        // anything added to it to `_disposers`\r\n        _this.feGaussianBlur = _this.paper.add(\"feGaussianBlur\");\r\n        _this.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n        _this.filterPrimitives.push(_this.feGaussianBlur);\r\n        // Set default properties\r\n        _this.width = 200;\r\n        _this.height = 200;\r\n        _this.blur = 1.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BlurFilter.prototype, \"blur\", {\r\n        /**\r\n         * @return Blur\r\n         */\r\n        get: function () {\r\n            return this.properties.blur;\r\n        },\r\n        /**\r\n         * Blur value.\r\n         *\r\n         * The bigger the value, the blurrier the target element will become.\r\n         *\r\n         * @default 1.5\r\n         * @param value Blur\r\n         */\r\n        set: function (value) {\r\n            this.properties.blur = value;\r\n            this.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return BlurFilter;\r\n}(Filter));\r\nexport { BlurFilter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;\r\n//# sourceMappingURL=BlurFilter.js.map","/**\r\n * Module for \"Focus\" filter.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Filter } from \"./Filter\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"Focus\" filter.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n */\r\nvar FocusFilter = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FocusFilter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FocusFilter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FocusFilter\";\r\n        // Create elements\r\n        // NOTE: we do not need to add each individual element to `_disposers`\r\n        // because `filterPrimitives` has an event handler which automatically adds\r\n        // anything added to it to `_disposers`\r\n        _this.feFlood = _this.paper.add(\"feFlood\");\r\n        _this.feFlood.attr({ \"flood-color\": new InterfaceColorSet().getFor(\"primaryButtonHover\"), \"result\": \"base\" });\r\n        _this.filterPrimitives.push(_this.feFlood);\r\n        _this.feMorphology = _this.paper.add(\"feMorphology\");\r\n        _this.feMorphology.attr({ \"result\": \"bigger\", \"in\": \"SourceGraphic\", \"operator\": \"dilate\", \"radius\": \"2\" });\r\n        _this.filterPrimitives.push(_this.feMorphology);\r\n        _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\r\n        _this.feColorMatrix.attr({ \"result\": \"mask\", \"in\": \"bigger\", \"type\": \"matrix\", \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\" });\r\n        _this.filterPrimitives.push(_this.feColorMatrix);\r\n        _this.feComposite = _this.paper.add(\"feComposite\");\r\n        _this.feComposite.attr({ \"result\": \"drop\", \"in\": \"base\", \"in2\": \"mask\", \"operator\": \"in\" });\r\n        _this.filterPrimitives.push(_this.feComposite);\r\n        _this.feBlend = _this.paper.add(\"feBlend\");\r\n        _this.feBlend.attr({ \"in\": \"SourceGraphic\", \"in2\": \"drop\", \"mode\": \"normal\" });\r\n        _this.filterPrimitives.push(_this.feBlend);\r\n        // Set default properties\r\n        _this.width = 130;\r\n        _this.height = 130;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FocusFilter.prototype, \"stroke\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"stroke\"];\r\n        },\r\n        /**\r\n         * Stroke (outline) color.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"stroke\"] = value;\r\n            this.feFlood.attr({ \"flood-color\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FocusFilter.prototype, \"strokeWidth\", {\r\n        /**\r\n         * @return Outline thickness (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeWidth\"];\r\n        },\r\n        /**\r\n         * Stroke (outline) thickness in pixels.\r\n         *\r\n         * @param value  Outline thickness (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeWidth\"] = value;\r\n            this.feMorphology.attr({ \"radius\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FocusFilter.prototype, \"opacity\", {\r\n        /**\r\n         * @return Outline opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"opacity\"];\r\n        },\r\n        /**\r\n         * Opacity of the outline. (0-1)\r\n         *\r\n         * @param value  Outline opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"opacity\"] = value;\r\n            this.feColorMatrix.attr({ \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" + value + \" 0\" });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets filter's target element.\r\n     *\r\n     * In addition it also disables built-in focus outline on element this\r\n     * filter is applied to.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Element filter is being attached to\r\n     */\r\n    FocusFilter.prototype.setSprite = function (value) {\r\n        if (this._sprite && this._sprite != value) {\r\n            this._sprite.group.removeStyle(\"outline\");\r\n        }\r\n        value.group.addStyle({\r\n            \"outline\": \"none\"\r\n        });\r\n        _super.prototype.setSprite.call(this, value);\r\n    };\r\n    return FocusFilter;\r\n}(Filter));\r\nexport { FocusFilter };\r\n//# sourceMappingURL=FocusFilter.js.map","/**\r\n * Rectangular pattern module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Circular pattern\r\n */\r\nvar CirclePattern = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CirclePattern, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CirclePattern() {\r\n        var _this = _super.call(this) || this;\r\n        _this.properties[\"radius\"] = 2;\r\n        _this._circle = _this.paper.add(\"circle\");\r\n        _this.addElement(_this._circle);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the circle element.\r\n     */\r\n    CirclePattern.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this._circle) {\r\n            this._circle.attr({ \"r\": this.radius, \"cx\": this.width / 2, \"cy\": this.height / 2 });\r\n        }\r\n    };\r\n    Object.defineProperty(CirclePattern.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"radius\"];\r\n        },\r\n        /**\r\n         * Circle radius in pixels.\r\n         *\r\n         * @param value Radius (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"radius\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CirclePattern;\r\n}(Pattern));\r\nexport { CirclePattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CirclePattern\"] = CirclePattern;\r\n//# sourceMappingURL=CirclePattern.js.map","/**\r\n * This module contains PatternSet object definition\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Color } from \"./Color\";\r\nimport { InterfaceColorSet } from \"./InterfaceColorSet\";\r\nimport { LinePattern } from \"../rendering/fills/LinePattern\";\r\nimport { RectPattern } from \"../rendering/fills/RectPattern\";\r\nimport { CirclePattern } from \"../rendering/fills/CirclePattern\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines an interable list of distinctive patterns that can be used in\r\n * conjunction to colors to generate various fill patterns.\r\n *\r\n * @important\r\n * @since 4.7.5\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nvar PatternSet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PatternSet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PatternSet() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the list of the colors in this set. (preset or auto-generated)\r\n         */\r\n        _this._list = [];\r\n        /**\r\n         * Current step.\r\n         */\r\n        _this._currentStep = 0;\r\n        /**\r\n         * If set to non-zero value, the PatternSet will start iterating patterns from\r\n         * that particular index, not the first pattern in the list.\r\n         */\r\n        _this._startIndex = 0;\r\n        /**\r\n         * Current pass in cycle. Once all patterns in the list are iterated,\r\n         * iteration restarts from beginning and currentPass is incremented.\r\n         */\r\n        _this._currentPass = 0;\r\n        /**\r\n         * A base color. If there are no colors pre-set in the color list, ColorSet\r\n         * will use this color as a base when generating new ones, applying\r\n         * `stepOptions` and `passOptions` to this base color.\r\n         */\r\n        _this.baseColor = new Color({\r\n            r: 103,\r\n            g: 183,\r\n            b: 220\r\n        });\r\n        _this.className = \"PatternSet\";\r\n        // Set base color to be used for pattern elements\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Set default patterns\r\n        _this.list = [\r\n            _this.getLinePattern(1000, 45, 1, 6),\r\n            _this.getRectPattern(10, 0, 4),\r\n            _this.getLinePattern(1000, -45, 1, 6),\r\n            _this.getCirclePattern(11, 2, true),\r\n            _this.getLinePattern(6, 90, 1),\r\n            _this.getRectPattern(12, 45, 6, true),\r\n            _this.getLinePattern(6, 0, 1),\r\n            _this.getRectPattern(7, 0, 4),\r\n            _this.getLinePattern(1000, 45, 2, 3, \"4,2\"),\r\n            _this.getCirclePattern(9, 3, false),\r\n            _this.getLinePattern(1000, -45, 2, 3, \"4,2\"),\r\n            _this.getRectPattern(10, 45, Math.sqrt(50)),\r\n            _this.getLinePattern(1000, -45, 2, 1),\r\n            _this.getRectPattern(10, 0, 9),\r\n            _this.getLinePattern(1000, 45, 2, 1),\r\n            _this.getLinePattern(1000, 0, 3, 1),\r\n            _this.getRectPattern(10, 45, 10),\r\n            _this.getLinePattern(1000, 90, 3, 1)\r\n        ];\r\n        _this.baseColor = interfaceColors.getFor(\"stroke\");\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    PatternSet.prototype.getLinePattern = function (size, rotation, thickness, gap, strokeDashArray) {\r\n        var pattern = new LinePattern();\r\n        pattern.width = size;\r\n        pattern.height = size;\r\n        pattern.stroke = this.baseColor;\r\n        pattern.gap = gap;\r\n        pattern.strokeDasharray = strokeDashArray;\r\n        pattern.strokeWidth = thickness;\r\n        pattern.rotation = rotation;\r\n        return pattern;\r\n    };\r\n    PatternSet.prototype.getRectPattern = function (size, rotation, thickness, outline) {\r\n        var pattern = new RectPattern();\r\n        pattern.width = size;\r\n        pattern.height = size;\r\n        pattern.rectWidth = thickness;\r\n        pattern.rectHeight = thickness;\r\n        if (outline) {\r\n            pattern.stroke = this.baseColor;\r\n            pattern.strokeWidth = 1;\r\n            pattern.fillOpacity = 0;\r\n        }\r\n        else {\r\n            pattern.fill = this.baseColor;\r\n            pattern.strokeWidth = 0;\r\n        }\r\n        if (rotation != 0) {\r\n            pattern.shapeRendering = \"auto\";\r\n        }\r\n        pattern.rotation = rotation;\r\n        return pattern;\r\n    };\r\n    PatternSet.prototype.getCirclePattern = function (size, radius, outline) {\r\n        var pattern = new CirclePattern();\r\n        pattern.width = size;\r\n        pattern.height = size;\r\n        pattern.shapeRendering = \"auto\";\r\n        pattern.radius = radius;\r\n        if (outline) {\r\n            pattern.stroke = this.baseColor;\r\n            pattern.strokeWidth = 1;\r\n            pattern.fillOpacity = 0;\r\n        }\r\n        else {\r\n            pattern.fill = this.baseColor;\r\n            pattern.strokeWidth = 0;\r\n        }\r\n        return pattern;\r\n    };\r\n    Object.defineProperty(PatternSet.prototype, \"list\", {\r\n        /**\r\n         * @return Pattern list\r\n         */\r\n        get: function () {\r\n            return this._list;\r\n        },\r\n        /**\r\n         * List of pre-defined patterns to be used in set.\r\n         *\r\n         * @param value Pattern list\r\n         */\r\n        set: function (value) {\r\n            this._list = value;\r\n            this.reset();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the next pattern in list.\r\n     *\r\n     * @return Pattern\r\n     */\r\n    PatternSet.prototype.next = function () {\r\n        var pattern = this.getIndex(this.currentStep);\r\n        this._currentStep++;\r\n        return pattern;\r\n    };\r\n    /**\r\n     * Returns a color at specific index in the list.\r\n     *\r\n     * @param  i  Index\r\n     * @return Pattern\r\n     */\r\n    PatternSet.prototype.getIndex = function (i) {\r\n        var pattern;\r\n        while (this.list.length <= i) {\r\n            this.generatePatterns();\r\n        }\r\n        pattern = this.list[i];\r\n        return pattern.clone();\r\n    };\r\n    /**\r\n     * Generates a new set of patterns.\r\n     */\r\n    PatternSet.prototype.generatePatterns = function () {\r\n        var count = this.list.length / (this._currentPass + 1);\r\n        this._currentPass++;\r\n        for (var i = 0; i < count; i++) {\r\n            this.list.push(this.list[i].clone());\r\n        }\r\n    };\r\n    /**\r\n     * Resets internal iterator.\r\n     *\r\n     * Calling `next()` after this will return the very first color in the color\r\n     * list, even if it was already returned before.\r\n     */\r\n    PatternSet.prototype.reset = function () {\r\n        this._currentStep = this._startIndex;\r\n    };\r\n    Object.defineProperty(PatternSet.prototype, \"currentStep\", {\r\n        /**\r\n         * @return Step\r\n         */\r\n        get: function () {\r\n            return this._currentStep;\r\n        },\r\n        /**\r\n         * Sets current color iteration. You can use this property to skip some\r\n         * colors from iteration. E.g. setting it to `10` will skip first ten\r\n         * colors.\r\n         *\r\n         * Please note that the number is zero-based.\r\n         *\r\n         * @param value  Step\r\n         */\r\n        set: function (value) {\r\n            this._currentStep = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PatternSet.prototype, \"startIndex\", {\r\n        /**\r\n         * @return Index\r\n         */\r\n        get: function () {\r\n            return this._startIndex;\r\n        },\r\n        /**\r\n         * If set to non-zero value, the ColorSet will start iterating colors from\r\n         * that particular index, not the first color in the list.\r\n         *\r\n         * @default 0\r\n         * @param  value  Index\r\n         */\r\n        set: function (value) {\r\n            this._startIndex = value;\r\n            this.reset();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    PatternSet.prototype.processConfig = function (config) {\r\n        // if (config) {\r\n        // \t// Set up axis ranges\r\n        // \tif ($type.hasValue(config.list) && $type.isArray(config.list)) {\r\n        // \t\tfor (let i = 0, len = config.list.length; i < len; i++) {\r\n        // \t\t\tif (!(config.list[i] instanceof Color)) {\r\n        // \t\t\t\tconfig.list[i] = color(config.list[i]);\r\n        // \t\t\t}\r\n        // \t\t}\r\n        // \t}\r\n        // }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return PatternSet;\r\n}(BaseObject));\r\nexport { PatternSet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PatternSet\"] = PatternSet;\r\n//# sourceMappingURL=PatternSet.js.map","/**\r\n * A plugin base class.\r\n */\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This is a base class that provides core functionality for plugins.\r\n *\r\n * The easiest way to start off with a new plugin is to extend this class.\r\n *\r\n * It will provide all the mandatory functionality, such as disposers.\r\n *\r\n * @since 4.2.2\r\n */\r\nvar Plugin = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Plugin() {\r\n        /**\r\n         * Is this object disposed?\r\n         */\r\n        this._disposed = false;\r\n        /**\r\n         * List of IDisposer which will be disposed when the BaseObject is disposed.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this._disposers = [];\r\n        // Nothing to do here\r\n    }\r\n    /**\r\n     * Decorates series with required events and adapters used to hijack its\r\n     * data.\r\n     */\r\n    Plugin.prototype.init = function () {\r\n        // Does nothing\r\n        // Override it\r\n    };\r\n    /**\r\n     * Returns if this element is already disposed.\r\n     *\r\n     * @return Is disposed?\r\n     */\r\n    Plugin.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Disposes this object and related stuff.\r\n     */\r\n    Plugin.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            var a = this._disposers;\r\n            this._disposers = null;\r\n            while (a.length !== 0) {\r\n                var disposer = a.shift();\r\n                disposer.dispose();\r\n            }\r\n        }\r\n    };\r\n    return Plugin;\r\n}());\r\nexport { Plugin };\r\n//# sourceMappingURL=Plugin.js.map","/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Polyspline } from \"./Polyspline\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\r\nvar AmChartsLogo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AmChartsLogo, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AmChartsLogo() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"AmChartsLogo\";\r\n        _this.valign = \"bottom\";\r\n        var d = 0.3;\r\n        _this.opacity = 0.3;\r\n        _this.defaultState.properties.opacity = 0.4;\r\n        _this.url = \"https://www.amcharts.com/\";\r\n        _this.urlTarget = \"_blank\";\r\n        _this.showSystemTooltip = true;\r\n        _this.readerTitle = \"Chart created using amCharts library\";\r\n        _this.width = 220 * d;\r\n        _this.height = 70 * d;\r\n        _this.background.opacity = 0;\r\n        var aColor = color(\"#474758\");\r\n        if (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\r\n            aColor = color(\"#ffffff\");\r\n        }\r\n        var aGradient = new LinearGradient();\r\n        aGradient.addColor(aColor);\r\n        aGradient.addColor(aColor, 1, 0.75);\r\n        aGradient.addColor(color(\"#3cabff\"), 1, 0.755);\r\n        aGradient.rotation = -10;\r\n        var aStroke = aGradient;\r\n        var m = _this.createChild(Polyspline);\r\n        m.shouldClone = false;\r\n        m.isMeasured = false;\r\n        m.segments = [[{ x: 50 * d, y: 50 * d }, { x: 90 * d, y: 50 * d }, { x: 120 * d, y: 20 * d }, { x: 135 * d, y: 35 * d }, { x: 150 * d, y: 20 * d }, { x: 180 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]];\r\n        m.strokeWidth = 6 * d;\r\n        m.tensionX = 0.8;\r\n        m.tensionY = 1;\r\n        m.stroke = color(\"#3cabff\");\r\n        var a = _this.createChild(Polyspline);\r\n        a.shouldClone = false;\r\n        a.isMeasured = false;\r\n        a.segments = [[{ x: 20 * d, y: 50 * d }, { x: 50 * d, y: 50 * d }, { x: 90 * d, y: 12 * d }, { x: 133 * d, y: 50 * d }, { x: 170 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]];\r\n        a.strokeWidth = 6 * d;\r\n        a.tensionX = 0.75;\r\n        a.tensionY = 1;\r\n        a.stroke = aStroke;\r\n        _this._disposers.push(a);\r\n        var desaturateFilter = new DesaturateFilter();\r\n        _this.filters.push(desaturateFilter);\r\n        var desaturateFilterHover = new DesaturateFilter();\r\n        desaturateFilterHover.saturation = 1;\r\n        var hoverState = _this.states.create(\"hover\");\r\n        hoverState.properties.opacity = 1;\r\n        hoverState.filters.push(desaturateFilterHover);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return AmChartsLogo;\r\n}(Container));\r\nexport { AmChartsLogo };\r\n//# sourceMappingURL=AmChartsLogo.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $log from \"./Log\";\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\r\nfunction createChild(htmlElement, classType) {\r\n    var htmlContainer = $dom.getElement(htmlElement);\r\n    if (htmlContainer) {\r\n        htmlContainer.innerHTML = \"\";\r\n        //htmlContainer.style.overflow = \"hidden\";\r\n        var svgDiv_1 = new SVGContainer(htmlContainer);\r\n        var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n        // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n        // svg area - this is often needed when working with small charts.\r\n        // main container which holds content container and tooltips container\r\n        var container_1 = new Container();\r\n        container_1.htmlContainer = htmlContainer;\r\n        container_1.svgContainer = svgDiv_1;\r\n        container_1.width = percent(100);\r\n        container_1.height = percent(100);\r\n        container_1.background.fillOpacity = 0;\r\n        container_1.paper = paper;\r\n        paper.append(container_1.group);\r\n        // this is set from parent container, but this one doesn't have, so do it manually.\r\n        container_1.relativeWidth = 1;\r\n        container_1.relativeHeight = 1;\r\n        svgDiv_1.container = container_1;\r\n        // creating classType instance\r\n        var sprite_1 = container_1.createChild(classType);\r\n        sprite_1.topParent = container_1;\r\n        var uid = sprite_1.uid;\r\n        registry.invalidSprites[uid] = [];\r\n        registry.invalidDatas[uid] = [];\r\n        registry.invalidPositions[uid] = [];\r\n        registry.invalidLayouts[uid] = [];\r\n        container_1.baseId = uid;\r\n        sprite_1.isBaseSprite = true;\r\n        sprite_1.focusFilter = new FocusFilter();\r\n        registry.baseSprites.push(sprite_1);\r\n        registry.baseSpritesByUid[uid] = sprite_1;\r\n        sprite_1.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv_1.width, 0), height: Math.max(svgDiv_1.height, 0) };\r\n        // this solves issues with display:none, as all children are measured as 0x0\r\n        container_1.events.on(\"maxsizechanged\", function (event) {\r\n            if (event.previousWidth == 0 || event.previousHeight == 0) {\r\n                container_1.deepInvalidate();\r\n            }\r\n            if (sprite_1.maskRectangle) {\r\n                sprite_1.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv_1.width, 0), height: Math.max(svgDiv_1.height, 0) };\r\n            }\r\n        });\r\n        var loopTimer_1 = null;\r\n        // Checks to see whether the chart was properly disposed or not\r\n        var loop_1 = function () {\r\n            if (!sprite_1.isDisposed()) {\r\n                if ($dom.getRoot(sprite_1.dom) == null) {\r\n                    $log.warn(\"Chart was not disposed\", sprite_1.uid);\r\n                    loopTimer_1 = null;\r\n                }\r\n                else {\r\n                    loopTimer_1 = setTimeout(loop_1, 1000);\r\n                }\r\n            }\r\n            else {\r\n                loopTimer_1 = null;\r\n            }\r\n        };\r\n        loop_1();\r\n        sprite_1.addDisposer(new Disposer(function () {\r\n            if (loopTimer_1 !== null) {\r\n                clearTimeout(loopTimer_1);\r\n            }\r\n            $array.remove(registry.baseSprites, sprite_1);\r\n            registry.baseSpritesByUid[sprite_1.uid] = undefined;\r\n        }));\r\n        // TODO figure out a better way of doing this\r\n        sprite_1.addDisposer(container_1);\r\n        // tooltip container\r\n        var tooltipContainer_1 = container_1.createChild(Container);\r\n        tooltipContainer_1.topParent = container_1;\r\n        tooltipContainer_1.width = percent(100);\r\n        tooltipContainer_1.height = percent(100);\r\n        tooltipContainer_1.isMeasured = false;\r\n        container_1.tooltipContainer = tooltipContainer_1;\r\n        sprite_1.tooltip = new Tooltip();\r\n        sprite_1.tooltip.hide(0);\r\n        sprite_1.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });\r\n        tooltipContainer_1.events.on(\"maxsizechanged\", function () {\r\n            $type.getValue(sprite_1.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });\r\n        }, undefined, false);\r\n        //@todo: maybe we don't need to create one by default but only on request?\r\n        var preloader_1 = new Preloader();\r\n        preloader_1.events.on(\"inited\", function () {\r\n            preloader_1.__disabled = true;\r\n        }, undefined, false);\r\n        container_1.preloader = preloader_1;\r\n        //if (!options.commercialLicense) {\r\n        if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\r\n            var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\r\n            tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\r\n                if ((tooltipContainer_1.maxWidth <= 100) || (tooltipContainer_1.maxHeight <= 50)) {\r\n                    logo_1.hide();\r\n                }\r\n                else if (logo_1.isHidden || logo_1.isHiding) {\r\n                    logo_1.show();\r\n                }\r\n            }, undefined, false);\r\n            sprite_1.logo = logo_1;\r\n            logo_1.align = \"left\";\r\n            logo_1.valign = \"bottom\";\r\n        }\r\n        $utils.used(sprite_1.numberFormatter); // need to create one.\r\n        // Set this as an autonomouse instance\r\n        // Controls like Preloader, Export will use this.\r\n        container_1.isStandaloneInstance = true;\r\n        if (options.onlyShowOnViewport) {\r\n            if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\r\n                sprite_1.__disabled = true;\r\n                sprite_1.tooltipContainer.__disabled = true;\r\n                var disposers = [\r\n                    $dom.addEventListener(window, \"DOMContentLoaded\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"load\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"resize\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"scroll\", function () { viewPortHandler(sprite_1); })\r\n                ];\r\n                if (options.viewportTarget) {\r\n                    disposers.push($dom.addEventListener(options.viewportTarget, \"resize\", function () { viewPortHandler(sprite_1); }));\r\n                    disposers.push($dom.addEventListener(options.viewportTarget, \"scroll\", function () { viewPortHandler(sprite_1); }));\r\n                }\r\n                var disposer = new MultiDisposer(disposers);\r\n                sprite_1.addDisposer(disposer);\r\n                sprite_1.vpDisposer = disposer;\r\n            }\r\n            else if (options.queue) {\r\n                addToQueue(sprite_1);\r\n            }\r\n        }\r\n        else if (options.queue) {\r\n            addToQueue(sprite_1);\r\n        }\r\n        return sprite_1;\r\n    }\r\n    else {\r\n        system.log(\"html container not found\");\r\n        throw new Error(\"html container not found\");\r\n    }\r\n}\r\n/**\r\n * Disposes all of the currently active charts.\r\n */\r\nexport function disposeAllCharts() {\r\n    while (registry.baseSprites.length !== 0) {\r\n        registry.baseSprites.pop().dispose();\r\n    }\r\n}\r\nexport function addToQueue(sprite) {\r\n    if (registry.queue.indexOf(sprite) == -1) {\r\n        sprite.__disabled = true;\r\n        sprite.tooltipContainer.__disabled = true;\r\n        sprite.events.disableType(\"appeared\");\r\n        if (registry.queue.length == 0) {\r\n            queueHandler(sprite);\r\n        }\r\n        sprite.addDisposer(new Disposer(function () {\r\n            removeFromQueue(sprite);\r\n        }));\r\n        registry.queue.push(sprite);\r\n    }\r\n}\r\nexport function removeFromQueue(sprite) {\r\n    var index = registry.queue.indexOf(sprite);\r\n    if (index >= 0) {\r\n        registry.queue.splice(registry.queue.indexOf(sprite), 1);\r\n        var nextSprite = registry.queue[index];\r\n        if (nextSprite) {\r\n            queueHandler(nextSprite);\r\n        }\r\n    }\r\n}\r\nexport function viewPortHandler(sprite) {\r\n    if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\r\n        if (sprite.vpDisposer) {\r\n            sprite.vpDisposer.dispose();\r\n        }\r\n        addToQueue(sprite);\r\n    }\r\n}\r\nexport function queueHandler(sprite) {\r\n    sprite.__disabled = false;\r\n    sprite.tooltipContainer.__disabled = false;\r\n    sprite.events.enableType(\"appeared\");\r\n    if (sprite.showOnInit) {\r\n        sprite.events.on(\"appeared\", function () {\r\n            removeFromQueue(sprite);\r\n        });\r\n    }\r\n    if (sprite.vpDisposer) {\r\n        sprite.vpDisposer.dispose();\r\n    }\r\n    if (sprite instanceof Component) {\r\n        sprite.invalidateData();\r\n        sprite.reinit();\r\n        sprite.events.once(\"datavalidated\", function () {\r\n            if (sprite.showOnInit) {\r\n                sprite.appear();\r\n            }\r\n            else {\r\n                removeFromQueue(sprite);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        if (sprite.showOnInit) {\r\n            sprite.appear();\r\n        }\r\n        else {\r\n            removeFromQueue(sprite);\r\n        }\r\n    }\r\n}\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\r\nexport function create(htmlElement, classType) {\r\n    // This is a nasty hack for the benefit of vanilla JS users, who do not\r\n    // enjoy benefits of type-check anyway.\r\n    // We're allowing passing in a name of the class rather than type reference\r\n    // itself.\r\n    var classError;\r\n    if ($type.isString(classType)) {\r\n        if ($type.hasValue(registry.registeredClasses[classType])) {\r\n            classType = registry.registeredClasses[classType];\r\n        }\r\n        else {\r\n            classType = registry.registeredClasses[\"Container\"];\r\n            classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n        }\r\n    }\r\n    // Create the chart\r\n    var chart = createChild(htmlElement, classType);\r\n    // Error?\r\n    if (classError) {\r\n        chart.raiseCriticalError(classError);\r\n    }\r\n    return chart;\r\n}\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config, htmlElement, classType) {\r\n    // Extract chart type from config if necessary\r\n    if (!$type.hasValue(classType)) {\r\n        classType = config.type;\r\n        delete config.type;\r\n    }\r\n    // Extract element from config if necessary\r\n    if (!$type.hasValue(htmlElement)) {\r\n        htmlElement = config.container;\r\n        delete config.container;\r\n    }\r\n    // Check if we need to extract actual type reference\r\n    var finalType;\r\n    var classError;\r\n    if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n        finalType = registry.registeredClasses[classType];\r\n    }\r\n    else if (typeof classType !== \"function\") {\r\n        finalType = Container;\r\n        classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n    }\r\n    else {\r\n        finalType = classType;\r\n    }\r\n    // Create the chart\r\n    var chart = createChild(htmlElement, finalType);\r\n    // Set config\r\n    if (classError) {\r\n        chart.raiseCriticalError(classError);\r\n    }\r\n    else {\r\n        chart.config = config;\r\n    }\r\n    return chart;\r\n}\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function useTheme(value) {\r\n    if (registry.themes.indexOf(value) === -1) {\r\n        registry.themes.push(value);\r\n    }\r\n}\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function unuseTheme(value) {\r\n    $array.remove(registry.themes, value);\r\n}\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes() {\r\n    registry.themes = [];\r\n}\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    options.licenses.push(license);\r\n}\r\n//# sourceMappingURL=Instance.js.map","/**\r\n * This module houses all core/framework functionality and is required for\r\n * all charting components to work\r\n */\r\n/**\r\n * Elements: core\r\n */\r\nexport { System, system } from \"./.internal/core/System\";\r\nexport { BaseObject, BaseObjectEvents } from \"./.internal/core/Base\";\r\nexport { Component } from \"./.internal/core/Component\";\r\nexport { Container } from \"./.internal/core/Container\";\r\nexport { DataItem } from \"./.internal/core/DataItem\";\r\nexport { Sprite } from \"./.internal/core/Sprite\";\r\nexport { SpriteEventDispatcher } from \"./.internal/core/SpriteEvents\";\r\nexport { SpriteState } from \"./.internal/core/SpriteState\";\r\nexport { registry, Registry } from \"./.internal/core/Registry\";\r\nexport { options } from \"./.internal/core/Options\";\r\n/**\r\n * Elements: data\r\n */\r\nexport { CSVParser } from \"./.internal/core/data/CSVParser\";\r\nexport { DataLoader, dataLoader } from \"./.internal/core/data/DataLoader\";\r\nexport { DataParser } from \"./.internal/core/data/DataParser\";\r\nexport { DataSource } from \"./.internal/core/data/DataSource\";\r\nexport { JSONParser } from \"./.internal/core/data/JSONParser\";\r\nexport { SVGDefaults } from \"./.internal/core/defs/SVGDefaults\";\r\n/**\r\n * Elements: elements\r\n */\r\nexport { Button } from \"./.internal/core/elements/Button\";\r\nexport { Circle } from \"./.internal/core/elements/Circle\";\r\nexport { Ellipse } from \"./.internal/core/elements/Ellipse\";\r\nexport { Image } from \"./.internal/core/elements/Image\";\r\nexport { Label } from \"./.internal/core/elements/Label\";\r\nexport { Line } from \"./.internal/core/elements/Line\";\r\nexport { Popup } from \"./.internal/core/elements/Popup\";\r\nexport { Modal } from \"./.internal/core/elements/Modal\";\r\nexport { PointedRectangle } from \"./.internal/core/elements/PointedRectangle\";\r\nexport { PointedShape } from \"./.internal/core/elements/PointedShape\";\r\nexport { Polyarc } from \"./.internal/core/elements/Polyarc\";\r\nexport { Polygon } from \"./.internal/core/elements/Polygon\";\r\nexport { Polyline } from \"./.internal/core/elements/Polyline\";\r\nexport { Polyspline } from \"./.internal/core/elements/Polyspline\";\r\nexport { Preloader } from \"./.internal/core/elements/Preloader\";\r\nexport { Rectangle } from \"./.internal/core/elements/Rectangle\";\r\nexport { ResizeButton } from \"./.internal/core/elements/ResizeButton\";\r\nexport { RoundedRectangle } from \"./.internal/core/elements/RoundedRectangle\";\r\nexport { Scrollbar } from \"./.internal/core/elements/Scrollbar\";\r\nexport { Slider } from \"./.internal/core/elements/Slider\";\r\nexport { Slice } from \"./.internal/core/elements/Slice\";\r\nexport { TextLink } from \"./.internal/core/elements/TextLink\";\r\nexport { Tooltip } from \"./.internal/core/elements/Tooltip\";\r\nexport { Trapezoid } from \"./.internal/core/elements/Trapezoid\";\r\nexport { Triangle } from \"./.internal/core/elements/Triangle\";\r\nexport { WavedCircle } from \"./.internal/core/elements/WavedCircle\";\r\nexport { WavedLine } from \"./.internal/core/elements/WavedLine\";\r\nexport { WavedRectangle } from \"./.internal/core/elements/WavedRectangle\";\r\nexport { ZoomOutButton } from \"./.internal/core/elements/ZoomOutButton\";\r\nexport { PlayButton } from \"./.internal/core/elements/PlayButton\";\r\n/**\r\n * Elements: 3d\r\n */\r\nexport { Cone } from \"./.internal/core/elements/3d/Cone\";\r\nexport { Rectangle3D } from \"./.internal/core/elements/3d/Rectangle3D\";\r\nexport { Slice3D } from \"./.internal/core/elements/3d/Slice3D\";\r\n/**\r\n * Elements: export\r\n */\r\nexport { Export } from \"./.internal/core/export/Export\";\r\nexport { ExportMenu } from \"./.internal/core/export/ExportMenu\";\r\n/**\r\n * Elements: formatters\r\n */\r\nexport { DateFormatter } from \"./.internal/core/formatters/DateFormatter\";\r\nexport { DurationFormatter } from \"./.internal/core/formatters/DurationFormatter\";\r\nexport { NumberFormatter } from \"./.internal/core/formatters/NumberFormatter\";\r\nexport { TextFormatter, getTextFormatter } from \"./.internal/core/formatters/TextFormatter\";\r\n/**\r\n * Elements: interaction\r\n */\r\nexport { Inertia } from \"./.internal/core/interaction/Inertia\";\r\nexport { Interaction, getInteraction } from \"./.internal/core/interaction/Interaction\";\r\nexport { InteractionKeyboardObject } from \"./.internal/core/interaction/InteractionKeyboardObject\";\r\nexport { InteractionObject } from \"./.internal/core/interaction/InteractionObject\";\r\nexport { InteractionObjectEventDispatcher } from \"./.internal/core/interaction/InteractionObjectEvents\";\r\nexport { MouseCursorStyle } from \"./.internal/core/interaction/Mouse\";\r\n/**\r\n * Elements: rendering\r\n */\r\nexport { AMElement } from \"./.internal/core/rendering/AMElement\";\r\nexport { Group } from \"./.internal/core/rendering/Group\";\r\nexport { Paper } from \"./.internal/core/rendering/Paper\";\r\nexport { Tension, Basis } from \"./.internal/core/rendering/Smoothing\";\r\nexport { SVGContainer } from \"./.internal/core/rendering/SVGContainer\";\r\n/**\r\n * Elements: fills\r\n */\r\nexport { ColorModifier } from \"./.internal/core/rendering/fills/ColorModifier\";\r\nexport { LinearGradient } from \"./.internal/core/rendering/fills/LinearGradient\";\r\nexport { LinearGradientModifier } from \"./.internal/core/rendering/fills/LinearGradientModifier\";\r\nexport { RadialGradientModifier } from \"./.internal/core/rendering/fills/RadialGradientModifier\";\r\nexport { LinePattern } from \"./.internal/core/rendering/fills/LinePattern\";\r\nexport { Pattern } from \"./.internal/core/rendering/fills/Pattern\";\r\nexport { RadialGradient } from \"./.internal/core/rendering/fills/RadialGradient\";\r\nexport { RectPattern } from \"./.internal/core/rendering/fills/RectPattern\";\r\n/**\r\n * Elements: filters\r\n */\r\nexport { ColorizeFilter } from \"./.internal/core/rendering/filters/ColorizeFilter\";\r\nexport { DesaturateFilter } from \"./.internal/core/rendering/filters/DesaturateFilter\";\r\nexport { DropShadowFilter } from \"./.internal/core/rendering/filters/DropShadowFilter\";\r\nexport { BlurFilter } from \"./.internal/core/rendering/filters/BlurFilter\";\r\nexport { Filter } from \"./.internal/core/rendering/filters/Filter\";\r\nexport { FocusFilter } from \"./.internal/core/rendering/filters/FocusFilter\";\r\nexport { LightenFilter } from \"./.internal/core/rendering/filters/LightenFilter\";\r\n/**\r\n * Elements: utils\r\n */\r\nexport { GlobalAdapter, globalAdapter, Adapter } from \"./.internal/core/utils/Adapter\";\r\nexport { Animation, animate } from \"./.internal/core/utils/Animation\";\r\nexport { nextFrame, readFrame, writeFrame, whenIdle, triggerIdle } from \"./.internal/core/utils/AsyncPending\";\r\nexport { Cache, cache } from \"./.internal/core/utils/Cache\";\r\nexport { Color, color, isColor, castColor } from \"./.internal/core/utils/Color\";\r\nexport { ColorSet } from \"./.internal/core/utils/ColorSet\";\r\nexport { PatternSet } from \"./.internal/core/utils/PatternSet\";\r\nexport { InterfaceColorSet } from \"./.internal/core/utils/InterfaceColorSet\";\r\nexport { DictionaryDisposer, Dictionary, DictionaryTemplate } from \"./.internal/core/utils/Dictionary\";\r\nexport { Disposer, MultiDisposer, MutableValueDisposer, CounterDisposer } from \"./.internal/core/utils/Disposer\";\r\nexport { StyleRule, StyleClass, getElement, addClass, removeClass, blur, focus, outerHTML, isElement, copyAttributes, fixPixelPerfect, ready } from \"./.internal/core/utils/DOM\";\r\nexport { EventDispatcher, TargetedEventDispatcher } from \"./.internal/core/utils/EventDispatcher\";\r\nexport { ListIterator, min, max, join } from \"./.internal/core/utils/Iterator\";\r\nexport { Keyboard, keyboard } from \"./.internal/core/utils/Keyboard\";\r\nexport { Language } from \"./.internal/core/utils/Language\";\r\nexport { IndexedIterable, ListGrouper, ListDisposer, List, ListTemplate } from \"./.internal/core/utils/List\";\r\nexport { Morpher } from \"./.internal/core/utils/Morpher\";\r\nexport { reverse, or } from \"./.internal/core/utils/Order\";\r\nexport { Percent, percent, isPercent } from \"./.internal/core/utils/Percent\";\r\nexport { Plugin } from \"./.internal/core/utils/Plugin\";\r\nexport { Responsive, ResponsiveBreakpoints, defaultRules } from \"./.internal/core/utils/Responsive\";\r\nexport { OrderedList, SortedList, OrderedListTemplate, SortedListTemplate } from \"./.internal/core/utils/SortedList\";\r\nexport { PX, STRING, NUMBER, DATE, DURATION, PLACEHOLDER, PLACEHOLDER2 } from \"./.internal/core/utils/Strings\";\r\nexport { isNaN, checkString, checkBoolean, checkNumber, checkObject, castString, castNumber, isString, isNumber, isObject, isArray } from \"./.internal/core/utils/Type\";\r\nexport { Validatable } from \"./.internal/core/utils/Validatable\";\r\n/**\r\n * Functions: rendering\r\n */\r\nimport * as path from \"./.internal/core/rendering/Path\";\r\nexport { path };\r\n/**\r\n * Functions: utils\r\n */\r\nimport * as colors from \"./.internal/core/utils/Colors\";\r\nexport { colors };\r\nimport * as ease from \"./.internal/core/utils/Ease\";\r\nexport { ease };\r\nimport * as math from \"./.internal/core/utils/Math\";\r\nexport { math };\r\nimport * as array from \"./.internal/core/utils/Array\";\r\nexport { array };\r\nimport * as number from \"./.internal/core/utils/Number\";\r\nexport { number };\r\nimport * as object from \"./.internal/core/utils/Object\";\r\nexport { object };\r\nimport * as string from \"./.internal/core/utils/String\";\r\nexport { string };\r\nimport * as time from \"./.internal/core/utils/Time\";\r\nexport { time };\r\nimport * as utils from \"./.internal/core/utils/Utils\";\r\nexport { utils };\r\nimport * as iter from \"./.internal/core/utils/Iterator\";\r\nexport { iter };\r\nimport * as type from \"./.internal/core/utils/Type\";\r\nexport { type };\r\nexport { create, createFromConfig, disposeAllCharts } from \"./.internal/core/utils/Instance\";\r\nexport { useTheme, unuseTheme, unuseAllThemes, addLicense } from \"./.internal/core/utils/Instance\";\r\n//# sourceMappingURL=core.js.map","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pagination.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pagination.vue?vue&type=style&index=0&lang=scss&\"","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","/**\r\n * Grip module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nvar Grip = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Grip, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Grip() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"Grip\";\r\n        var cs = new InterfaceColorSet();\r\n        // Set defaults\r\n        _this.layout = \"absolute\";\r\n        _this.padding(10, 10, 10, 10);\r\n        _this.margin(3, 3, 3, 3);\r\n        _this.background.fillOpacity = 0.3;\r\n        _this.background.cornerRadius(10, 10, 10, 10);\r\n        // Create an icon\r\n        var icon = new Sprite();\r\n        icon.element = _this.paper.add(\"path\");\r\n        var path = $path.moveTo({ x: -6, y: 0 });\r\n        path += $path.lineTo({ x: 6, y: 0 });\r\n        path += $path.moveTo({ x: -8, y: -6 });\r\n        path += $path.lineTo({ x: 0, y: -12 });\r\n        path += $path.lineTo({ x: 8, y: -6 });\r\n        path += $path.moveTo({ x: -8, y: 6 });\r\n        path += $path.lineTo({ x: 0, y: 12 });\r\n        path += $path.lineTo({ x: 8, y: 6 });\r\n        icon.path = path;\r\n        icon.strokeWidth = 2;\r\n        icon.fillOpacity = 0;\r\n        icon.pixelPerfect = true;\r\n        icon.padding(0, 4, 0, 4);\r\n        icon.stroke = cs.getFor(\"text\");\r\n        icon.strokeOpacity = 0.7;\r\n        icon.align = \"center\";\r\n        icon.valign = \"middle\";\r\n        _this.icon = icon;\r\n        _this.label.dispose();\r\n        _this.label = undefined;\r\n        // Set default position\r\n        _this.position = \"right\";\r\n        // Set up autohide\r\n        _this.autoHideDelay = 3000;\r\n        _this.events.on(\"shown\", function (ev) {\r\n            if (_this._autoHideTimeout) {\r\n                _this._autoHideTimeout.dispose();\r\n            }\r\n            if (_this.autoHideDelay) {\r\n                _this._autoHideTimeout = _this.setTimeout(function () {\r\n                    _this.hide();\r\n                }, _this.autoHideDelay);\r\n            }\r\n        });\r\n        _this.events.on(\"down\", function (ev) {\r\n            if (_this._autoHideTimeout) {\r\n                _this._autoHideTimeout.dispose();\r\n            }\r\n        });\r\n        _this.events.on(\"out\", function (ev) {\r\n            if (_this.autoHideDelay) {\r\n                _this._autoHideTimeout = _this.setTimeout(function () {\r\n                    _this.hide();\r\n                }, _this.autoHideDelay);\r\n            }\r\n        });\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Grip.prototype, \"position\", {\r\n        /**\r\n         * @return Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"position\");\r\n        },\r\n        /**\r\n         * Sets position of the grip.\r\n         *\r\n         * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n         *\r\n         * @param  value  Position\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"position\", value)) {\r\n                switch (value) {\r\n                    case \"left\":\r\n                        this.align = \"left\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"left\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 0;\r\n                        this.width = undefined;\r\n                        this.height = percent(30);\r\n                        break;\r\n                    case \"right\":\r\n                        this.align = \"right\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"right\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 0;\r\n                        this.width = undefined;\r\n                        this.height = percent(30);\r\n                        break;\r\n                    case \"top\":\r\n                        this.align = \"center\";\r\n                        this.valign = \"top\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"top\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                        break;\r\n                    case \"bottom\":\r\n                        this.align = \"center\";\r\n                        this.valign = \"bottom\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"bottom\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                        break;\r\n                    default:\r\n                        this.align = \"center\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Grip.prototype, \"autoHideDelay\", {\r\n        /**\r\n         * @return Delay\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"autoHideDelay\");\r\n        },\r\n        /**\r\n         * Number of milliseconds to show grip until it is hidden automatically.\r\n         *\r\n         * @default 3000\r\n         * @param  value  Delay\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"autoHideDelay\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Grip;\r\n}(Button));\r\nexport { Grip };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n//# sourceMappingURL=Grip.js.map","/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component } from \"../core/Component\";\r\nimport { MutableValueDisposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ChartDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ChartDataItem;\r\n}(DataItem));\r\nexport { ChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nvar Chart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Chart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Chart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A reference to chart's [[Legend]].\r\n         * @ignore\r\n         */\r\n        _this._legend = new MutableValueDisposer();\r\n        if (_this.constructor === Chart) {\r\n            throw new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n        }\r\n        _this.className = \"Chart\";\r\n        // Create a list of titles\r\n        var template = new Label();\r\n        _this.titles = new ListTemplate(template);\r\n        _this._disposers.push(new ListDisposer(_this.titles));\r\n        _this._disposers.push(template);\r\n        // Chart component is also a container. it holds _chartAndLegendCont and titles\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.layout = \"vertical\";\r\n        // Chart and legend\r\n        var chartAndLegendContainer = _this.createChild(Container);\r\n        chartAndLegendContainer.shouldClone = false;\r\n        chartAndLegendContainer.layout = \"vertical\";\r\n        chartAndLegendContainer.width = percent(100);\r\n        chartAndLegendContainer.height = percent(100);\r\n        _this.chartAndLegendContainer = chartAndLegendContainer;\r\n        // Chart container holds all the elements of a chart, extept titles and legend\r\n        var chartContainer = chartAndLegendContainer.createChild(Container);\r\n        chartContainer.shouldClone = false;\r\n        chartContainer.width = percent(100);\r\n        chartContainer.height = percent(100);\r\n        _this.chartContainer = chartContainer;\r\n        _this.showOnInit = true;\r\n        _this._disposers.push(_this._legend);\r\n        // Add title list events to apply certain formatting options and to make\r\n        // the chart reference them as accessible screen reader labels\r\n        _this.titles.events.on(\"inserted\", function (label) {\r\n            _this.processTitle(label);\r\n            _this.updateReaderTitleReferences();\r\n        }, _this, false);\r\n        _this.titles.events.on(\"removed\", function (label) {\r\n            _this.updateReaderTitleReferences();\r\n        }, _this, false);\r\n        // Accessibility\r\n        // It seems we can't set focusable on the whole chart because it seems to\r\n        // mess up the whole focus event system - getting a focus on an inside\r\n        // object also trigger focus on parent\r\n        //this.focusable = true;\r\n        _this.role = \"region\";\r\n        _this.defaultState.transitionDuration = 1;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Chart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Initiates drawing of the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Chart.prototype.draw = function () {\r\n        this.fixLayout();\r\n        _super.prototype.draw.call(this);\r\n    };\r\n    /**\r\n     * Updates legend's hierarchy based on the position.\r\n     */\r\n    Chart.prototype.fixLayout = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var chartAndLegendContainer = this.chartAndLegendContainer;\r\n            var chartContainer = this.chartContainer;\r\n            chartContainer.x = undefined;\r\n            chartContainer.y = undefined;\r\n            legend.x = undefined;\r\n            legend.y = undefined;\r\n            switch (legend.position) {\r\n                case \"left\":\r\n                    chartAndLegendContainer.layout = \"horizontal\";\r\n                    if (!$type.isNumber(legend.width)) {\r\n                        legend.width = 200;\r\n                    }\r\n                    //legend.maxWidth = legend.width;\r\n                    legend.toBack();\r\n                    break;\r\n                case \"right\":\r\n                    chartAndLegendContainer.layout = \"horizontal\";\r\n                    if (!$type.isNumber(legend.width)) {\r\n                        legend.width = 200;\r\n                    }\r\n                    //legend.maxWidth = legend.width;\r\n                    legend.toFront();\r\n                    break;\r\n                case \"top\":\r\n                    chartAndLegendContainer.layout = \"vertical\";\r\n                    legend.maxWidth = undefined;\r\n                    legend.width = percent(100);\r\n                    legend.toBack();\r\n                    break;\r\n                case \"bottom\":\r\n                    chartAndLegendContainer.layout = \"vertical\";\r\n                    legend.maxWidth = undefined;\r\n                    legend.width = percent(100);\r\n                    legend.toFront();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     */\r\n    Chart.prototype.feedLegend = function () {\r\n        // Nothing here. This method is provided only as a \"placeholder\" for\r\n        // extending classes to override\r\n    };\r\n    /**\r\n     * Adds a new title to the chart when it is inserted into chart's titles\r\n     * list.\r\n     * @param event  An event object which is triggered when inserting into titles list\r\n     * @return Label object\r\n     */\r\n    Chart.prototype.processTitle = function (event) {\r\n        var title = event.newValue;\r\n        title.parent = this;\r\n        title.toBack();\r\n        title.shouldClone = false;\r\n        title.align = \"center\";\r\n        // Need to explicitly apply the `id` attribute so it can be referenced by\r\n        // `aria-labelledby`\r\n        title.uidAttr();\r\n        return title;\r\n    };\r\n    /**\r\n     * Checks if chart has any title elements. If it does, we will use them in an\r\n     * `aria-labelledby` attribute so that screen readers can use them to properly\r\n     * describe the chart when it is focused or hovered.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Chart.prototype.updateReaderTitleReferences = function () {\r\n        if (this.titles.length) {\r\n            var titleIds_1 = [];\r\n            $iter.each(this.titles.iterator(), function (title) {\r\n                titleIds_1.push(title.uid);\r\n            });\r\n            this.setSVGAttribute({ \"aria-labelledby\": titleIds_1.join(\" \") });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-labelledby\");\r\n        }\r\n    };\r\n    Object.defineProperty(Chart.prototype, \"legend\", {\r\n        /**\r\n         * @return Legend\r\n         */\r\n        get: function () {\r\n            return this._legend.get();\r\n        },\r\n        /**\r\n         * Holds the instance of chart's [[Leged]].\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n         * @param Legend\r\n         */\r\n        set: function (legend) {\r\n            this.setLegend(legend);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Prepares the legend instance for use in this chart.\r\n     *\r\n     * @param legend  Legend\r\n     */\r\n    Chart.prototype.setLegend = function (legend) {\r\n        var _this = this;\r\n        if (this._legend.get() !== legend) {\r\n            if (legend) {\r\n                // Set legend options\r\n                legend.parent = this.chartAndLegendContainer;\r\n                this._legend.set(legend, legend.events.on(\"propertychanged\", function (event) {\r\n                    if (event.property == \"position\" || event.property == \"width\") {\r\n                        _this.fixLayout();\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            else {\r\n                this._legend.reset();\r\n            }\r\n            this.feedLegend();\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    Chart.prototype.dispose = function () {\r\n        // otherwise there might be some errors when disposing chart which was just inited\r\n        if (this.legend) {\r\n            this.legend.dispose();\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Chart.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up legend\r\n            if ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n                config.legend.type = \"Legend\";\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    Chart.prototype.copyFrom = function (source) {\r\n        this.titles.copyFrom(source.titles);\r\n        this.chartContainer.copyFrom(source.chartContainer);\r\n        if (source.legend) {\r\n            this.legend = source.legend.clone();\r\n            this.legend.removeChildren();\r\n        }\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    Object.defineProperty(Chart.prototype, \"dragGrip\", {\r\n        /**\r\n         * @return Grip\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._dragGrip) {\r\n                var grip_1 = this.tooltipContainer.createChild(Grip);\r\n                grip_1.align = \"right\";\r\n                grip_1.valign = \"middle\";\r\n                grip_1.hide(0);\r\n                grip_1.events.on(\"down\", function (ev) {\r\n                    if (ev.touch) {\r\n                        _this.interactionsEnabled = false;\r\n                    }\r\n                });\r\n                grip_1.events.on(\"up\", function (ev) {\r\n                    _this.interactionsEnabled = true;\r\n                });\r\n                this.events.on(\"down\", function (ev) {\r\n                    if (ev.touch) {\r\n                        grip_1.show();\r\n                    }\r\n                });\r\n                this._dragGrip = grip_1;\r\n            }\r\n            return this._dragGrip;\r\n        },\r\n        /**\r\n         * An instance of [[Grip]] which serves as a grip point which appears on\r\n         * touch and allows scrolling whole page even if chart is occupying the\r\n         * whole of the screen and would otherwise prevent scrolling.\r\n         *\r\n         * @since 4.4.0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n         * @param  value  Grip\r\n         */\r\n        set: function (value) {\r\n            this._dragGrip = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Chart.prototype, \"focusable\", {\r\n        get: function () {\r\n            return this.parent.focusable;\r\n        },\r\n        set: function (value) {\r\n            this.parent.focusable = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Chart;\r\n}(Component));\r\nexport { Chart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            if (target.pixelPaddingLeft > 10) {\r\n                state.properties.paddingLeft = 10;\r\n            }\r\n            if (target.pixelPaddingRight > 10) {\r\n                state.properties.paddingRight = 10;\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            if (target.pixelPaddingTop > 10) {\r\n                state.properties.paddingTop = 10;\r\n            }\r\n            if (target.pixelPaddingBottom > 10) {\r\n                state.properties.paddingBottom = 10;\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingLeft = 0;\r\n            state.properties.paddingRight = 0;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingTop = 0;\r\n            state.properties.paddingBottom = 0;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Chart.js.map","/**\r\n * Module that defines everything related to building bullets.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Bullet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Bullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Bullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Bullet\";\r\n        _this.isMeasured = false;\r\n        _this.tooltipX = 0;\r\n        _this.tooltipY = 0;\r\n        _this.layout = \"none\";\r\n        _this.applyOnClones = true;\r\n        _this.copyToLegendMarker = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Bullet.prototype, \"locationX\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationX\");\r\n        },\r\n        /**\r\n         * Relative horizontal location within cell. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"locationX\", value)) {\r\n                var dataItem = this.dataItem;\r\n                if (dataItem && dataItem.component) {\r\n                    dataItem.component.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"locationY\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationY\");\r\n        },\r\n        /**\r\n         * Relative vertical location within cell. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"locationY\", value)) {\r\n                var dataItem = this.dataItem;\r\n                if (dataItem && dataItem.component) {\r\n                    dataItem.component.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"xField\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"xField\");\r\n        },\r\n        /**\r\n         * [xField description]\r\n         *\r\n         * @todo Description\r\n         * @param value  [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"xField\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"yField\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"yField\");\r\n        },\r\n        /**\r\n         * [yField description]\r\n         *\r\n         * Description\r\n         * @param value  [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"yField\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"isDynamic\", {\r\n        /**\r\n         * @return Redraw on data change?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"isDynamic\");\r\n        },\r\n        /**\r\n         * Indicates if the bullet is \"dynamic\".\r\n         *\r\n         * In most cases the bullets remain the same, even if the underlying data\r\n         * changes.\r\n         *\r\n         * However, in cases where bullet also displays a label, or its size depends\r\n         * on data, it also needs to be redrawn when the underlying data changes.\r\n         *\r\n         * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n         * time data changes. Regular bullets will be reused as they are.\r\n         *\r\n         * @default false\r\n         * @param value  Redraw on data change?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"isDynamic\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"copyToLegendMarker\", {\r\n        /**\r\n         * @return Redraw on data change?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"copyToLegendMarker\");\r\n        },\r\n        /**\r\n         * Indicates if the bullet should be copied to legend marker\r\n         *\r\n         * @default false\r\n         * @param value  Redraw on data change?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"copyToLegendMarker\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Bullet;\r\n}(Container));\r\nexport { Bullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.isXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Bullet) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Bullet.js.map","/**\r\n * Legend-related functionality.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../core/Component\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { Sprite } from \"../core/Sprite\";\r\nimport { Disposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar LegendDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LegendDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LegendDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.childrenCreated = false;\r\n        _this.className = \"LegendDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LegendDataItem.prototype, \"label\", {\r\n        /**\r\n         * A legend item's [[Label]] element.\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this._label = label_1;\r\n                this.addSprite(label_1);\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Main color\r\n         */\r\n        get: function () {\r\n            return this.properties.color;\r\n        },\r\n        /**\r\n         * Main color of legend data item.\r\n         *\r\n         * This is set by the target element this legend item represents, like\r\n         * a Series or a Slice.\r\n         *\r\n         * It can be used to derive a color in legend's sub-items, like label:\r\n         *\r\n         * ```TypeScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"legend\": {\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"text\": \"[{color}]{name}[/]\"\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n         * @param value  Main color\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"valueLabel\", {\r\n        /**\r\n         * A legend item's [[Label]] element for \"value label\".\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._valueLabel) {\r\n                var valueLabel_1 = this.component.valueLabels.create();\r\n                this._valueLabel = valueLabel_1;\r\n                this.addSprite(valueLabel_1);\r\n                this._disposers.push(valueLabel_1);\r\n                valueLabel_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.valueLabels.removeValue(valueLabel_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._valueLabel;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"itemContainer\", {\r\n        /**\r\n         * A reference to the main [[Container]] that holds legend item's elements:\r\n         * marker and labels.\r\n         *\r\n         * @return Item container\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._itemContainer) {\r\n                var component_1 = this.component;\r\n                var itemContainer_1 = component_1.itemContainers.create();\r\n                itemContainer_1.parent = component_1;\r\n                this._itemContainer = itemContainer_1;\r\n                this.addSprite(itemContainer_1);\r\n                this._disposers.push(itemContainer_1);\r\n                // Add click/tap event to toggle item\r\n                if (itemContainer_1.togglable) {\r\n                    itemContainer_1.events.on(\"toggled\", function (ev) {\r\n                        component_1.toggleDataItem(ev.target.dataItem);\r\n                    }, undefined, false);\r\n                }\r\n                // Add focus event so that we can track which object is currently in focus\r\n                // for keyboard toggling\r\n                if (itemContainer_1.focusable) {\r\n                    itemContainer_1.events.on(\"focus\", function (ev) {\r\n                        component_1.focusedItem = ev.target.dataItem;\r\n                    }, undefined, false);\r\n                    itemContainer_1.events.on(\"blur\", function (ev) {\r\n                        component_1.focusedItem = undefined;\r\n                    }, undefined, false);\r\n                }\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.itemContainers.removeValue(itemContainer_1);\r\n                    }\r\n                }));\r\n                if (this.dataContext.uidAttr) {\r\n                    itemContainer_1.readerControls = this.dataContext.uidAttr();\r\n                    itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();\r\n                }\r\n                var sprite = this.dataContext;\r\n                if ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n                    itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", function (ev) {\r\n                        itemContainer_1.readerChecked = ev.visible;\r\n                        itemContainer_1.events.disableType(\"toggled\");\r\n                        itemContainer_1.isActive = !ev.visible;\r\n                        itemContainer_1.events.enableType(\"toggled\");\r\n                    }, undefined, false));\r\n                    sprite.addDisposer(new Disposer(function () {\r\n                        if (_this.component) {\r\n                            _this.component.dataItems.remove(_this);\r\n                        }\r\n                    }));\r\n                    if (sprite instanceof Sprite) {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"hidden\", function (ev) {\r\n                            itemContainer_1.readerChecked = false;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = true;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"shown\", function (ev) {\r\n                            itemContainer_1.readerChecked = true;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = false;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                    }\r\n                }\r\n            }\r\n            return this._itemContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"marker\", {\r\n        /**\r\n         * A [[Container]] that holds legend item's marker element.\r\n         *\r\n         * @return Marker\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._marker) {\r\n                var marker_1 = this.component.markers.create();\r\n                this._marker = marker_1;\r\n                marker_1.parent = this.itemContainer;\r\n                this.addSprite(marker_1);\r\n                this._disposers.push(marker_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.markers.removeValue(marker_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._marker;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LegendDataItem;\r\n}(DataItem));\r\nexport { LegendDataItem };\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nvar LegendSettings = /** @class */ (function () {\r\n    function LegendSettings() {\r\n        /**\r\n         * Should marker be created for each legend item.\r\n         */\r\n        this.createMarker = true;\r\n    }\r\n    return LegendSettings;\r\n}());\r\nexport { LegendSettings };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nvar Legend = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Legend, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Legend() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Legend\";\r\n        // Set defaults\r\n        _this.layout = \"grid\";\r\n        _this.setPropertyValue(\"useDefaultMarker\", false);\r\n        _this.setPropertyValue(\"contentAlign\", \"center\");\r\n        // Create a template container and list for legend items\r\n        var itemContainer = new Container();\r\n        itemContainer.applyOnClones = true;\r\n        itemContainer.padding(10, 0, 10, 0);\r\n        itemContainer.margin(0, 10, 0, 0);\r\n        itemContainer.layout = \"horizontal\";\r\n        itemContainer.clickable = true;\r\n        itemContainer.focusable = true;\r\n        itemContainer.role = \"switch\";\r\n        itemContainer.togglable = true;\r\n        itemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n        itemContainer.background.fillOpacity = 0; // creates hit area\r\n        // Create container list using item template we just created\r\n        _this.itemContainers = new ListTemplate(itemContainer);\r\n        _this._disposers.push(new ListDisposer(_this.itemContainers));\r\n        _this._disposers.push(_this.itemContainers.template);\r\n        // Set up global keyboard events for toggling elements\r\n        _this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\r\n            if (keyboard.isKey(ev.event, \"enter\") && _this.focusedItem && _this.focusedItem.itemContainer.clickable) {\r\n                _this.toggleDataItem(_this.focusedItem);\r\n            }\r\n        }, _this));\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create a template container and list for the a marker\r\n        var marker = new Container();\r\n        marker.width = 23;\r\n        marker.height = 23;\r\n        marker.interactionsEnabled = false;\r\n        marker.applyOnClones = true;\r\n        marker.setStateOnChildren = true;\r\n        marker.background.fillOpacity = 0;\r\n        marker.background.strokeOpacity = 0;\r\n        marker.propertyFields.fill = \"fill\";\r\n        marker.valign = \"middle\";\r\n        var disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n        marker.events.on(\"childadded\", function (event) {\r\n            var child = event.newValue;\r\n            var activeState = child.states.create(\"active\");\r\n            activeState.properties.stroke = disabledColor;\r\n            activeState.properties.fill = disabledColor;\r\n        });\r\n        _this.markers = new ListTemplate(marker);\r\n        _this._disposers.push(new ListDisposer(_this.markers));\r\n        _this._disposers.push(_this.markers.template);\r\n        // Create a legend background element\r\n        var rectangle = marker.createChild(RoundedRectangle);\r\n        rectangle.width = percent(100);\r\n        rectangle.height = percent(100);\r\n        rectangle.applyOnClones = true;\r\n        rectangle.propertyFields.fill = \"fill\";\r\n        rectangle.strokeOpacity = 0;\r\n        // Create a template container and list for item labels\r\n        var label = new Label();\r\n        label.text = \"{name}\";\r\n        label.margin(0, 5, 0, 5);\r\n        label.valign = \"middle\";\r\n        label.applyOnClones = true;\r\n        label.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        _this.labels = new ListTemplate(label);\r\n        _this._disposers.push(new ListDisposer(_this.labels));\r\n        _this._disposers.push(_this.labels.template);\r\n        label.interactionsEnabled = false;\r\n        // Create a template container and list for item value labels\r\n        var valueLabel = new Label();\r\n        valueLabel.margin(0, 5, 0, 0);\r\n        valueLabel.valign = \"middle\";\r\n        valueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n        valueLabel.align = \"right\";\r\n        valueLabel.textAlign = \"end\";\r\n        valueLabel.applyOnClones = true;\r\n        valueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        valueLabel.interactionsEnabled = false;\r\n        _this.valueLabels = new ListTemplate(valueLabel);\r\n        _this._disposers.push(new ListDisposer(_this.valueLabels));\r\n        _this._disposers.push(_this.valueLabels.template);\r\n        _this.position = \"bottom\"; // don't use setPropertyValue here!\r\n        // Create a state for disabled legend items\r\n        itemContainer.states.create(\"active\");\r\n        itemContainer.setStateOnChildren = true;\r\n        // Apply accessibility settings\r\n        _this.role = \"group\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Legend.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Legend\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Legend.prototype.createDataItem = function () {\r\n        return new LegendDataItem();\r\n    };\r\n    /**\r\n     * [validateDataElement description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     * @todo Description\r\n     * @todo Figure out how to update appearance of legend item without losing focus\r\n     * @todo Update legend marker appearance as apperance of related series changes\r\n     */\r\n    Legend.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        // Get data item (legend item's) container\r\n        var container = dataItem.itemContainer;\r\n        var marker = dataItem.marker;\r\n        $utils.used(dataItem.label);\r\n        var valueLabel = dataItem.valueLabel;\r\n        // Set parent and update current state\r\n        container.readerChecked = dataItem.dataContext.visible;\r\n        // Tell series its legend data item\r\n        dataItem.dataContext.legendDataItem = dataItem;\r\n        var legendSettings = dataItem.dataContext.legendSettings;\r\n        // If we are not using default markers, create a unique legend marker based\r\n        // on the data item type\r\n        var dataContext = dataItem.dataContext;\r\n        if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n            if (!dataItem.childrenCreated) {\r\n                dataContext.createLegendMarker(marker);\r\n                dataItem.childrenCreated = true;\r\n            }\r\n        }\r\n        if (dataContext.updateLegendValue) {\r\n            dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n        }\r\n        if (dataContext.component && dataContext.component.updateLegendValue) {\r\n            dataContext.component.updateLegendValue(dataContext);\r\n        }\r\n        if (valueLabel.invalid) {\r\n            valueLabel.validate();\r\n        }\r\n        if (valueLabel.currentText == \"\" || valueLabel.currentText == undefined) {\r\n            valueLabel.__disabled = true;\r\n        }\r\n        else {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        var visible = dataItem.dataContext.visible;\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        visible = $type.toBoolean(visible);\r\n        dataItem.dataContext.visible = visible;\r\n        container.events.disableType(\"toggled\");\r\n        container.isActive = !visible;\r\n        container.events.enableType(\"toggled\");\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"position\", {\r\n        /**\r\n         * @return Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"position\");\r\n        },\r\n        /**\r\n         * Position of the legend.\r\n         *\r\n         * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n         *\r\n         * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n         * layout structure than other charts.\r\n         *\r\n         * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n         * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n         *\r\n         * @default \"bottom\"\r\n         * @param value  Position\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"position\", value)) {\r\n                if (value == \"left\" || value == \"right\") {\r\n                    this.margin(10, 20, 10, 20);\r\n                    this.valign = \"middle\";\r\n                    this.itemContainers.template.width = percent(100);\r\n                    this.valueLabels.template.width = percent(100);\r\n                    this.labels.template.truncate = true;\r\n                    this.labels.template.fullWords = false;\r\n                }\r\n                else {\r\n                    this.itemContainers.template.width = undefined;\r\n                    this.itemContainers.template.maxWidth = undefined;\r\n                    this.valueLabels.template.width = 50;\r\n                    this.labels.template.truncate = false;\r\n                    this.width = percent(100);\r\n                }\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"useDefaultMarker\", {\r\n        /**\r\n         * @return Use default marker?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"useDefaultMarker\");\r\n        },\r\n        /**\r\n         * Should legend try to mirror the look of the related item when building\r\n         * the marker for legend item?\r\n         *\r\n         * If set to `true` it will try to make the marker look like its related\r\n         * item.\r\n         *\r\n         * E.g. if an item is for a Line Series, it will display a line of the\r\n         * same thickness, color, and will use the same bullets if series have them.\r\n         *\r\n         * @default false\r\n         * @param value Use default marker?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"useDefaultMarker\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Toggles a legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item Legend item\r\n     * @todo Maybe do it with togglable instead\r\n     */\r\n    Legend.prototype.toggleDataItem = function (item) {\r\n        var dataContext = item.dataContext;\r\n        if (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n            item.color = item.colorOrig;\r\n            item.itemContainer.isActive = false;\r\n            if (dataContext.hidden === true) {\r\n                dataContext.hidden = false;\r\n            }\r\n            if (dataContext.show) {\r\n                dataContext.show();\r\n            }\r\n            else {\r\n                dataContext.visible = true;\r\n            }\r\n        }\r\n        else {\r\n            item.itemContainer.isActive = true;\r\n            if (dataContext.hide) {\r\n                dataContext.hide();\r\n            }\r\n            else {\r\n                dataContext.visible = false;\r\n            }\r\n            item.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"preloader\", {\r\n        /**\r\n         * Override preloader method so that legend does not accidentally show its\r\n         * own preloader.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Always `undefined`\r\n         */\r\n        get: function () {\r\n            return;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [handleDataItemPropertyChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {\r\n        dataItem.valueLabel.invalidate();\r\n        dataItem.label.invalidate();\r\n    };\r\n    return Legend;\r\n}(Component));\r\nexport { Legend };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"bottom\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"right\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.isXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Legend.js.map","/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendSettings } from \"../Legend\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SeriesDataItem\";\r\n        //@todo Should we make `bullets` list disposable?\r\n        //this._disposers.push(new DictionaryDisposer(this.bullets));\r\n        _this.values.value = {};\r\n        _this.values.value = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SeriesDataItem.prototype, \"bullets\", {\r\n        /**\r\n         * A dictionary of data items bullets, where key is uid of a bullet template.\r\n         */\r\n        get: function () {\r\n            if (!this._bullets) {\r\n                this._bullets = new Dictionary();\r\n                this._disposers.push(new DictionaryDisposer(this._bullets));\r\n            }\r\n            return this._bullets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    SeriesDataItem.prototype.dispose = function () {\r\n        this.bullets.clear();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    Object.defineProperty(SeriesDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.value.value;\r\n        },\r\n        /**\r\n         * data items's numeric value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SeriesDataItem;\r\n}(DataItem));\r\nexport { SeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nvar Series = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Series, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Series() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Should this series excluded from the axis scale calculations?\r\n         *\r\n         * @default false\r\n         */\r\n        _this._ignoreMinMax = false;\r\n        /**\r\n         * Should series' bullets?\r\n         *\r\n         * @default true\r\n         */\r\n        _this._showBullets = true;\r\n        /**\r\n         * Settings for the appearance of the related legend items.\r\n         */\r\n        _this.legendSettings = new LegendSettings();\r\n        /**\r\n         * Lowest overal values by type.\r\n         */\r\n        _this._tmin = new Dictionary();\r\n        /**\r\n         * Highest overal values by type.\r\n         */\r\n        _this._tmax = new Dictionary();\r\n        /**\r\n         * Lowest values in current selection by type.\r\n         */\r\n        _this._smin = new Dictionary();\r\n        /**\r\n         * Highest values in current selection by type.\r\n         */\r\n        _this._smax = new Dictionary();\r\n        /**\r\n         * [dataItemsByAxis description]\r\n         *\r\n         * Both by category and date.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.dataItemsByAxis = new Dictionary();\r\n        /**\r\n         * Normally series items are focusable using keyboard, so that people can\r\n         * select them with a TAB key. However, if there are a lot of data points on\r\n         * screen it might be long and useless to tab through all o fthem.\r\n         *\r\n         * This is where `skipFocusThreshold` comes in. If there are more items than\r\n         * the value set here, we will not make those focusable and rather let screen\r\n         * reader software rely on the series summary, or authors provide alternative\r\n         * detailed information display, such as HTML table.\r\n         *\r\n         * Different series might have different threshold defaults.\r\n         */\r\n        _this.skipFocusThreshold = 20;\r\n        /**\r\n         * Used to indicate if `itemReaderText` was changed \"from the outside\".\r\n         */\r\n        _this._itemReaderTextChanged = false;\r\n        /**\r\n         * Most of the series use absolute values. However sometimes various\r\n         * calculated percent values are need, e.g. item's percent representation\r\n         * across all values in series, etc.\r\n         *\r\n         * It's a resource-intensive operation, so it is disabled by default.\r\n         *\r\n         * If you need percents to be calculated, e.g. for showing them in tooltips,\r\n         * or creating 100% stacks, this setting needs to be set to `true`.\r\n         *\r\n         * NOTE: `PieChart`, which relies on slice percentages, has this\r\n         * automatically set to `true`.\r\n         *\r\n         * @default false\r\n         */\r\n        _this.calculatePercent = false;\r\n        /**\r\n         * Specifies if series should be automatically disposed when removing from\r\n         * chart's `series` list.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.autoDispose = true;\r\n        /**\r\n         * When chart/series' data is processed, all kinds of derivative values are\r\n         * calculated. E.g. sum, min, max, change, etc. This is a potentially\r\n         * time-consuming operation, especially prominent in data-heavy charts.\r\n         *\r\n         * If your chart does not need those values, and you have a lot of data,\r\n         * setting this to `true` might give a dramatic increase in initial chart\r\n         * load speed.\r\n         *\r\n         * Please note, regular column and line series usage scenarios do not\r\n         * require derivative values. Those come into play only when you do advanced\r\n         * functionality like coloring segments of charts in different colors\r\n         * depending on change between open and close values, have stacked series, or\r\n         * display any of the derived values, like percent, in tooltips or bullets.\r\n         *\r\n         * @default false\r\n         */\r\n        _this.simplifiedProcessing = false;\r\n        if (_this.constructor === Series) {\r\n            throw new Error(\"'Series' cannot be instantiated directly. Please use a specific series type.\");\r\n        }\r\n        _this.className = \"Series\";\r\n        _this.isMeasured = false;\r\n        _this.layout = \"none\";\r\n        _this.shouldClone = false;\r\n        _this.setPropertyValue(\"hidden\", false);\r\n        _this.axisRanges = new List();\r\n        _this.axisRanges.events.on(\"inserted\", _this.processAxisRange, _this, false);\r\n        _this.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n        _this.mainContainer = _this.createChild(Container);\r\n        _this.mainContainer.shouldClone = false;\r\n        _this.mainContainer.mask = _this.createChild(Sprite);\r\n        _this._disposers.push(_this.mainContainer);\r\n        // all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n        var bulletsContainer = _this.mainContainer.createChild(Container);\r\n        _this._shouldBeReady.push(bulletsContainer);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.layout = \"none\";\r\n        bulletsContainer.virtualParent = _this;\r\n        _this._disposers.push(bulletsContainer);\r\n        _this.bulletsContainer = bulletsContainer;\r\n        _this.tooltip = new Tooltip();\r\n        _this.tooltip.virtualParent = _this;\r\n        _this._disposers.push(_this.tooltip);\r\n        _this.hiddenState.transitionEasing = $ease.cubicIn;\r\n        // this data item holds sums, averages, etc\r\n        _this.dataItem = _this.createDataItem();\r\n        _this._disposers.push(_this.dataItem);\r\n        _this.dataItem.component = _this;\r\n        // Apply accessibility\r\n        _this.role = \"group\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * We need this here so that class names can be applied to bullets container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.applyTheme = function () {\r\n        _super.prototype.applyTheme.call(this);\r\n        if (options.autoSetClassName && this.bulletsContainer) {\r\n            this.bulletsContainer.className = this.className + \"-bullets\";\r\n            this.bulletsContainer.setClassName();\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Series.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Series.prototype.createDataItem = function () {\r\n        return new SeriesDataItem();\r\n    };\r\n    Object.defineProperty(Series.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart;\r\n        },\r\n        /**\r\n         * Chart series is used on.\r\n         *\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions bullet.\r\n     *\r\n     * @param bullet  Sprite\r\n     */\r\n    Series.prototype.positionBullet = function (bullet) {\r\n        // Placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Decorates newly created bullet after it has been instert into the list.\r\n     *\r\n     * @param event  List event\r\n     * @todo investigate why itemReaderText is undefined\r\n     */\r\n    Series.prototype.processBullet = function (event) {\r\n        var _this = this;\r\n        var bullet = event.newValue;\r\n        bullet.isTemplate = true;\r\n        // Add accessibility options to bullet\r\n        // If there are relatively few bullets, make them focusable\r\n        this.events.once(\"datavalidated\", function (ev) {\r\n            if (_this.itemsFocusable()) {\r\n                bullet.focusable = true;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * removes bullets\r\n     *\r\n     * @param event  List event\r\n     */\r\n    Series.prototype.removeBullet = function (event) {\r\n        var bullet = event.oldValue;\r\n        this.dataItems.each(function (dataItem) {\r\n            var eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n            if (eachBullet) {\r\n                eachBullet.dispose();\r\n            }\r\n        });\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Validates data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.validateDataItems = function () {\r\n        _super.prototype.validateDataItems.call(this);\r\n        this.processValues(false);\r\n    };\r\n    /**\r\n     * Returns first value for the specific key in the series.\r\n     *\r\n     * @param key  Key\r\n     * @return Value\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     */\r\n    Series.prototype.getFirstValue = function (key, startIndex) {\r\n        // find first\r\n        /*\r\n        return $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n            for (let key in dataItem.values) {\r\n                if ($object.hasKey(dataItem.values, key)) {\r\n                    let value: number = dataItem.values[key].workingValue;\r\n                    if ($type.isNumber(value)) {\r\n                        return value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        });*/\r\n        if (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n            startIndex++;\r\n        }\r\n        for (var i = startIndex; i >= 0; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var value = dataItem.getActualWorkingValue(key);\r\n            if ($type.isNumber(value)) {\r\n                return value;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns first value for the specific key in the series.\r\n     *\r\n     * @param key  Key\r\n     * @return Value\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     */\r\n    Series.prototype.getAbsoluteFirstValue = function (key) {\r\n        for (var i = 0; i < this.dataItems.length; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var value = dataItem.values[key].value;\r\n            if ($type.isNumber(value)) {\r\n                return value;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * [rangeChangeUpdate description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    Series.prototype.rangeChangeUpdate = function () {\r\n        _super.prototype.rangeChangeUpdate.call(this);\r\n        this.processValues(true);\r\n    };\r\n    /**\r\n     * [processValues description]\r\n     *\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     * @param dataItems [description]\r\n     */\r\n    Series.prototype.processValues = function (working) {\r\n        var _this = this;\r\n        if (!this.simplifiedProcessing) {\r\n            var dataItems = this.dataItems;\r\n            var count_1 = {};\r\n            var sum_1 = {};\r\n            var absoluteSum_1 = {};\r\n            var low_1 = {};\r\n            var high_1 = {};\r\n            var open_1 = {};\r\n            var close_1 = {};\r\n            var previous_1 = {};\r\n            var first_1 = {};\r\n            var absoluteFirst_1 = {};\r\n            //let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n            var startIndex_1 = $math.max(0, this._workingStartIndex);\r\n            startIndex_1 = $math.min(startIndex_1, this.dataItems.length);\r\n            var endIndex = $math.min(this._workingEndIndex, this.dataItems.length);\r\n            if (!$type.isNumber(startIndex_1)) {\r\n                startIndex_1 = 0;\r\n            }\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = this.dataItems.length;\r\n            }\r\n            if (startIndex_1 > 0) {\r\n                var dataItem_1 = dataItems.getIndex(startIndex_1 - 1);\r\n                $object.each(dataItem_1.values, function (key, values) {\r\n                    var value = dataItem_1.getActualWorkingValue(key);\r\n                    if ($type.isNumber(value)) {\r\n                        // save previous\r\n                        previous_1[key] = value;\r\n                    }\r\n                });\r\n            }\r\n            var _loop_1 = function (i) {\r\n                var dataItem_2 = dataItems.getIndex(i);\r\n                $object.each(dataItem_2.values, function (key, values) {\r\n                    var value = dataItem_2.getActualWorkingValue(key);\r\n                    //if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n                    if ($type.isNumber(value)) {\r\n                        // count values\r\n                        if (!$type.isNumber(count_1[key])) {\r\n                            count_1[key] = 0;\r\n                        }\r\n                        count_1[key]++;\r\n                        // sum values\r\n                        if (!$type.isNumber(sum_1[key])) {\r\n                            sum_1[key] = 0;\r\n                        }\r\n                        sum_1[key] += value;\r\n                        // absolute sum values\r\n                        if (!$type.isNumber(absoluteSum_1[key])) {\r\n                            absoluteSum_1[key] = 0;\r\n                        }\r\n                        absoluteSum_1[key] += Math.abs(value);\r\n                        // open\r\n                        if (!$type.isNumber(open_1[key])) {\r\n                            open_1[key] = value;\r\n                        }\r\n                        // close\r\n                        close_1[key] = value;\r\n                        // low\r\n                        if (!$type.isNumber(low_1[key])) {\r\n                            low_1[key] = value;\r\n                        }\r\n                        else {\r\n                            if (low_1[key] > value) {\r\n                                low_1[key] = value;\r\n                            }\r\n                        }\r\n                        // high\r\n                        if (!$type.isNumber(high_1[key])) {\r\n                            high_1[key] = value;\r\n                        }\r\n                        else {\r\n                            if (high_1[key] < value) {\r\n                                high_1[key] = value;\r\n                            }\r\n                        }\r\n                        if (!$type.isNumber(first_1[key])) {\r\n                            first_1[key] = _this.getFirstValue(key, startIndex_1);\r\n                        }\r\n                        if (!$type.isNumber(absoluteFirst_1[key])) {\r\n                            absoluteFirst_1[key] = _this.getAbsoluteFirstValue(key);\r\n                        }\r\n                        // change\r\n                        dataItem_2.setCalculatedValue(key, value - first_1[key], \"change\");\r\n                        // change from start percent\r\n                        // will fail if first value is 0\r\n                        dataItem_2.setCalculatedValue(key, (value - first_1[key]) / first_1[key] * 100, \"changePercent\");\r\n                        dataItem_2.setCalculatedValue(key, (value - absoluteFirst_1[key]), \"startChange\");\r\n                        dataItem_2.setCalculatedValue(key, (value - absoluteFirst_1[key]) / absoluteFirst_1[key] * 100, \"startChangePercent\");\r\n                        // previous change\r\n                        var prevValue = previous_1[key];\r\n                        if (!$type.isNumber(prevValue)) {\r\n                            prevValue = value;\r\n                        }\r\n                        dataItem_2.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n                        // previous change percent\r\n                        dataItem_2.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n                        // save previous\r\n                        previous_1[key] = value;\r\n                    }\r\n                });\r\n            };\r\n            for (var i = startIndex_1; i < endIndex; i++) {\r\n                _loop_1(i);\r\n            }\r\n            if (this.calculatePercent) {\r\n                var _loop_2 = function (i) {\r\n                    var dataItem_3 = dataItems.getIndex(i);\r\n                    $object.each(dataItem_3.values, function (key) {\r\n                        var ksum = absoluteSum_1[key];\r\n                        var value = dataItem_3.getActualWorkingValue(key);\r\n                        if ($type.isNumber(value)) {\r\n                            if (ksum > 0) {\r\n                                // this hack is made in order to make it possible to animate single slice to 0\r\n                                // if there is only one slice left, percent value is always 100%, so it won't animate\r\n                                // so we use real value of a slice instead of current value\r\n                                if (value == ksum) {\r\n                                    ksum = dataItem_3.values[key].value;\r\n                                }\r\n                                var percent = value / ksum * 100;\r\n                                dataItem_3.setCalculatedValue(key, percent, \"percent\");\r\n                            }\r\n                            else {\r\n                                dataItem_3.setCalculatedValue(key, 0, \"percent\");\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n                for (var i = startIndex_1; i < endIndex; i++) {\r\n                    _loop_2(i);\r\n                }\r\n            }\r\n            // calculate one before first (cant do that in cycle, as we don't know open yet\r\n            // when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n            // so we do startIndex - 1\r\n            if (startIndex_1 > 0) {\r\n                var zeroItem_1 = dataItems.getIndex(startIndex_1 - 1);\r\n                $object.each(zeroItem_1.values, function (key) {\r\n                    var value = zeroItem_1.values[key].value;\r\n                    // change\r\n                    zeroItem_1.setCalculatedValue(key, value - open_1[key], \"change\");\r\n                    // change percent\r\n                    zeroItem_1.setCalculatedValue(key, (value - open_1[key]) / open_1[key] * 100, \"changePercent\");\r\n                });\r\n            }\r\n            // we save various data like sum, average to dataPoint of the series\r\n            var dataItem_4 = this.dataItem;\r\n            $object.each(dataItem_4.values, function (key) {\r\n                dataItem_4.setCalculatedValue(key, sum_1[key], \"sum\");\r\n                dataItem_4.setCalculatedValue(key, absoluteSum_1[key], \"absoluteSum\");\r\n                dataItem_4.setCalculatedValue(key, sum_1[key] / count_1[key], \"average\");\r\n                dataItem_4.setCalculatedValue(key, open_1[key], \"open\");\r\n                dataItem_4.setCalculatedValue(key, close_1[key], \"close\");\r\n                dataItem_4.setCalculatedValue(key, low_1[key], \"low\");\r\n                dataItem_4.setCalculatedValue(key, high_1[key], \"high\");\r\n                dataItem_4.setCalculatedValue(key, count_1[key], \"count\");\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.validate = function () {\r\n        $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n            //axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n            //\t\t\taxisRange.appendChildren();\r\n            axisRange.validate();\r\n        });\r\n        _super.prototype.validate.call(this);\r\n        var bulletsContainer = this.bulletsContainer;\r\n        bulletsContainer.fill = this.fill;\r\n        bulletsContainer.stroke = this.stroke;\r\n        bulletsContainer.x = this.pixelX;\r\n        bulletsContainer.y = this.pixelY;\r\n        if (this.bulletsContainer.children.length > 0) {\r\n            if (this._showBullets) {\r\n                for (var i = 0; i < this.startIndex; i++) {\r\n                    var dataItem = this.dataItems.getIndex(i);\r\n                    if (dataItem) {\r\n                        dataItem.bullets.each(function (key, bullet) {\r\n                            bullet.__disabled = true;\r\n                        });\r\n                    }\r\n                }\r\n                for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n                    var dataItem = this.dataItems.getIndex(i);\r\n                    if (dataItem) {\r\n                        dataItem.bullets.each(function (key, bullet) {\r\n                            bullet.__disabled = true;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.bulletsContainer.children.each(function (bullet) {\r\n                    bullet.__disabled = true;\r\n                });\r\n            }\r\n        }\r\n        this.updateTooltipBounds();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Series.prototype.updateTooltipBounds = function () {\r\n        if (this.topParent) {\r\n            var x = 0;\r\n            var y = 0;\r\n            var w = this.topParent.maxWidth;\r\n            var h = this.topParent.maxHeight;\r\n            var rect = { x: x, y: y, width: w, height: h };\r\n            this.tooltip.setBounds(rect);\r\n        }\r\n    };\r\n    Series.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    Series.prototype.validateDataElement = function (dataItem) {\r\n        var _this = this;\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        if (this._showBullets) {\r\n            if (!this.isHidden) {\r\n                this.bulletsContainer.visible = true;\r\n            }\r\n            this.bullets.each(function (bulletTemplate) {\r\n                // always better to use the same, this helps to avoid redrawing\r\n                var bullet = dataItem.bullets.getKey(bulletTemplate.uid);\r\n                if (_this.shouldCreateBullet(dataItem, bulletTemplate)) {\r\n                    if (!bullet) {\r\n                        var disabledField = bulletTemplate.propertyFields.disabled;\r\n                        var dataContext = dataItem.dataContext;\r\n                        if (disabledField && dataContext && dataContext[disabledField] === false) {\r\n                            bulletTemplate.applyOnClones = false;\r\n                            bulletTemplate.disabled = false;\r\n                            bullet = bulletTemplate.clone();\r\n                            bulletTemplate.disabled = true;\r\n                            bulletTemplate.applyOnClones = true;\r\n                        }\r\n                        else {\r\n                            bullet = bulletTemplate.clone();\r\n                        }\r\n                        bullet.shouldClone = false;\r\n                        dataItem.addSprite(bullet);\r\n                        if (!_this.visible || _this.isHiding) {\r\n                            bullet.hide(0);\r\n                        }\r\n                    }\r\n                    var currentDataItem = bullet.dataItem;\r\n                    if (currentDataItem != dataItem) {\r\n                        // set to undefined in order not to reuse\r\n                        if (currentDataItem) {\r\n                            currentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n                        }\r\n                        var readerText_1 = _this.itemReaderText;\r\n                        if (bullet instanceof Bullet) {\r\n                            if (!readerText_1) {\r\n                                readerText_1 = (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n                            }\r\n                            if (bullet.isDynamic) {\r\n                                dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                                //dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                                _this.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                            }\r\n                            bullet.deepInvalidate();\r\n                        }\r\n                        // Add accessibility to bullet\r\n                        if (bullet.focusable) {\r\n                            bullet.events.on(\"focus\", function (ev) {\r\n                                bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);\r\n                            }, undefined, false);\r\n                            bullet.events.on(\"blur\", function (ev) {\r\n                                bullet.readerTitle = \"\";\r\n                            }, undefined, false);\r\n                        }\r\n                        if (bullet.hoverable) {\r\n                            bullet.events.on(\"over\", function (ev) {\r\n                                bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);\r\n                            }, undefined, false);\r\n                            bullet.events.on(\"out\", function (ev) {\r\n                                bullet.readerTitle = \"\";\r\n                            }, undefined, false);\r\n                        }\r\n                    }\r\n                    bullet.parent = _this.bulletsContainer;\r\n                    dataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n                    // pass max w/h so we'd know if we should show/hide somethings\r\n                    bullet.maxWidth = dataItem.itemWidth;\r\n                    bullet.maxHeight = dataItem.itemHeight;\r\n                    bullet.__disabled = false;\r\n                    _this.positionBullet(bullet);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.bulletsContainer.visible = false;\r\n        }\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        if (!this.dataRangeInvalid) {\r\n            this.invalidateProcessedData();\r\n        }\r\n    };\r\n    Object.defineProperty(Series.prototype, \"ignoreMinMax\", {\r\n        /**\r\n         * @return Exclude from calculations?\r\n         */\r\n        get: function () {\r\n            return this._ignoreMinMax;\r\n        },\r\n        /**\r\n         * Should this series excluded from the axis scale calculations?\r\n         *\r\n         * @default false\r\n         * @param value  Exclude from calculations?\r\n         */\r\n        set: function (value) {\r\n            this._ignoreMinMax = value;\r\n            this.invalidateDataItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Create a mask for the series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.createMask = function () {\r\n        // A placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Process axis range after it has been added to the list.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    Series.prototype.processAxisRange = function (event) {\r\n        // create container if not existing\r\n        if (!this.rangesContainer) {\r\n            this.rangesContainer = this.createChild(Container);\r\n            this.rangesContainer.shouldClone = false;\r\n            this.rangesContainer.isMeasured = false;\r\n        }\r\n        var axisRange = event.newValue;\r\n        if (axisRange) {\r\n            axisRange.contents.parent = this.rangesContainer;\r\n            axisRange.isRange = true;\r\n            axisRange.events.on(\"valuechanged\", this.invalidateDataItems, this, false);\r\n        }\r\n    };\r\n    /**\r\n     * [getAxisField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param axis  [description]\r\n     * @return [description]\r\n     */\r\n    Series.prototype.getAxisField = function (axis) {\r\n        return;\r\n    };\r\n    /**\r\n     * Shows the tooltip at specific position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param xPosition  X\r\n     * @param yPosition  Y\r\n     */\r\n    Series.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\r\n        // Placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(Series.prototype, \"minBulletDistance\", {\r\n        /**\r\n         * @return Distance (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minBulletDistance\");\r\n        },\r\n        /**\r\n         * Minimal distance between data points in pixels.\r\n         *\r\n         * If distance gets smaller than this, bullets are turned off to avoid\r\n         * overlapping.\r\n         *\r\n         * `0` (zero) disables this behavior.\r\n         *\r\n         * IMPORTANT: This setting will work only when Series' base axis\r\n         * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the\r\n         * setting will be ignored, because it would be a huge overhead to measure\r\n         * distance between each and every bullet.\r\n         *\r\n         * @default 0\r\n         * @param value  Distance (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minBulletDistance\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"bullets\", {\r\n        /**\r\n         * A list of bullets that will be added to each and every items in the\r\n         * series.\r\n         *\r\n         * You can push any object that is a descendant of a [[Sprite]] here. All\r\n         * items added to this list will be copied and used as a bullet on all data\r\n         * items, including their properties, events, etc.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n         * @return List of bullets.\r\n         */\r\n        get: function () {\r\n            if (!this._bullets) {\r\n                this._bullets = new ListTemplate(new Bullet());\r\n                this._bullets.template.virtualParent = this;\r\n                this._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n                this._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n                this._disposers.push(new ListDisposer(this._bullets));\r\n                this._disposers.push(this._bullets.template);\r\n            }\r\n            return this._bullets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    Series.prototype.createLegendMarker = function (marker) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(Series.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Hidden in legend?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hiddenInLegend\");\r\n        },\r\n        /**\r\n         * Should the series be hidden in legend?\r\n         *\r\n         * @param value Hidden in legend?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"hiddenInLegend\", value)) {\r\n                if (this.chart) {\r\n                    this.chart.feedLegend();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"name\");\r\n        },\r\n        /**\r\n         * Series' name.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"name\", value);\r\n            var legendDataItem = this.legendDataItem;\r\n            if (legendDataItem) {\r\n                legendDataItem.component.invalidate();\r\n                legendDataItem.component.invalidateRawData();\r\n            }\r\n            this.readerTitle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"itemReaderText\", {\r\n        /**\r\n         * @return Screen reader text template\r\n         */\r\n        get: function () {\r\n            // Get explicitly set reader text\r\n            var readerText = this._itemReaderText;\r\n            // Not set? Let's try something else\r\n            if (!readerText) {\r\n                // Tooltip text?\r\n                if (this.tooltipText) {\r\n                    readerText = $utils.plainText(this.tooltipText);\r\n                }\r\n                else if (this.tooltipHTML) {\r\n                    readerText = $utils.plainText(this.tooltipHTML);\r\n                }\r\n            }\r\n            if (!this._adapterO) {\r\n                return readerText;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"itemReaderText\", readerText);\r\n            }\r\n        },\r\n        /**\r\n         * Screen reader text to be applied to each individual data item, such\r\n         * as bullets, columns or slices.\r\n         *\r\n         * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n         * `{valueY}`, etc.\r\n         *\r\n         * Any text formatting options, e.g. `[bold]` will be ignored.\r\n         *\r\n         * @param value Screen reader text template\r\n         */\r\n        set: function (value) {\r\n            this._itemReaderText = value;\r\n            this._itemReaderTextChanged = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns if number of data items in the series are beyond non-focusable\r\n     * count and should not be available for TAB-through.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Items focusable?\r\n     */\r\n    Series.prototype.itemsFocusable = function () {\r\n        return this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n    };\r\n    Object.defineProperty(Series.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * Legend data item that corresponds to this series.\r\n         *\r\n         * @param value  Data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            this._legendDataItem.itemContainer.deepInvalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    Series.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        // if this series has legend item\r\n        if (this.legendDataItem) {\r\n            var legendSettings = this.legendSettings;\r\n            var legendDataItem = this.legendDataItem;\r\n            var label = legendDataItem.label;\r\n            var valueLabel = legendDataItem.valueLabel;\r\n            // update legend\r\n            if (dataItem || notRange) {\r\n                if (valueLabel) {\r\n                    if (legendSettings.itemValueText) {\r\n                        valueLabel.text = legendSettings.itemValueText;\r\n                    }\r\n                    valueLabel.dataItem = dataItem;\r\n                }\r\n                if (label) {\r\n                    if (legendSettings.itemLabelText) {\r\n                        label.text = legendSettings.itemLabelText;\r\n                    }\r\n                    label.dataItem = dataItem;\r\n                }\r\n            }\r\n            else {\r\n                if (label) {\r\n                    // if itemLabelText is set, means we have to reset label even if labelText is not set\r\n                    if (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n                        label.text = legendSettings.labelText;\r\n                    }\r\n                    label.dataItem = this.dataItem;\r\n                }\r\n                if (valueLabel) {\r\n                    if (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n                        valueLabel.text = legendSettings.valueText;\r\n                    }\r\n                    valueLabel.dataItem = this.dataItem;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    Series.prototype.copyFrom = function (source) {\r\n        this.bullets.copyFrom(source.bullets);\r\n        this.bulletsContainer.copyFrom(source.bulletsContainer);\r\n        this.calculatePercent = source.calculatePercent;\r\n        this.simplifiedProcessing = source.simplifiedProcessing;\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    /**\r\n     * Displays a modal or console message with error, and halts any further\r\n     * processing of this element.\r\n     *\r\n     * @param e Error\r\n     */\r\n    Series.prototype.raiseCriticalError = function (e) {\r\n        if (this._chart && this._chart.modal) {\r\n            this._chart.modal.content = this._chart.adapter.apply(\"criticalError\", e).message;\r\n            this._chart.modal.closable = false;\r\n            this._chart.modal.open();\r\n            this._chart.disabled = true;\r\n        }\r\n        if (options.verbose) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    /**\r\n     * Applies filters to the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.applyFilters = function () {\r\n        var _this = this;\r\n        _super.prototype.applyFilters.call(this);\r\n        this.bulletsContainer.filters.clear();\r\n        // copyFrom of a list copies, does not clone\r\n        $iter.each(this.filters.iterator(), function (filter) {\r\n            _this.bulletsContainer.filters.push(filter.clone());\r\n        });\r\n    };\r\n    Object.defineProperty(Series.prototype, \"heatRules\", {\r\n        /**\r\n         * A list of heat rules to apply to series' elements based on the value\r\n         * of the data item.\r\n         *\r\n         * Heat rules can be any \"numeric\" (including `Color`) property, and can also\r\n         * be applied to child objects of series, like columns, bullets, etc.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.heatRules.push({\r\n         *  \"target\": series.columns.template,\r\n         *  \"property\": \"fill\",\r\n         *  \"min\": am4core.color(\"#F5DBCB\"),\r\n         *  \"max\": am4core.color(\"#ED7B84\"),\r\n         *  \"dataField\": \"valueY\"\r\n         *});\r\n         *```\r\n         * ```Javacript\r\n         * series.heatRules.push({\r\n         *  \"target\": series.columns.template,\r\n         *  \"property\": \"fill\",\r\n         *  \"min\": am4core.color(\"#F5DBCB\"),\r\n         *  \"max\": am4core.color(\"#ED7B84\"),\r\n         *  \"dataField\": \"valueY\"\r\n         *});\r\n         *```\r\n         *```JSON\r\n         *{\r\n         *  // ...\r\n         *  \"series\": [{\r\n         *    \"type\": \"ColumnSeries\",\r\n         *    \"heatRules\": [{\r\n         *      \"target\": \"columns.template\",\r\n         *      \"property\": \"fill\",\r\n         *      \"min\": \"#F5DBCB\",\r\n         *      \"max\": \"#ED7B84\",\r\n         *      \"dataField\": \"valueY\"\r\n         *    }]\r\n         *  }]\r\n         *}\r\n         *```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules\r\n         * @return  Heat rules\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._heatRules) {\r\n                this._heatRules = new List();\r\n                this._heatRules.events.on(\"inserted\", function (event) {\r\n                    var heatRule = event.newValue;\r\n                    var target = heatRule.target;\r\n                    if (target) {\r\n                        var dataField_1 = heatRule.dataField;\r\n                        if (!$type.hasValue(dataField_1)) {\r\n                            dataField_1 = \"value\";\r\n                        }\r\n                        var min_1 = heatRule.min;\r\n                        var max_1 = heatRule.max;\r\n                        var seriesDataItem_1 = _this.dataItem;\r\n                        var property_1 = heatRule.property;\r\n                        var minValue = $type.toNumber(heatRule.minValue);\r\n                        var maxValue = $type.toNumber(heatRule.maxValue);\r\n                        if (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n                            _this.dataItem.events.on(\"calculatedvaluechanged\", function (event) {\r\n                                if (event.property == dataField_1) {\r\n                                    $iter.each(_this.dataItems.iterator(), function (dataItem) {\r\n                                        var foundSprite = false;\r\n                                        $array.each(dataItem.sprites, function (sprite) {\r\n                                            if (sprite.clonedFrom == target) {\r\n                                                var anySprite = sprite;\r\n                                                anySprite[property_1] = anySprite[property_1];\r\n                                                foundSprite = true;\r\n                                            }\r\n                                        });\r\n                                        if (!foundSprite) {\r\n                                            $array.each(dataItem.sprites, function (sprite) {\r\n                                                if (sprite instanceof Container) {\r\n                                                    $iter.each(sprite.children.iterator(), function (child) {\r\n                                                        if (child.className == target.className) {\r\n                                                            var anyChild = child;\r\n                                                            anyChild[property_1] = anyChild[property_1];\r\n                                                        }\r\n                                                        // giveup here\r\n                                                        else if (child instanceof Container) {\r\n                                                            child.deepInvalidate();\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        _this.dataItems.template.events.on(\"workingvaluechanged\", function (event) {\r\n                            if (event.property == dataField_1) {\r\n                                var dataItem = event.target;\r\n                                var foundSprite_1 = false;\r\n                                $array.each(dataItem.sprites, function (sprite) {\r\n                                    if (sprite.clonedFrom == target) {\r\n                                        var anySprite = sprite;\r\n                                        anySprite[property_1] = anySprite[property_1];\r\n                                        foundSprite_1 = true;\r\n                                    }\r\n                                });\r\n                                if (!foundSprite_1) {\r\n                                    $array.each(dataItem.sprites, function (sprite) {\r\n                                        if (sprite instanceof Container) {\r\n                                            $iter.each(sprite.children.iterator(), function (child) {\r\n                                                if (child.className == target.className) {\r\n                                                    var anyChild = child;\r\n                                                    anyChild[property_1] = anyChild[property_1];\r\n                                                }\r\n                                                // givup here\r\n                                                else if (child instanceof Container) {\r\n                                                    child.deepInvalidate();\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                        target.adapter.add(property_1, function (value, ruleTarget, property) {\r\n                            var minValue = $type.toNumber(heatRule.minValue);\r\n                            var maxValue = $type.toNumber(heatRule.maxValue);\r\n                            if (ruleTarget instanceof Sprite) {\r\n                                var anySprite = ruleTarget;\r\n                                var propertyField = anySprite.propertyFields[property];\r\n                                if (propertyField && ruleTarget.dataItem) {\r\n                                    var dataContext = ruleTarget.dataItem.dataContext;\r\n                                    if (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n                                        return value;\r\n                                    }\r\n                                }\r\n                            }\r\n                            var dataItem = ruleTarget.dataItem;\r\n                            if (!$type.isNumber(minValue)) {\r\n                                minValue = seriesDataItem_1.values[dataField_1].low;\r\n                            }\r\n                            if (!$type.isNumber(maxValue)) {\r\n                                maxValue = seriesDataItem_1.values[dataField_1].high;\r\n                            }\r\n                            if (dataItem) {\r\n                                var fieldValues = dataItem.values[dataField_1];\r\n                                if (fieldValues) {\r\n                                    var workingValue = dataItem.getActualWorkingValue(dataField_1);\r\n                                    if ($type.hasValue(min_1) && $type.hasValue(max_1) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n                                        var percent = (workingValue - minValue) / (maxValue - minValue);\r\n                                        if ($type.isNumber(workingValue) && !$type.isNumber(percent)) {\r\n                                            percent = 0.5;\r\n                                        }\r\n                                        // fixes problems if all values are the same\r\n                                        if ($type.isNumber(min_1)) {\r\n                                            return min_1 + (max_1 - min_1) * percent;\r\n                                        }\r\n                                        else if (min_1 instanceof Color) {\r\n                                            return new Color($colors.interpolate(min_1.rgb, max_1.rgb, percent));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            return value;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            return this._heatRules;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Series.prototype.processConfig = function (config) {\r\n        var heatRules;\r\n        if (config) {\r\n            // Set up bullets\r\n            if ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n                for (var i = 0, len = config.bullets.length; i < len; i++) {\r\n                    var bullets = config.bullets[i];\r\n                    if (!$type.hasValue(bullets.type)) {\r\n                        bullets.type = \"Bullet\";\r\n                    }\r\n                }\r\n            }\r\n            // Let's take heatRules out of the config, so that we can process\r\n            // them later, when bullets are already there\r\n            if ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n                heatRules = config.heatRules;\r\n                delete config.heatRules;\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n        // Process heat rules again, when all other elements are ready\r\n        if (heatRules) {\r\n            for (var i = 0, len = heatRules.length; i < len; i++) {\r\n                var rule = heatRules[i];\r\n                // Resolve target\r\n                var target = this;\r\n                if ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n                    // Check if we can find this element by id\r\n                    if (this.map.hasKey(rule.target)) {\r\n                        target = this.map.getKey(rule.target);\r\n                    }\r\n                    else {\r\n                        var parts = rule.target.split(\".\");\r\n                        for (var x = 0; x < parts.length; x++) {\r\n                            if (target instanceof List) {\r\n                                var listitem = target.getIndex($type.toNumber(parts[x]));\r\n                                if (!listitem) {\r\n                                    target = target[parts[x]];\r\n                                }\r\n                                else {\r\n                                    target = listitem;\r\n                                }\r\n                            }\r\n                            else {\r\n                                target = target[parts[x]];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                rule.target = target;\r\n                // Resolve colors and percents\r\n                if ($type.hasValue(rule.min)) {\r\n                    rule.min = this.maybeColorOrPercent(rule.min);\r\n                }\r\n                if ($type.hasValue(rule.max)) {\r\n                    rule.max = this.maybeColorOrPercent(rule.max);\r\n                }\r\n            }\r\n            _super.prototype.processConfig.call(this, {\r\n                heatRules: heatRules\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns visibility value\r\n     * @ignore\r\n     */\r\n    /*\r\n        protected getVisibility(): boolean {\r\n            let hidden = this.getPropertyValue(\"hidden\");\r\n            if (hidden) {\r\n                return false;\r\n            }\r\n            else {\r\n                return super.getVisibility();\r\n            }\r\n        }*/\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    Series.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"heatRules\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"heatRules\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    /**\r\n     * Sets `visibility` property:\r\n     *\r\n     * * `true` - visible\r\n     * * `false` - hidden\r\n     *\r\n     * @param value  true - visible, false - hidden\r\n     * @return Current visibility\r\n     */\r\n    Series.prototype.setVisibility = function (value) {\r\n        _super.prototype.setVisibility.call(this, value);\r\n        this.bulletsContainer.visible = value;\r\n    };\r\n    return Series;\r\n}(Component));\r\nexport { Series };\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n//# sourceMappingURL=Series.js.map","/**\r\n * Serial chart module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, ChartDataItem } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SerialChartDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SerialChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SerialChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SerialChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SerialChartDataItem;\r\n}(ChartDataItem));\r\nexport { SerialChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nvar SerialChart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SerialChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SerialChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"SerialChart\";\r\n        _this.colors = new ColorSet();\r\n        _this._usesData = false;\r\n        // Create a container for series\r\n        var seriesContainer = _this.chartContainer.createChild(Container);\r\n        seriesContainer.shouldClone = false;\r\n        seriesContainer.width = percent(100);\r\n        seriesContainer.height = percent(100);\r\n        seriesContainer.isMeasured = false;\r\n        seriesContainer.layout = \"none\";\r\n        seriesContainer.zIndex = 2;\r\n        _this.seriesContainer = seriesContainer;\r\n        // Create a container for bullets\r\n        var bulletsContainer = _this.chartContainer.createChild(Container);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.width = percent(100);\r\n        bulletsContainer.height = percent(100);\r\n        bulletsContainer.isMeasured = false;\r\n        bulletsContainer.zIndex = 3;\r\n        bulletsContainer.layout = \"none\";\r\n        _this.bulletsContainer = bulletsContainer;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    SerialChart.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        if (this.colors) {\r\n            this.colors.dispose();\r\n        }\r\n        if (this.patterns) {\r\n            this.patterns.dispose();\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor\r\n     */\r\n    SerialChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Serial chart\");\r\n        }\r\n    };\r\n    Object.defineProperty(SerialChart.prototype, \"series\", {\r\n        /**\r\n         * A list of chart's series.\r\n         *\r\n         * @return Chart's series\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._series) {\r\n                this._series = new ListTemplate(this.createSeries());\r\n                this._series.events.on(\"inserted\", function (event) {\r\n                    _this.handleSeriesAdded(event);\r\n                }, undefined, false);\r\n                this._series.events.on(\"removed\", function (event) {\r\n                    var series = event.oldValue;\r\n                    _this.dataUsers.removeValue(series);\r\n                    _this.dataUsers.each(function (dataUser) {\r\n                        dataUser.invalidateDataItems();\r\n                    });\r\n                    if (series.autoDispose) {\r\n                        series.dispose();\r\n                    }\r\n                    _this.feedLegend();\r\n                }, undefined, false);\r\n                this._disposers.push(new ListDisposer(this._series));\r\n                this._disposers.push(this._series.template);\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new [[Series]] object with required parameters when it is\r\n     * added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    SerialChart.prototype.handleSeriesAdded = function (event) {\r\n        var _this = this;\r\n        var series = event.newValue;\r\n        if (series.isDisposed()) {\r\n            return;\r\n        }\r\n        series.chart = this;\r\n        series.parent = this.seriesContainer;\r\n        series.bulletsContainer.parent = this.bulletsContainer;\r\n        this._dataUsers.moveValue(series);\r\n        series.addDisposer(new Disposer(function () {\r\n            _this.dataUsers.removeValue(series);\r\n        }));\r\n        this.handleSeriesAdded2(series);\r\n        this.feedLegend();\r\n    };\r\n    SerialChart.prototype.handleSeriesAdded2 = function (series) {\r\n        if (!this.dataInvalid) {\r\n            if (!series.data || series.data.length == 0) {\r\n                this.invalidateData();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    SerialChart.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            $iter.each(this.series.iterator(), function (series) {\r\n                if (!series.hiddenInLegend) {\r\n                    legendData_1.push(series);\r\n                }\r\n            });\r\n            legend.dataFields.name = \"name\";\r\n            legend.data = legendData_1;\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new Series, suitable for this chart type.\r\n     *\r\n     * @return New series\r\n     */\r\n    SerialChart.prototype.createSeries = function () {\r\n        return new Series();\r\n    };\r\n    Object.defineProperty(SerialChart.prototype, \"colors\", {\r\n        /**\r\n         * @return Color list\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * Chart's color list.\r\n         *\r\n         * This list can be used by a number of serial items, like applying a new\r\n         * color for each Series added. Or, applying a new color for each slice\r\n         * of a Pie chart.\r\n         *\r\n         * Please see [[ColorSet]] for information on how you can set up to generate\r\n         * unique colors.\r\n         *\r\n         * A theme you are using may override default pre-defined colors.\r\n         *\r\n         * @param value Color list\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SerialChart.prototype, \"patterns\", {\r\n        /**\r\n         * @return Pattern set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"patterns\");\r\n        },\r\n        /**\r\n         * A [[PatternSet]] to use when creating patterned fills for slices.\r\n         *\r\n         * @since 4.7.5\r\n         * @param value  Pattern set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"patterns\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all parameters from another [[SerialChart]].\r\n     *\r\n     * @param source Source SerialChart\r\n     */\r\n    SerialChart.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.series.copyFrom(source.series);\r\n    };\r\n    /**\r\n     * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n     */\r\n    SerialChart.prototype.appear = function () {\r\n        _super.prototype.appear.call(this);\r\n        this.series.each(function (series) {\r\n            if (series.showOnInit && series.inited) {\r\n                series.appear();\r\n            }\r\n        });\r\n    };\r\n    return SerialChart;\r\n}(Chart));\r\nexport { SerialChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n//# sourceMappingURL=SerialChart.js.map","/**\r\n * Axis break module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base class to define \"breaks\" on axes.\r\n *\r\n * @see {@link IAxisBreakEvents} for a list of available events\r\n * @see {@link IAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar AxisBreak = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisBreak, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisBreak() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Reference to parent Axis.\r\n         */\r\n        _this._axis = new MutableValueDisposer();\r\n        /**\r\n         * A list of axis data items which fall within this break.\r\n         */\r\n        _this.dataItems = new List();\r\n        _this.className = \"AxisBreak\";\r\n        // Set defaults\r\n        _this.breakSize = 0.01;\r\n        _this.marginLeft = -5;\r\n        _this.marginRight = -5;\r\n        _this.marginTop = -5;\r\n        _this.marginBottom = -5;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create elements\r\n        // (these won't be used actually, just for setting properties)\r\n        var fillShape = new WavedLine();\r\n        fillShape.fill = interfaceColors.getFor(\"background\");\r\n        fillShape.stroke = color();\r\n        fillShape.fillOpacity = 0.9;\r\n        fillShape.zIndex = 0;\r\n        _this._fillShape = fillShape;\r\n        var startLine = new WavedLine();\r\n        startLine.fill = color();\r\n        startLine.stroke = interfaceColors.getFor(\"grid\");\r\n        startLine.strokeOpacity = 0.3;\r\n        startLine.zIndex = 1;\r\n        _this._startLine = startLine;\r\n        var endLine = new WavedLine();\r\n        endLine.fill = color();\r\n        endLine.stroke = color(\"#000000\"); // interfaceColors.getFor(\"grid\");\r\n        endLine.strokeOpacity = 0.3;\r\n        endLine.zIndex = 2;\r\n        _this._endLine = endLine;\r\n        _this._disposers.push(_this._axis);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    AxisBreak.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        if (this._fillShape) {\r\n            this._fillShape.dispose();\r\n        }\r\n        if (this._startLine) {\r\n            this._startLine.dispose();\r\n        }\r\n        if (this._endLine) {\r\n            this._endLine.dispose();\r\n        }\r\n    };\r\n    Object.defineProperty(AxisBreak.prototype, \"startLine\", {\r\n        /**\r\n         * @return Element\r\n         */\r\n        get: function () {\r\n            return this._startLine;\r\n        },\r\n        /**\r\n         * An element used for the starting line of the break.\r\n         *\r\n         * @param sprite  Element\r\n         */\r\n        set: function (sprite) {\r\n            if (this._startLine) {\r\n                this._startLine.dispose();\r\n            }\r\n            this._startLine = sprite;\r\n            this.addBreakSprite(sprite);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisBreak.prototype, \"endLine\", {\r\n        /**\r\n         * @return Element\r\n         */\r\n        get: function () {\r\n            return this._endLine;\r\n        },\r\n        /**\r\n         * An element used for the end line of the break.\r\n         *\r\n         * @param sprite Element\r\n         */\r\n        set: function (sprite) {\r\n            if (this._endLine) {\r\n                this._endLine.dispose();\r\n            }\r\n            this._endLine = sprite;\r\n            this.addBreakSprite(sprite);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisBreak.prototype, \"fillShape\", {\r\n        /**\r\n         * @return Element\r\n         */\r\n        get: function () {\r\n            return this._fillShape;\r\n        },\r\n        /**\r\n         * An element used for fill of the break.\r\n         *\r\n         * @param sprite Element\r\n         */\r\n        set: function (sprite) {\r\n            if (this._fillShape) {\r\n                this._fillShape.dispose();\r\n            }\r\n            this._fillShape = sprite;\r\n            this.addBreakSprite(sprite);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a break element (e.g. lines, fill) to the break, which is\r\n     * [[Container]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param sprite Element to add\r\n     */\r\n    AxisBreak.prototype.addBreakSprite = function (sprite) {\r\n        sprite.parent = this;\r\n        sprite.isMeasured = false;\r\n        this._disposers.push(sprite);\r\n    };\r\n    Object.defineProperty(AxisBreak.prototype, \"axis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            return this._axis.get();\r\n        },\r\n        /**\r\n         * An Axis this Break is associated with.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            if (this._axis.get() !== axis) {\r\n                this._axis.set(axis, axis.renderer.gridContainer.events.on(\"transformed\", this.invalidate, this, false));\r\n                axis.renderer.createBreakSprites(this);\r\n                // this can't go to copyFrom, as axis is set later\r\n                var breakTemplate = axis.axisBreaks.template;\r\n                this.startLine.copyFrom(breakTemplate.startLine);\r\n                this.endLine.copyFrom(breakTemplate.endLine);\r\n                this.fillShape.copyFrom(breakTemplate.fillShape);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisBreak.prototype, \"breakSize\", {\r\n        /**\r\n         * @return Relative axis break\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"breakSize\");\r\n        },\r\n        /**\r\n         * A size of the break relative to the actual size of the scope break spans.\r\n         *\r\n         * For example, if `breakSize = 0.1` and unbroken scope of balues it spans\r\n         * would be 100 pixels, the break would be 10 pixels wide.\r\n         *\r\n         * 0 means the break will completely collapse and hide the values.\r\n         * 1 means break would be not collapse at all, which would make it\r\n         * effectively useless.\r\n         *\r\n         * @default 0.01\r\n         * @param value  Relative axis break\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"breakSize\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisBreak.prototype, \"startPoint\", {\r\n        /**\r\n         * Returns pixel coordinates of axis break's start.\r\n         *\r\n         * @return Start point\r\n         */\r\n        get: function () {\r\n            var renderer = this.axis.renderer;\r\n            if (renderer) {\r\n                return renderer.positionToPoint(this.startPosition);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisBreak.prototype, \"endPoint\", {\r\n        /**\r\n         * Returns pixel coordinates of axis break's end.\r\n         *\r\n         * @return End point\r\n         */\r\n        get: function () {\r\n            var renderer = this.axis.renderer;\r\n            if (renderer) {\r\n                return renderer.positionToPoint(this.endPosition);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisBreak.prototype, \"startPosition\", {\r\n        /**\r\n         * Returns a relative position at which axis break starts.\r\n         *\r\n         * This is a calculated position, meaning it shows relative position of the\r\n         * break after break is applied.\r\n         *\r\n         * @return Start position\r\n         */\r\n        get: function () {\r\n            return;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisBreak.prototype, \"endPosition\", {\r\n        /**\r\n         * Returns a relative position at which axis break ends.\r\n         *\r\n         * This is a calculated position, meaning it shows relative position of the\r\n         * break after break is applied.\r\n         *\r\n         * @return End position\r\n         */\r\n        get: function () {\r\n            return;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Draws the axis break.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisBreak.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this.axis) {\r\n            var renderer = this.axis.renderer;\r\n            renderer.updateBreakElement(this);\r\n        }\r\n    };\r\n    Object.defineProperty(AxisBreak.prototype, \"startValue\", {\r\n        /**\r\n         * @return Starting value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startValue\");\r\n        },\r\n        /**\r\n         * A starting value for the break.\r\n         *\r\n         * @param value  Starting value\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startValue\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisBreak.prototype, \"endValue\", {\r\n        /**\r\n         * @return End value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endValue\");\r\n        },\r\n        /**\r\n         * An end value for the break.\r\n         *\r\n         * @param value  End value\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endValue\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AxisBreak;\r\n}(Container));\r\nexport { AxisBreak };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBreak\"] = AxisBreak;\r\n//# sourceMappingURL=AxisBreak.js.map","/**\r\n * Base class for all Axis\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { List, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar AxisDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisDataItem.prototype, \"grid\", {\r\n        /**\r\n         * @return Grid element\r\n         */\r\n        get: function () {\r\n            if (!this._grid) {\r\n                var component_1 = this.component;\r\n                if (component_1) {\r\n                    var template = void 0;\r\n                    var grid_1;\r\n                    if (this.isRange) {\r\n                        template = component_1.axisRanges.template.grid;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            grid_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_1.renderer.grid.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            grid_1 = component_1.renderer.grid.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_1.renderer.grid.removeValue(grid_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.grid = grid_1;\r\n                    grid_1.shouldClone = false;\r\n                    this._disposers.push(grid_1);\r\n                    grid_1.axis = this.component;\r\n                }\r\n            }\r\n            return this._grid;\r\n        },\r\n        /**\r\n         * A [[Grid]] element associated with this data item.\r\n         *\r\n         * If there is no grid element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param grid  Grid element\r\n         */\r\n        set: function (grid) {\r\n            if (this._grid && this._grid != grid) {\r\n                $array.remove(this.sprites, this._grid);\r\n                this._grid.dataItem = undefined;\r\n            }\r\n            if (grid) {\r\n                if (grid.dataItem && grid.dataItem != this) {\r\n                    $array.remove(grid.dataItem.sprites, grid);\r\n                    grid.dataItem.grid = undefined;\r\n                }\r\n                this.addSprite(grid);\r\n            }\r\n            this._grid = grid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"tick\", {\r\n        /**\r\n         * @return Tick element\r\n         */\r\n        get: function () {\r\n            if (!this._tick) {\r\n                var component_2 = this.component;\r\n                if (component_2) {\r\n                    var template = void 0;\r\n                    var tick_1;\r\n                    if (this.isRange) {\r\n                        template = component_2.axisRanges.template.tick;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            tick_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_2.renderer.ticks.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            tick_1 = component_2.renderer.ticks.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_2.renderer.ticks.removeValue(tick_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.tick = tick_1;\r\n                    tick_1.axis = this.component;\r\n                    tick_1.shouldClone = false;\r\n                    this._disposers.push(tick_1);\r\n                }\r\n            }\r\n            return this._tick;\r\n        },\r\n        /**\r\n         * An [[AxisTick]] element associated with this data item.\r\n         *\r\n         * If there is no tick element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param tick  Tick element\r\n         */\r\n        set: function (tick) {\r\n            if (this._tick && this._tick != tick) {\r\n                $array.remove(this.sprites, this._tick);\r\n                this._tick.dataItem = undefined;\r\n            }\r\n            if (tick) {\r\n                if (tick.dataItem && tick.dataItem != this) {\r\n                    $array.remove(tick.dataItem.sprites, tick);\r\n                    tick.dataItem.tick = undefined;\r\n                }\r\n                this.addSprite(tick);\r\n            }\r\n            this._tick = tick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"label\", {\r\n        /**\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            if (!this._label) {\r\n                var component_3 = this.component;\r\n                if (component_3) {\r\n                    var template = void 0;\r\n                    var label_1;\r\n                    if (this.isRange) {\r\n                        template = component_3.axisRanges.template.label;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            label_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_3.renderer.labels.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            label_1 = component_3.renderer.labels.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_3.renderer.labels.removeValue(label_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this._disposers.push(label_1);\r\n                    this.label = label_1;\r\n                    label_1.shouldClone = false;\r\n                    label_1.axis = this.component;\r\n                    label_1.virtualParent = component_3;\r\n                }\r\n            }\r\n            return this._label;\r\n        },\r\n        /**\r\n         * An [[AxisLabel]] element associated with this data item.\r\n         *\r\n         * If there is no label element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param label Label element\r\n         */\r\n        set: function (label) {\r\n            if (this._label && this._label != label) {\r\n                $array.remove(this.sprites, this._label);\r\n                this._label.dataItem = undefined;\r\n            }\r\n            if (label) {\r\n                if (label.dataItem && label.dataItem != this) {\r\n                    $array.remove(label.dataItem.sprites, label);\r\n                    label.dataItem.label = undefined;\r\n                }\r\n                this.addSprite(label);\r\n            }\r\n            this._label = label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"axisFill\", {\r\n        /**\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            if (!this._axisFill) {\r\n                var component_4 = this.component;\r\n                if (component_4) {\r\n                    var template = void 0;\r\n                    var axisFill_1;\r\n                    if (this.isRange) {\r\n                        template = component_4.axisRanges.template.axisFill;\r\n                        if (!this.isTemplate && template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            axisFill_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_4.renderer.axisFills.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            axisFill_1 = component_4.renderer.axisFills.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_4.renderer.axisFills.removeValue(axisFill_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.axisFill = axisFill_1;\r\n                    axisFill_1.shouldClone = false;\r\n                    this._disposers.push(axisFill_1);\r\n                }\r\n            }\r\n            return this._axisFill;\r\n        },\r\n        /**\r\n         * An [[AxisFill]] associated element with this data item.\r\n         *\r\n         * If there is no fill element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param label Label element\r\n         */\r\n        set: function (axisFill) {\r\n            if (this._axisFill && this._axisFill != axisFill) {\r\n                $array.remove(this.sprites, this._axisFill);\r\n                this._axisFill.dataItem = undefined;\r\n            }\r\n            if (axisFill) {\r\n                if (axisFill.dataItem && axisFill.dataItem != this) {\r\n                    $array.remove(axisFill.dataItem.sprites, axisFill);\r\n                    axisFill.dataItem.axisFill = undefined;\r\n                }\r\n                axisFill.axis = this.component;\r\n                this.addSprite(axisFill);\r\n            }\r\n            this._axisFill = axisFill;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"text\", {\r\n        /**\r\n         * @return Text label\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        /**\r\n         * Text to be used as data item's label.\r\n         *\r\n         * @param text Text label\r\n         */\r\n        set: function (text) {\r\n            this._text = text;\r\n            if (this._label) { // do not use getter, it will create unwanted instances!\r\n                this._label.text = text;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"mask\", {\r\n        /**\r\n         * Data item's mask.\r\n         *\r\n         * @return Mask\r\n         */\r\n        get: function () {\r\n            return this._mask;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"contents\", {\r\n        /**\r\n         * Returns a [[Container]] to place all visual elements, related to data item\r\n         * in.\r\n         *\r\n         * If there is no Container, a new one is created.\r\n         *\r\n         * @return Contents container\r\n         */\r\n        get: function () {\r\n            if (!this._contents) {\r\n                var contents = new Container();\r\n                this.addSprite(contents);\r\n                contents.isMeasured = false;\r\n                this._contents = contents;\r\n                var component = this.component;\r\n                if (component) {\r\n                    var mask = component.renderer.createFill(this.component);\r\n                    mask.disabled = false;\r\n                    mask.axis = component;\r\n                    this.addSprite(mask);\r\n                    this._mask = mask;\r\n                    contents.mask = mask;\r\n                }\r\n            }\r\n            return this._contents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"axisBreak\", {\r\n        /**\r\n         * @return Axis break\r\n         */\r\n        get: function () {\r\n            return this._axisBreak;\r\n        },\r\n        /**\r\n         * An [[AxisBreak]] this data item falls within.\r\n         *\r\n         * @param axisBreak Axis break\r\n         */\r\n        set: function (axisBreak) {\r\n            if (this._axisBreak) {\r\n                this._axisBreak.dataItems.removeValue(this);\r\n            }\r\n            if (axisBreak) {\r\n                axisBreak.dataItems.push(this);\r\n            }\r\n            this._axisBreak = axisBreak;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Re-draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisDataItem.prototype.validate = function () {\r\n        if (this.component) {\r\n            this.component.validateDataElement(this);\r\n        }\r\n    };\r\n    /**\r\n     * Appends data item's elements to the parent [[Container]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisDataItem.prototype.appendChildren = function () {\r\n        if (this.component) {\r\n            this.component.appendDataItem(this);\r\n        }\r\n    };\r\n    /**\r\n     * Ordering function used in JSON setup.\r\n     *\r\n     * @param a  Item A\r\n     * @param b  Item B\r\n     * @return Order\r\n     */\r\n    AxisDataItem.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        else if (a == \"language\") {\r\n            return -1;\r\n        }\r\n        else if (b == \"language\") {\r\n            return 1;\r\n        }\r\n        else if (a == \"component\") {\r\n            return -1;\r\n        }\r\n        else if (b == \"component\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * Checks if data item has particular property set.\r\n     *\r\n     * @param prop  Property name\r\n     * @return Property set?\r\n     */\r\n    AxisDataItem.prototype.hasProperty = function (prop) {\r\n        return prop == \"component\" ? true : _super.prototype.hasProperty.call(this, prop);\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[AxisDataItem]].\r\n     *\r\n     * @param source Source AxisDataItem\r\n     */\r\n    AxisDataItem.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.text = source.text;\r\n        if (source.bullet) {\r\n            this.bullet = source.bullet.clone();\r\n        }\r\n        this.minPosition = source.minPosition;\r\n        this.maxPosition = source.maxPosition;\r\n    };\r\n    /**\r\n     * Sets visibility of the Data Item.\r\n     *\r\n     * @param value Data Item\r\n     */\r\n    AxisDataItem.prototype.setVisibility = function (value, noChangeValues) {\r\n        _super.prototype.setVisibility.call(this, value, noChangeValues);\r\n        if (this._contents) {\r\n            this._contents.visible = value;\r\n        }\r\n    };\r\n    Object.defineProperty(AxisDataItem.prototype, \"bullet\", {\r\n        /**\r\n         * @return Bullet\r\n         */\r\n        get: function () {\r\n            return this._bullet;\r\n        },\r\n        /**\r\n         * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n         * bullet in the middle of the cell, or specific value.\r\n         *\r\n         * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n         * instead. It has a `location` property which can be used to indicate\r\n         * precise relative location within cell/range.\r\n         *\r\n         * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n         * into it.\r\n         *\r\n         * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n         * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n         * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n         *\r\n         * ```TypeScript\r\n         * let range = dateAxis.axisRanges.create();\r\n         * range.date = new Date(2018, 0, 5);\r\n         *\r\n         * let flag = new am4plugins_bullets.FlagBullet();\r\n         * flag.label.text = \"Hello\";\r\n         *\r\n         * range.bullet = flag;\r\n         * ```\r\n         * ```JavaScript\r\n         * var range = dateAxis.axisRanges.create();\r\n         * range.date = new Date(2018, 0, 5);\r\n         *\r\n         * var flag = new am4plugins_bullets.FlagBullet();\r\n         * flag.label.text = \"Hello\";\r\n         *\r\n         * range.bullet = flag;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     // ...\r\n         *     \"axisRanges\": [{\r\n         *       \"date\": new Date(2018, 0, 5),\r\n         *       \"bullet: {\r\n         *         \"type\": \"FlagBullet\",\r\n         *         \"label\": {\r\n         *           \"text\": \"Hello\"\r\n         *         }\r\n         *       }\r\n         *     }]\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @since 4.5.9\r\n         * @param  value  Bullet\r\n         */\r\n        set: function (value) {\r\n            if (this._bullet && this._bullet != value) {\r\n                $array.remove(this.sprites, this._bullet);\r\n                this._bullet.dataItem = undefined;\r\n            }\r\n            this._bullet = value;\r\n            if (value) {\r\n                this.addSprite(value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AxisDataItem;\r\n}(DataItem));\r\nexport { AxisDataItem };\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\r\nexport var AxisItemLocation;\r\n(function (AxisItemLocation) {\r\n    AxisItemLocation[AxisItemLocation[\"Start\"] = 0] = \"Start\";\r\n    AxisItemLocation[AxisItemLocation[\"Middle\"] = 0.5] = \"Middle\";\r\n    AxisItemLocation[AxisItemLocation[\"End\"] = 1] = \"End\";\r\n})(AxisItemLocation || (AxisItemLocation = {}));\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\r\nvar Axis = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Axis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Axis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Number of Grid elements on the axis.\r\n         */\r\n        _this._gridCount = 10;\r\n        /**\r\n         * A list of [[XYSeries]] that are using this Axis.\r\n         */\r\n        _this._series = new List();\r\n        /**\r\n         * Specifies if axis should be automatically disposed when removing from\r\n         * chart's axis list.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.autoDispose = true;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._axisItemCount = 0;\r\n        if (_this.constructor === Axis) {\r\n            throw new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\r\n        }\r\n        _this.hideTooltipWhileZooming = true;\r\n        _this.minWidth = 0.0001;\r\n        _this.minHeight = 0.0001;\r\n        _this.className = \"Axis\";\r\n        _this.shouldClone = false;\r\n        _this.setPropertyValue(\"cursorTooltipEnabled\", true);\r\n        _this.toggleZoomOutButton = true;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create title\r\n        _this.title = new Label();\r\n        _this.title.shouldClone = false;\r\n        _this._disposers.push(_this.title);\r\n        _this.setPropertyValue(\"startLocation\", 0);\r\n        _this.setPropertyValue(\"endLocation\", 1);\r\n        // Data item iterator\r\n        _this._dataItemsIterator = new $iter.ListIterator(_this.dataItems, function () { return _this.dataItems.create(); });\r\n        _this._dataItemsIterator.createNewItems = true;\r\n        // Create tooltip\r\n        var tooltip = new Tooltip();\r\n        _this._disposers.push(tooltip);\r\n        tooltip.label.padding(5, 10, 5, 10);\r\n        tooltip.background.pointerLength = 5;\r\n        tooltip.fitPointerToBounds = true;\r\n        tooltip.background.filters.clear();\r\n        // Set virtual parentfor the tooltip so that it can properly inheirt\r\n        // formatters from the axis.\r\n        tooltip.virtualParent = _this;\r\n        // Create background element for the tooltip\r\n        var background = tooltip.background;\r\n        background.cornerRadius = 0;\r\n        background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        background.stroke = background.fill;\r\n        background.strokeWidth = 1;\r\n        background.fillOpacity = 1;\r\n        tooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\r\n        _this.tooltip = tooltip;\r\n        // Accessibility\r\n        _this.readerHidden = true;\r\n        _this.events.on(\"rangechangestarted\", function () {\r\n            _this.series.each(function (series) {\r\n                if (series.hideTooltipWhileZooming) {\r\n                    series.tooltip.hide(0);\r\n                    series.tooltip.__disabled = true;\r\n                }\r\n            });\r\n            if (_this.hideTooltipWhileZooming) {\r\n                _this.tooltip.hide(0);\r\n                _this.tooltip.__disabled = true;\r\n            }\r\n        }, undefined, false);\r\n        _this.events.on(\"rangechangeended\", function () {\r\n            _this.series.each(function (series) {\r\n                if (series.hideTooltipWhileZooming) {\r\n                    series.tooltip.hide(0);\r\n                    series.tooltip.__disabled = false;\r\n                }\r\n            });\r\n            if (_this.hideTooltipWhileZooming) {\r\n                _this.tooltip.hide(0);\r\n                _this.tooltip.__disabled = false;\r\n            }\r\n        }, undefined, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Holds reference to a function that accepts a DataItem and its index as\r\n     * parameters.\r\n     *\r\n     * It can either return a fill opacity for a fill, or manipulate data item\r\n     * directly, to create various highlighting scenarios.\r\n     *\r\n     * For example, you can set it up to highlight only weekends on a\r\n     * [[DateAxis]].\r\n     */\r\n    Axis.prototype.fillRule = function (dataItem, index) {\r\n        if (!$type.isNumber(index)) {\r\n            index = dataItem.index;\r\n        }\r\n        if (index / 2 == Math.round(index / 2)) {\r\n            dataItem.axisFill.__disabled = true;\r\n            dataItem.axisFill.opacity = 0;\r\n        }\r\n        else {\r\n            dataItem.axisFill.opacity = 1;\r\n            dataItem.axisFill.__disabled = false;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Axis.prototype.createDataItem = function () {\r\n        return new AxisDataItem();\r\n    };\r\n    /**\r\n     * Invalidates layout.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.invalidateLayout = function () {\r\n        _super.prototype.invalidateLayout.call(this);\r\n        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.invalidateLayout();\r\n        });\r\n    };\r\n    /**\r\n     * Invalidates series of this axis.\r\n     */\r\n    Axis.prototype.invalidateSeries = function () {\r\n        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Override to cancel super call for data element validation.\r\n     * @ignore\r\n     */\r\n    Axis.prototype.validateDataElements = function () {\r\n        this._axisItemCount = 0;\r\n        if (this.ghostLabel) {\r\n            this.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\r\n            this.ghostLabel.validate();\r\n        }\r\n    };\r\n    /**\r\n     * Recalculates the number of grid items on the axis.\r\n     */\r\n    Axis.prototype.updateGridCount = function () {\r\n        if (this.renderer) {\r\n            this._gridCount = this.axisLength / this.renderer.minGridDistance;\r\n        }\r\n    };\r\n    /**\r\n     * Redraws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateLayout = function () {\r\n        this.axisFullLength = this.axisLength / (this.end - this.start);\r\n        _super.prototype.validateLayout.call(this);\r\n        this.updateGridCount();\r\n        var renderer = this.renderer;\r\n        if (renderer) {\r\n            renderer.updateAxisLine();\r\n            renderer.updateTooltip();\r\n            renderer.updateBaseGridElement();\r\n        }\r\n        if (this._prevLength != this.axisLength) {\r\n            this.dispatchImmediately(\"lengthchanged\");\r\n            this._prevLength = this.axisLength;\r\n        }\r\n    };\r\n    /**\r\n     * Initializes Axis' renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.initRenderer = function () {\r\n    };\r\n    /**\r\n     * Adds a data item to the Axis.\r\n     *\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.appendDataItem = function (dataItem) {\r\n        var renderer = this.renderer;\r\n        var tick = dataItem.tick;\r\n        if (tick) {\r\n            if (tick.above) {\r\n                tick.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                tick.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        if (dataItem.label) {\r\n            dataItem.label.parent = renderer;\r\n        }\r\n        var axisFill = dataItem.axisFill;\r\n        if (axisFill) {\r\n            if (axisFill.above) {\r\n                axisFill.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                axisFill.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        var grid = dataItem.grid;\r\n        if (grid) {\r\n            if (grid.above) {\r\n                grid.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                grid.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        if (dataItem.bullet) {\r\n            dataItem.bullet.parent = renderer.bulletsContainer;\r\n        }\r\n    };\r\n    /**\r\n     * Redraws Axis' related items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this.validateLayout();\r\n        this.renderer.updateGridContainer();\r\n    };\r\n    /**\r\n     * Redars Axis ranges.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateAxisRanges = function () {\r\n        var _this = this;\r\n        $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n            _this.appendDataItem(axisRange);\r\n            _this.validateDataElement(axisRange);\r\n            if (axisRange.grid) {\r\n                axisRange.grid.validate();\r\n            }\r\n            if (axisRange.tick) {\r\n                axisRange.tick.validate();\r\n            }\r\n            if (axisRange.axisFill) {\r\n                axisRange.axisFill.validate();\r\n            }\r\n            if (axisRange.label) {\r\n                axisRange.label.validate();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invalidates all axis breaks, so they are redrawn.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateBreaks = function () {\r\n        if (this._axisBreaks) {\r\n            $iter.each(this._axisBreaks.iterator(), function (axisBreak) {\r\n                axisBreak.invalidate();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Associates an Axis break with this Axis, after it is inserted into\r\n     * `axisBreaks`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event\r\n     */\r\n    Axis.prototype.processBreak = function (event) {\r\n        var axisBreak = event.newValue;\r\n        axisBreak.parent = this.renderer.breakContainer;\r\n        axisBreak.axis = this;\r\n    };\r\n    /**\r\n     * Registers a [[XYSeries]] element with this Axis.\r\n     *\r\n     * Returns a [[Disposer]] for all events, added to Series for watching\r\n     * changes in Axis, and vice versa.\r\n     * @ignore\r\n     * @param series  Series\r\n     * @return Event disposer\r\n     */\r\n    Axis.prototype.registerSeries = function (series) {\r\n        var _this = this;\r\n        this.series.moveValue(series);\r\n        return new MultiDisposer([\r\n            new Disposer(function () {\r\n                _this.series.removeValue(series);\r\n            }),\r\n            this.events.on(\"lengthchanged\", series.invalidate, series, false),\r\n            this.events.on(\"lengthchanged\", series.createMask, series, false),\r\n            this.events.on(\"startchanged\", series.invalidate, series, false),\r\n            this.events.on(\"endchanged\", series.invalidate, series, false),\r\n        ]);\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"renderer\", {\r\n        /**\r\n         * @return Renderer\r\n         */\r\n        get: function () {\r\n            return this._renderer;\r\n        },\r\n        /**\r\n         * An [[AxisRenderer]] to be used to render this Axis.\r\n         *\r\n         * Please note that most of the settings, related to Axis' appearance are set\r\n         * via its renderer. Not directly on the Axis.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * axis.renderer.inside = true;\r\n         * axis.renderer.minLabelPosition = 0.1;\r\n         * axis.renderer.maxLabelPosition = 0.9;\r\n         * ```\r\n         * ```JavaScript\r\n         * axis.renderer.inside = true;\r\n         * axis.renderer.minLabelPosition = 0.1;\r\n         * axis.renderer.maxLabelPosition = 0.9;\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n         * @param renderer  Renderer\r\n         */\r\n        set: function (renderer) {\r\n            if (renderer != this._renderer) {\r\n                this._renderer = renderer;\r\n                renderer.chart = this.chart;\r\n                renderer.axis = this;\r\n                renderer.parent = this;\r\n                this.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\r\n                this.initRenderer();\r\n                this._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\r\n                var ghostLabel_1 = this.renderer.labels.create();\r\n                this._disposers.push(ghostLabel_1);\r\n                ghostLabel_1.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\r\n                ghostLabel_1.text = \"L\";\r\n                ghostLabel_1.parent = this.renderer;\r\n                ghostLabel_1.shouldClone = false;\r\n                ghostLabel_1.fillOpacity = 0;\r\n                ghostLabel_1.opacity = 0;\r\n                ghostLabel_1.strokeOpacity = 0;\r\n                ghostLabel_1.interactionsEnabled = false;\r\n                ghostLabel_1.validate();\r\n                this.ghostLabel = ghostLabel_1;\r\n                this.events.on(\"beforedatavalidated\", function () {\r\n                    ghostLabel_1.text = \"L\";\r\n                }, undefined, false);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts a relative position to angle. (for circular axes)\r\n     *\r\n     * @param position Position (0-1)\r\n     * @return Angle\r\n     */\r\n    Axis.prototype.positionToAngle = function (position) {\r\n        return this.renderer.positionToAngle(position);\r\n    };\r\n    /**\r\n     * Converts pixel coordinates to a relative position. (0-1)\r\n     *\r\n     * @param point  Coorinates (px)\r\n     * @return Position (0-1)\r\n     */\r\n    Axis.prototype.pointToPosition = function (point) {\r\n        return this.renderer.pointToPosition(point);\r\n    };\r\n    /**\r\n     * Converts relative position to coordinate.\r\n     *\r\n     * @since 4.7.15\r\n     * @param position (0-1)\r\n     * @return coordinate (px)\r\n     */\r\n    Axis.prototype.positionToCoordinate = function (position) {\r\n        return this.renderer.positionToCoordinate(position);\r\n    };\r\n    /**\r\n     * [getAnyRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param start  [description]\r\n     * @param end    [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getAnyRangePath = function (start, end) {\r\n        return this.renderer.getPositionRangePath(start, end);\r\n    };\r\n    /**\r\n     * Converts any positional parameter to a relative position on axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @param value  Pisition\r\n     * @return Position (0-1)\r\n     */\r\n    Axis.prototype.anyToPosition = function (value) {\r\n        return 0;\r\n    };\r\n    /**\r\n     * Converts any positional parameter to a relative position on axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @param value  Pisition\r\n     * @return Orientation point\r\n     */\r\n    Axis.prototype.anyToPoint = function (value) {\r\n        return { x: 0, y: 0, angle: 0 };\r\n    };\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition [description]\r\n     * @param endPosition   [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        if (this.renderer) {\r\n            return this.renderer.getPositionRangePath(startPosition, endPosition);\r\n        }\r\n        return \"\";\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisLength\", {\r\n        /**\r\n         * Actual axis length in pixels.\r\n         *\r\n         * @return Axis length (px)\r\n         */\r\n        get: function () {\r\n            if (this.renderer) {\r\n                return this.renderer.axisLength;\r\n            }\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"cursorTooltipEnabled\", {\r\n        /**\r\n         * @return Display tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorTooltipEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if axis should display a tooltip for chart's cursor.\r\n         *\r\n         * @param value Display tooltip?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\r\n                if (value && this.renderer) {\r\n                    this.renderer.updateTooltip();\r\n                }\r\n                else if (this.tooltip) {\r\n                    this.tooltip.hide(0);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"toggleZoomOutButton\", {\r\n        /**\r\n         * @return Toggle zoom out button?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"toggleZoomOutButton\");\r\n        },\r\n        /**\r\n         * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n         * and vice versa: when axis is zoomed out completely, zoom out button is\r\n         * hidden.\r\n         *\r\n         * Setting this to `false` will disable this behavior. Zooming in our out\r\n         * this axis will not reveal or hide zoom out button.\r\n         *\r\n         * @default true\r\n         * @since 4.6.2\r\n         * @param  value  Toggle zoom out button?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"toggleZoomOutButton\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     *\r\n     * @see {@link Tooltip}\r\n     */\r\n    Axis.prototype.hideTooltip = function (duration) {\r\n        _super.prototype.hideTooltip.call(this, duration);\r\n        this._tooltipPosition = undefined;\r\n    };\r\n    /**\r\n     * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n     *\r\n     * @param position Position (0-1)\r\n     * @param local or global position\r\n     */\r\n    Axis.prototype.showTooltipAtPosition = function (position, local) {\r\n        var tooltip = this._tooltip;\r\n        if (!tooltip || this.dataItems.length <= 0) {\r\n            this._tooltipPosition = undefined;\r\n        }\r\n        else {\r\n            if (!local) {\r\n                position = this.toAxisPosition(position);\r\n            }\r\n            if (!$type.isNumber(position) || position < this.start || position > this.end) {\r\n                tooltip.hide(0);\r\n                this._tooltipPosition = undefined;\r\n                return;\r\n            }\r\n            var renderer = this.renderer;\r\n            //@todo: think of how to solve this better\r\n            if (!tooltip.parent) {\r\n                tooltip.parent = this.tooltipContainer;\r\n            }\r\n            var tooltipLocation = renderer.tooltipLocation;\r\n            var startPosition = this.getCellStartPosition(position);\r\n            var endPosition = this.getCellEndPosition(position);\r\n            if (this.tooltipPosition == \"fixed\") {\r\n                position = $math.ceil(startPosition + (endPosition - startPosition) * tooltipLocation, 4);\r\n            }\r\n            position = $math.fitToRange(position, this.start, this.end);\r\n            if (this._tooltipPosition != position) {\r\n                this._tooltipPosition = position;\r\n                var tooltipLocation2 = renderer.tooltipLocation2;\r\n                var startPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\r\n                var endPoint = renderer.positionToPoint(endPosition, tooltipLocation2);\r\n                // save values so cursor could use them\r\n                this.currentItemStartPoint = startPoint;\r\n                this.currentItemEndPoint = endPoint;\r\n                if (renderer.fullWidthTooltip) {\r\n                    tooltip.width = endPoint.x - startPoint.x;\r\n                    tooltip.height = endPoint.y - startPoint.y;\r\n                }\r\n                var point = renderer.positionToPoint(position, tooltipLocation2);\r\n                var globalPoint = $utils.spritePointToSvg(point, this.renderer.line);\r\n                tooltip.text = this.getTooltipText(position);\r\n                if (tooltip.text) {\r\n                    tooltip.pointTo(globalPoint);\r\n                    tooltip.show();\r\n                }\r\n            }\r\n            if (!this.cursorTooltipEnabled || this.tooltip.disabled) {\r\n                tooltip.hide(0);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Converts relative position (0-1) to Axis position with zoom level and\r\n     * inversed taken into account.\r\n     *\r\n     * @param position Global position (0-1)\r\n     * @return Position within Axis (0-1)\r\n     */\r\n    Axis.prototype.toAxisPosition = function (position) {\r\n        position = this.renderer.toAxisPosition(position);\r\n        if (position == undefined) {\r\n            return;\r\n        }\r\n        position = position * (this.end - this.start);\r\n        if (this.renderer.inversed) {\r\n            position = this.end - position;\r\n        }\r\n        else {\r\n            position = this.start + position;\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Converts position on the axis with zoom level and\r\n     * inversed taken into account to global position.\r\n     *\r\n     * @param position Axis position (0-1)\r\n     * @return Global position (0-1)\r\n     */\r\n    Axis.prototype.toGlobalPosition = function (position) {\r\n        if (this.renderer.inversed) {\r\n            position = this.end - position;\r\n        }\r\n        else {\r\n            position = position - this.start;\r\n        }\r\n        return position / (this.end - this.start);\r\n    };\r\n    /**\r\n     * Returns text to be used for cursor's Axis tooltip.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position coordinate (px)\r\n     * @return Label text\r\n     */\r\n    Axis.prototype.getTooltipText = function (position) {\r\n        return;\r\n    };\r\n    /**\r\n     * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n     * place.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pointerOrientation  Pointer (stem) orientation\r\n     * @param boundingRectangle   A rectangle for tooltip to fit within\r\n     */\r\n    Axis.prototype.updateTooltip = function (pointerOrientation, boundingRectangle) {\r\n        var tooltip = this._tooltip;\r\n        if (tooltip) {\r\n            tooltip.pointerOrientation = pointerOrientation;\r\n            tooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\r\n        }\r\n    };\r\n    /**\r\n     * [roundPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position  Relative position\r\n     * @param location  Location on axis\r\n     * @return Rounded position\r\n     */\r\n    Axis.prototype.roundPosition = function (position, location, axisLocation) {\r\n        return position;\r\n    };\r\n    /**\r\n     * [getCellStartPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getCellStartPosition = function (position) {\r\n        return position;\r\n    };\r\n    /**\r\n     * [getCellEndPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getCellEndPosition = function (position) {\r\n        return position;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisRanges\", {\r\n        /**\r\n         * A list of axis ranges for this Axis.\r\n         *\r\n         * @return Axis ranges\r\n         */\r\n        get: function () {\r\n            if (!this._axisRanges) {\r\n                var dataItem = this.createDataItem();\r\n                dataItem.isRange = true;\r\n                dataItem.axisFill = this.renderer.axisFills.template.clone();\r\n                dataItem.grid = this.renderer.grid.template.clone();\r\n                dataItem.tick = this.renderer.ticks.template.clone();\r\n                dataItem.label = this.renderer.labels.template.clone();\r\n                dataItem.isTemplate = true;\r\n                dataItem.component = this;\r\n                dataItem.axisFill.disabled = false;\r\n                dataItem.tick.disabled = false;\r\n                dataItem.grid.disabled = false;\r\n                dataItem.label.disabled = false;\r\n                this._axisRanges = new ListTemplate(dataItem);\r\n                this._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisRanges));\r\n                this._disposers.push(this._axisRanges.template);\r\n            }\r\n            return this._axisRanges;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates an axis range after it has been added to the axis range list.\r\n     *\r\n     * @param event Event\r\n     */\r\n    Axis.prototype.processAxisRange = function (event) {\r\n        var axisRange = event.newValue;\r\n        axisRange.component = this;\r\n        axisRange.isRange = true;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisBreaks\", {\r\n        /**\r\n         * A list of axis breaks on this Axis.\r\n         *\r\n         * @return Axis breaks.\r\n         */\r\n        get: function () {\r\n            if (!this._axisBreaks) {\r\n                this._axisBreaks = new SortedListTemplate(this.createAxisBreak(), function (a, b) {\r\n                    return $number.order(a.adjustedStartValue, b.adjustedStartValue);\r\n                });\r\n                this._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisBreaks));\r\n                this._disposers.push(this._axisBreaks.template);\r\n            }\r\n            return this._axisBreaks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new axis break.\r\n     *\r\n     * @return Axis break\r\n     */\r\n    Axis.prototype.createAxisBreak = function () {\r\n        return new AxisBreak();\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"series\", {\r\n        /**\r\n         * A list of Series currently associated with this Axis.\r\n         *\r\n         * @return Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new List();\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes Series' data items.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.processSeriesDataItems = function () {\r\n    };\r\n    /**\r\n     * Processes Series' single data item.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {\r\n    };\r\n    /**\r\n     * Post-processes Serie's data items.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.postProcessSeriesDataItems = function () {\r\n    };\r\n    /**\r\n     * Post-processes Serie's single data item.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.postProcessSeriesDataItem = function (dataItem) {\r\n    };\r\n    //\r\n    /**\r\n     * Updates Axis based on all Series that might influence it.\r\n     *\r\n     * Called by Series after Series data is validated.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.updateAxisBySeries = function () {\r\n    };\r\n    /**\r\n     * Hides unused data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.hideUnusedDataItems = function () {\r\n        var _this = this;\r\n        // hide all unused\r\n        var dataItemsIterator = this._dataItemsIterator;\r\n        dataItemsIterator.createNewItems = false;\r\n        $iter.each(dataItemsIterator.iterator(), function (dataItem) {\r\n            _this.validateDataElement(dataItem); // solves shrinking\r\n            dataItem.__disabled = true;\r\n        });\r\n        dataItemsIterator.clear();\r\n        dataItemsIterator.createNewItems = true;\r\n    };\r\n    /**\r\n     * Returns a Series' data item that corresponds to specific position on Axis.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param series    Series\r\n     * @param position  Position (0-1)\r\n     * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n     * @return Data item\r\n     */\r\n    Axis.prototype.getSeriesDataItem = function (series, position, findNearest) {\r\n        return;\r\n    };\r\n    /**\r\n     * Returns an angle that corresponds to specific position on axis.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       ???\r\n     * @param location  Location\r\n     * @param stackKey  ???\r\n     * @return Angle\r\n     */\r\n    Axis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getX description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getX = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getX description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getY description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getY = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getY description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"basePoint\", {\r\n        /**\r\n         * Coordinates of the actual axis start.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Base point coordinates\r\n         */\r\n        get: function () {\r\n            return { x: 0, y: 0 };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.dataChangeUpdate = function () {\r\n    };\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.seriesDataChangeUpdate = function (series) {\r\n    };\r\n    /**\r\n     * Removes axis breaks that fall between `min` and `max` (???)\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param min  Start value\r\n     * @param max  End value\r\n     * @return Spread o\r\n     */\r\n    Axis.prototype.adjustDifference = function (min, max) {\r\n        var difference = max - min;\r\n        if ($type.isNumber(difference)) {\r\n            if (this._axisBreaks) {\r\n                $iter.eachContinue(this._axisBreaks.iterator(), function (axisBreak) {\r\n                    var startValue = axisBreak.adjustedStartValue;\r\n                    var endValue = axisBreak.adjustedEndValue;\r\n                    if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n                        // breaks are sorted, we don't need go further anymore\r\n                        if (startValue > max) {\r\n                            return false;\r\n                        }\r\n                        if (endValue >= min) {\r\n                            if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n                                var breakSize = axisBreak.breakSize;\r\n                                var intersection = $math.intersection({ start: startValue, end: endValue }, { start: min, end: max });\r\n                                if (intersection) {\r\n                                    difference -= (intersection.end - intersection.start) * (1 - breakSize);\r\n                                }\r\n                            }\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n            return difference;\r\n        }\r\n    };\r\n    /**\r\n     * Checks if specific value falls within a break.\r\n     *\r\n     * Returns [[AxisBreak]] the value falls into.\r\n     *\r\n     * @param value  Value to check\r\n     * @return Axis break\r\n     */\r\n    Axis.prototype.isInBreak = function (value) {\r\n        if (this._axisBreaks) {\r\n            return $iter.find(this._axisBreaks.iterator(), function (axisBreak) {\r\n                return value >= axisBreak.adjustedStartValue &&\r\n                    value <= axisBreak.adjustedEndValue;\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * [fixAxisBreaks description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.fixAxisBreaks = function () {\r\n        var _this = this;\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            if (axisBreaks.length > 0) {\r\n                // first make sure that startValue is <= end value\r\n                // This needs to make a copy of axisBreaks because it mutates the list while traversing\r\n                // TODO very inefficient\r\n                $array.each($iter.toArray(axisBreaks.iterator()), function (axisBreak) {\r\n                    var startValue = $math.min(axisBreak.startValue, axisBreak.endValue);\r\n                    var endValue = $math.max(axisBreak.startValue, axisBreak.endValue);\r\n                    axisBreak.adjustedStartValue = startValue;\r\n                    axisBreak.adjustedEndValue = endValue;\r\n                    _this._axisBreaks.update(axisBreak);\r\n                });\r\n                var firstAxisBreak = axisBreaks.first;\r\n                var previousEndValue_1 = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n                // process breaks\r\n                // TODO does this need to call axisBreaks.update ?\r\n                $iter.each(axisBreaks.iterator(), function (axisBreak) {\r\n                    var startValue = axisBreak.adjustedStartValue;\r\n                    var endValue = axisBreak.adjustedEndValue;\r\n                    // breaks can't overlap\r\n                    // if break starts before previous break ends\r\n                    if (startValue < previousEndValue_1) {\r\n                        startValue = previousEndValue_1;\r\n                        if (endValue < previousEndValue_1) {\r\n                            endValue = previousEndValue_1;\r\n                        }\r\n                    }\r\n                    axisBreak.adjustedStartValue = startValue;\r\n                    axisBreak.adjustedEndValue = endValue;\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"startIndex\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        /**\r\n         * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n         *\r\n         * Yes, also for category axis, this helps to avoid jumping of categories\r\n         * while scrolling and does not do a lot of extra work as we use\r\n         * protected `_startIndex` and `_endIndex` when working with items.\r\n         *\r\n         * @hidden\r\n         */\r\n        /**\r\n         * [startIndex description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"endIndex\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.dataItems.length;\r\n        },\r\n        /**\r\n         * [endIndex description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a formatted label based on position.\r\n     *\r\n     * Individual axis types should override this method to generate a label\r\n     * that is relevant to axis type.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    Axis.prototype.getPositionLabel = function (position) {\r\n        return Math.round(position * 100) + \"%x\";\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart;\r\n        },\r\n        /**\r\n         * A Chart this Axis belongs to.\r\n         *\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a data item for a Series range.\r\n     *\r\n     * @param series  Target Series\r\n     * @return Range data item\r\n     */\r\n    Axis.prototype.createSeriesRange = function (series) {\r\n        var range = this.axisRanges.create();\r\n        range.component = this;\r\n        range.axisFill = this.renderer.axisFills.template.clone();\r\n        range.axisFill.disabled = false;\r\n        range.axisFill.fillOpacity = 0;\r\n        range.grid = this.renderer.grid.template.clone();\r\n        range.grid.disabled = true;\r\n        range.tick = this.renderer.ticks.template.clone();\r\n        range.tick.disabled = true;\r\n        range.label = this.renderer.labels.template.clone();\r\n        range.label.disabled = true;\r\n        series.axisRanges.push(range);\r\n        return range;\r\n    };\r\n    /**\r\n     * Copies all properties and related data from a different instance of Axis.\r\n     *\r\n     * @param source Source Axis\r\n     */\r\n    Axis.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.renderer) {\r\n            this.renderer.copyFrom(source.renderer);\r\n        }\r\n        else {\r\n            if (source.renderer) {\r\n                this.renderer = source.renderer.clone();\r\n                this._disposers.push(this.renderer);\r\n            }\r\n        }\r\n        if (source.title) {\r\n            if (!this.title) {\r\n                this.title = source.title.clone();\r\n                this.title.parent = this;\r\n            }\r\n            else {\r\n                this.title.copyFrom(source.title);\r\n            }\r\n            this._disposers.push(this.title);\r\n        }\r\n    };\r\n    /**\r\n     * Resets internal iterator.\r\n     */\r\n    Axis.prototype.resetIterators = function () {\r\n        this._dataItemsIterator.reset();\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Axis.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up axis ranges\r\n            if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n                for (var i = 0, len = config.axisRanges.length; i < len; i++) {\r\n                    var range = config.axisRanges[i];\r\n                    // If `series` is set, we know it's a series range\r\n                    if ($type.hasValue(range[\"series\"])) {\r\n                        if ($type.isString(range[\"series\"])) {\r\n                            if (this.map.hasKey(range[\"series\"])) {\r\n                                //range[\"series\"] = this.map.getKey(range[\"series\"]);\r\n                                config.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\r\n                                delete (range[\"series\"]);\r\n                                config.axisRanges[i].config = range;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"startLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startLocation\");\r\n        },\r\n        /**\r\n         * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n         *\r\n         * * 0 - Full first cell is shown.\r\n         * * 0.5 - Half of first cell is shown.\r\n         * * 1 - None of the first cell is visible. (you probably don't want that)\r\n         *\r\n         * @param value Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"endLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endLocation\");\r\n        },\r\n        /**\r\n         * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n         *\r\n         * * 0 - None of the last cell is shown. (don't do that)\r\n         * * 0.5 - Half of the last cell is shown.\r\n         * * 1 - Full last cell is shown.\r\n         *\r\n         * @param value Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Axis.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.renderer) {\r\n            this.renderer.gridContainer.disabled = value;\r\n        }\r\n        return changed;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"title\", {\r\n        /**\r\n         * @return Title label\r\n         */\r\n        get: function () {\r\n            return this._title;\r\n        },\r\n        /**\r\n         * A reference to a [[Label]] element which serves as a title to the axis.\r\n         *\r\n         * When axis is created it aleready has an element, so you can just modify\r\n         * it.\r\n         *\r\n         * Or you can replace it with your own instance of `Label`.\r\n         *\r\n         * @param  value  Title label\r\n         */\r\n        set: function (value) {\r\n            if (this._title && this._title != value) {\r\n                this._title.dispose();\r\n            }\r\n            if (value) {\r\n                this._title = value;\r\n                value.parent = this;\r\n                value.shouldClone = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"hideTooltipWhileZooming\", {\r\n        /**\r\n         * @return Hide tooltip while zooming?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n        },\r\n        /**\r\n         * Indicates if axis' tooltip should be hidden while axis range is animating\r\n         * (zooming)\r\n         *\r\n         * @default true\r\n         * @since 4.7.16\r\n         * @param  value  Hide tooltip while zooming?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Axis;\r\n}(Component));\r\nexport { Axis };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Axis\"] = Axis;\r\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Disable axis tooltips.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Axis && target.tooltip) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.cursorTooltipEnabled = false;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Axis.js.map","/**\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nvar AxisLine = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisLine, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisLine() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisLine\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.stroke = interfaceColors.getFor(\"grid\");\r\n        _this.strokeOpacity = 0.15;\r\n        _this.pixelPerfect = true;\r\n        _this.fill = color();\r\n        _this.applyTheme();\r\n        _this.interactionsEnabled = false;\r\n        return _this;\r\n        //this.element.moveTo({ x: 0, y: 0 });\r\n    }\r\n    return AxisLine;\r\n}(Sprite));\r\nexport { AxisLine };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n//# sourceMappingURL=AxisLine.js.map","import * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * AxisFill is a base class used to defines fill shapes for various\r\n * type-specific Axes.\r\n *\r\n * Axis fills are used to add fills to specific ranges of those axes.\r\n *\r\n * @see {@link IAxisFillEvents} for a list of available events\r\n * @see {@link IAxisFillAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar AxisFill = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisFill, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Axis\r\n     */\r\n    function AxisFill(axis) {\r\n        var _this = _super.call(this) || this;\r\n        _this.axis = axis;\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.className = \"AxisFill\";\r\n        _this.isMeasured = false;\r\n        _this.location = 0;\r\n        _this.above = false;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.fillOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisFill.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.axis) {\r\n            this.axis.invalidateDataItems();\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Draws the fill element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisFill.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this.__disabled || this.disabled) {\r\n            return;\r\n        }\r\n        if (this.axis && $type.isNumber(this.startPosition) && $type.isNumber(this.endPosition)) {\r\n            this.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);\r\n            this.path = this.fillPath;\r\n        }\r\n    };\r\n    Object.defineProperty(AxisFill.prototype, \"startPosition\", {\r\n        /**\r\n         * @return Start position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startPosition\");\r\n        },\r\n        /**\r\n         * An actual starting position of the fill.\r\n         *\r\n         * @param value  Starting position\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startPosition\", value);\r\n            this.invalidate(); // this is needed as relative position might not change when zooming\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisFill.prototype, \"endPosition\", {\r\n        /**\r\n         * @return End position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endPosition\");\r\n        },\r\n        /**\r\n         * An actual end position of the fill.\r\n         *\r\n         * @param value End position\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endPosition\", value);\r\n            this.invalidate(); // this is needed as relative position might not change when zooming\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisFill.prototype, \"location\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"location\");\r\n        },\r\n        /**\r\n         * Relative location of the fill. (0-1)\r\n         *\r\n         * @param value Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"location\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisFill.prototype.setPath = function (value) {\r\n        if (this.setPropertyValue(\"path\", value)) {\r\n            this.element.attr({ \"d\": value });\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(AxisFill.prototype, \"above\", {\r\n        /**\r\n         * @return Draw above series?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"above\");\r\n        },\r\n        /**\r\n         * Normally fill goes below series. Set this to `true` to go above.\r\n         *\r\n         * @default false\r\n         * @since 4.5.9\r\n         * @param  value  Draw above series?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"above\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AxisFill;\r\n}(Sprite));\r\nexport { AxisFill };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFill\"] = AxisFill;\r\n//# sourceMappingURL=AxisFill.js.map","/**\r\n * A module defining functionality for axis grid elements.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Displays an axis grid line.\r\n *\r\n * @see {@link IGridEvents} for a list of available events\r\n * @see {@link IGridAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the grid, also with 3d charts we might need some additional elements\r\n * @important\r\n */\r\nvar Grid = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Grid, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Grid() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Grid\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.location = 0.5;\r\n        _this.isMeasured = false;\r\n        _this.above = false;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.stroke = interfaceColors.getFor(\"grid\");\r\n        _this.pixelPerfect = true;\r\n        _this.strokeOpacity = 0.15;\r\n        _this.fill = color(); // \"none\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Grid.prototype, \"location\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"location\");\r\n        },\r\n        /**\r\n         * Location within axis cell to place grid line on.\r\n         *\r\n         * * 0 - start\r\n         * * 0.5 - middle\r\n         * * 1 - end\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"location\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Grid.prototype, \"above\", {\r\n        /**\r\n         * @return Draw above series?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"above\");\r\n        },\r\n        /**\r\n         * Normally fill goes below series. Set this to `true` to go above.\r\n         *\r\n         * @default false\r\n         * @since 4.5.9\r\n         * @param  value  Draw above series?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"above\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Grid.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.axis) {\r\n            this.axis.invalidateDataItems();\r\n        }\r\n        return changed;\r\n    };\r\n    return Grid;\r\n}(Sprite));\r\nexport { Grid };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grid\"] = Grid;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Disable grid on smaller charts\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Grid) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Grid.js.map","/**\r\n * Axis Label module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar AxisLabel = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisLabel, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisLabel() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisLabel\";\r\n        _this.isMeasured = false;\r\n        _this.padding(10, 10, 10, 10);\r\n        _this.location = 0.5;\r\n        //this.nonScaling = true; // not good for perf\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisLabel.prototype, \"location\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"location\");\r\n        },\r\n        /**\r\n         * Relative location of the label. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"location\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisLabel.prototype, \"inside\", {\r\n        /**\r\n         * Returns if label is set to be drawn inside axis.\r\n         *\r\n         * @return Inside?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inside\");\r\n        },\r\n        /**\r\n         * Sets if label should be drawn inside axis.\r\n         *\r\n         * @param value  Inside?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"inside\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisLabel.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.axis) {\r\n            this.axis.invalidateDataItems();\r\n        }\r\n        return changed;\r\n    };\r\n    return AxisLabel;\r\n}(Label));\r\nexport { AxisLabel };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n//# sourceMappingURL=AxisLabel.js.map","/**\r\n * Tick module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar Tick = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Tick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Tick() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Tick\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.fillOpacity = 0;\r\n        _this.length = 6;\r\n        _this.strokeOpacity = 0.2;\r\n        _this.stroke = interfaceColors.getFor(\"grid\");\r\n        _this.isMeasured = false;\r\n        _this.nonScalingStroke = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Tick.prototype, \"length\", {\r\n        /**\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            if (this.disabled) {\r\n                return 0;\r\n            }\r\n            return this.getPropertyValue(\"length\");\r\n        },\r\n        /**\r\n         * Length of the tick in pixels.\r\n         *\r\n         * @param value  Length (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"length\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Tick;\r\n}(Sprite));\r\nexport { Tick };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tick\"] = Tick;\r\n//# sourceMappingURL=Tick.js.map","/**\r\n * Axis Tick module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\r\nvar AxisTick = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisTick, _super);\r\n    function AxisTick() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisTick\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.location = 0.5;\r\n        _this.above = false;\r\n        _this.isMeasured = false;\r\n        _this.pixelPerfect = true;\r\n        _this.strokeOpacity = 0;\r\n        _this.length = 5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisTick.prototype, \"location\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"location\");\r\n        },\r\n        /**\r\n         * Relative location of the tick. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"location\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisTick.prototype, \"inside\", {\r\n        /**\r\n         * Returns if label is set to be drawn inside axis.\r\n         *\r\n         * @return Inside?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inside\");\r\n        },\r\n        /**\r\n         * Sets if tick should be drawn inside axis.\r\n         *\r\n         * @param value  Inside?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"inside\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisTick.prototype, \"above\", {\r\n        /**\r\n         * @return Draw above series?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"above\");\r\n        },\r\n        /**\r\n         * Normally tick goes below series. Set this to `true` to go above.\r\n         *\r\n         * @default false\r\n         * @since 4.5.9\r\n         * @param  value  Draw above series?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"above\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisTick.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.axis) {\r\n            this.axis.invalidateDataItems();\r\n        }\r\n        return changed;\r\n    };\r\n    return AxisTick;\r\n}(Tick));\r\nexport { AxisTick };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;\r\n//# sourceMappingURL=AxisTick.js.map","/**\r\n * Module, defining base Axis Renderer.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { AxisDataItem } from \"./Axis\";\r\nimport { AxisLine } from \"./AxisLine\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nvar AxisRenderer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisRenderer, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRenderer() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"AxisRenderer\";\r\n        // Set defaults\r\n        _this.minGridDistance = 50;\r\n        _this.inside = false;\r\n        _this.inversed = false;\r\n        _this.tooltipLocation = 0.5;\r\n        _this.fullWidthTooltip = false;\r\n        _this.cellStartLocation = 0;\r\n        _this.cellEndLocation = 1;\r\n        _this.minLabelPosition = 0;\r\n        _this.maxLabelPosition = 1;\r\n        _this.shouldClone = false;\r\n        var gridContainer = _this.createChild(Container);\r\n        gridContainer.shouldClone = false;\r\n        gridContainer.layout = \"none\";\r\n        //\tgridContainer.isMeasured = false;\r\n        gridContainer.virtualParent = _this;\r\n        gridContainer.width = percent(100);\r\n        gridContainer.height = percent(100);\r\n        _this.gridContainer = gridContainer;\r\n        // not good without this\r\n        gridContainer.events.on(\"maxsizechanged\", function () {\r\n            if (_this.inited) {\r\n                _this.invalidateAxisItems();\r\n            }\r\n        }, _this, false);\r\n        var breakContainer = _this.createChild(Container);\r\n        breakContainer.shouldClone = false;\r\n        breakContainer.isMeasured = false;\r\n        breakContainer.layout = \"none\";\r\n        breakContainer.width = percent(100);\r\n        breakContainer.height = percent(100);\r\n        _this.breakContainer = breakContainer;\r\n        var bulletsContainer = _this.createChild(Container);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.isMeasured = false;\r\n        bulletsContainer.layout = \"none\";\r\n        bulletsContainer.width = percent(100);\r\n        bulletsContainer.height = percent(100);\r\n        _this.bulletsContainer = bulletsContainer;\r\n        _this.line = _this.createChild(AxisLine);\r\n        _this.line.shouldClone = false;\r\n        _this.line.strokeOpacity = 0;\r\n        var baseGrid = _this.createChild(Grid);\r\n        baseGrid.shouldClone = false;\r\n        _this.baseGrid = baseGrid;\r\n        // Make elements disposable\r\n        var disposers = _this._disposers;\r\n        disposers.push(baseGrid);\r\n        disposers.push(_this.line);\r\n        disposers.push(gridContainer);\r\n        disposers.push(breakContainer);\r\n        disposers.push(bulletsContainer);\r\n        disposers.push(_this._chart);\r\n        _this.ticks.template.disabled = true;\r\n        _this.axisFills.template.disabled = true;\r\n        _this.axisFills.template.interactionsEnabled = false;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisRenderer.prototype, \"axis\", {\r\n        get: function () {\r\n            return this._axis;\r\n        },\r\n        set: function (axis) {\r\n            this.setAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * @ignore\r\n    */\r\n    AxisRenderer.prototype.setAxis = function (axis) {\r\n        this._axis = axis;\r\n        this.baseGrid.parent = axis;\r\n        this.line.parent = axis;\r\n        this.gridContainer.bind(\"opacity\", axis);\r\n    };\r\n    /**\r\n     * Called when rendered is attached to an Axis, as well as a property of\r\n     * Axis that might affect the appearance is updated.\r\n     *\r\n     * E.g. `axis.opposite`, `axis.inside`, etc.\r\n     *\r\n     * This method is called **before** draw, so that any related setting\r\n     * changed in this method can be changed.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.processRenderer = function () {\r\n        this.events.on(\"sizechanged\", this.updateTooltip, this, false);\r\n        this.events.on(\"positionchanged\", this.updateTooltip, this, false);\r\n        this.labels.template.inside = this.inside;\r\n        this.ticks.template.inside = this.inside;\r\n    };\r\n    /**\r\n     * Updates Axis' tooltip.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateTooltip = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            // This is a placeholder method for extending classes to override.\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Re-positions an element to new coordinates.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item   A target element\r\n     * @param point  New coordinates\r\n     */\r\n    AxisRenderer.prototype.positionItem = function (item, point) {\r\n        if (item) {\r\n            item.moveTo(point);\r\n        }\r\n    };\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Point\r\n     */\r\n    AxisRenderer.prototype.positionToPoint = function (position, position2) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return { x: 0, y: 0 };\r\n    };\r\n    /**\r\n     * Converts relative position on axis to angle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review / units)\r\n     * @param position  Position (0-1)\r\n     * @return Angle\r\n     */\r\n    AxisRenderer.prototype.positionToAngle = function (position) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return 0;\r\n    };\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    AxisRenderer.prototype.positionToCoordinate = function (position) {\r\n        var coordinate;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        if (axis.renderer.inversed) {\r\n            coordinate = (axis.end - position) * axisFullLength;\r\n        }\r\n        else {\r\n            coordinate = (position - axis.start) * axisFullLength;\r\n        }\r\n        return coordinate;\r\n    };\r\n    AxisRenderer.prototype.updateGridContainer = function () {\r\n    };\r\n    AxisRenderer.prototype.getHeight = function () {\r\n        var gridContainer = this.gridContainer;\r\n        if (gridContainer.parent) {\r\n            return gridContainer.parent.pixelHeight;\r\n        }\r\n        return this.gridContainer.pixelHeight || 0;\r\n    };\r\n    AxisRenderer.prototype.getWidth = function () {\r\n        var gridContainer = this.gridContainer;\r\n        if (gridContainer.parent) {\r\n            return gridContainer.parent.pixelWidth;\r\n        }\r\n        return this.gridContainer.pixelWidth || 0;\r\n    };\r\n    /**\r\n     * Converts a coordinate in pixels to a relative position. (0-1)\r\n     *\r\n     * @param coordinate  Coordinate (px)\r\n     * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRenderer.prototype.coordinateToPosition = function (coordinate, coordinate2) {\r\n        var position;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        if (axis.renderer.inversed) {\r\n            position = axis.end - coordinate / axisFullLength;\r\n        }\r\n        else {\r\n            position = coordinate / axisFullLength + axis.start;\r\n        }\r\n        return $math.round(position, 5);\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRenderer.prototype.pointToPosition = function (point) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return 0;\r\n    };\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRenderer.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Invalidates all axis data items, effectively causing them re-evaluated.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    AxisRenderer.prototype.invalidateAxisItems = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            axis.invalidateDataItems();\r\n        }\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick         Tick element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions axis bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRenderer.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions the axis fill element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fill         Fill element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRenderer.prototype.updateFillElement = function (fill, position, endPosition) {\r\n        fill.startPosition = position;\r\n        fill.endPosition = endPosition;\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateAxisLine = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateBaseGridElement = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions an axis break element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Break element\r\n     */\r\n    AxisRenderer.prototype.updateBreakElement = function (axisBreak) {\r\n        this.positionItem(axisBreak.startLine, axisBreak.startPoint);\r\n        this.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\r\n        this.positionItem(axisBreak.endLine, axisBreak.endPoint);\r\n        this.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"minGridDistance\", {\r\n        /**\r\n         * @return Min distance (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minGridDistance\");\r\n        },\r\n        /**\r\n         * Minimum distance in pixels between grid elements.\r\n         *\r\n         * @param value  Min distance (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"minGridDistance\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateLayout();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart.set(value, null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Toggles visibility of an element, based on its current position and\r\n     * min/max position settings.\r\n     *\r\n     * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param sprite       An element to toggle\r\n     * @param position     Elements current position\r\n     * @param minPosition  Min position setting\r\n     * @param maxPosition  Max position setting\r\n     */\r\n    AxisRenderer.prototype.toggleVisibility = function (sprite, position, minPosition, maxPosition) {\r\n        var axis = this.axis;\r\n        var dataItem = sprite.dataItem;\r\n        if (dataItem && dataItem instanceof AxisDataItem) {\r\n            if ($type.isNumber(dataItem.minPosition)) {\r\n                minPosition = dataItem.minPosition;\r\n            }\r\n            if ($type.isNumber(dataItem.maxPosition)) {\r\n                maxPosition = dataItem.maxPosition;\r\n            }\r\n        }\r\n        var updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\r\n        var updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\r\n        if (!sprite.disabled) {\r\n            if (position < updatedStart || position > updatedEnd) {\r\n                sprite.__disabled = true;\r\n            }\r\n            else {\r\n                sprite.__disabled = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Creates visual elements for and axis break.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Axis break\r\n     */\r\n    AxisRenderer.prototype.createBreakSprites = function (axisBreak) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"axisFills\", {\r\n        /**\r\n         * A list of Axis' Fill elements.\r\n         *\r\n         * Those are fill elements that cover the space between every second set\r\n         * of grid lines, and can be configured to create striped charts.\r\n         *\r\n         * Please note that these are disabled by default. To enable them, set\r\n         * template to true.\r\n         *\r\n         * ```TypeScript\r\n         * categoryAxis.renderer.axisFills.template.disabled = false;\r\n         * ```\r\n         * ```JavaScript\r\n         * categoryAxis.renderer.axisFills.template.disabled = false;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     // ...\r\n         *     \"renderer\": {\r\n         *       \"axisFills\": {\r\n         *         \"disabled\": false\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n         * @return Fill elements\r\n         */\r\n        get: function () {\r\n            if (!this._axisFills) {\r\n                var fill = this.createFill(this.axis);\r\n                this._axisFills = new ListTemplate(fill);\r\n                fill.applyOnClones = true;\r\n                fill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisFills));\r\n                this._disposers.push(this._axisFills.template);\r\n            }\r\n            return this._axisFills;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new fill element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Fill element\r\n     */\r\n    AxisRenderer.prototype.createFill = function (axis) {\r\n        return new AxisFill(axis);\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"grid\", {\r\n        /**\r\n         * A list of Axis' Grid elements.\r\n         *\r\n         * @return Grid elements\r\n         */\r\n        get: function () {\r\n            if (!this._grid) {\r\n                var grid = this.createGrid();\r\n                this._grid = new ListTemplate(grid);\r\n                grid.applyOnClones = true;\r\n                grid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._grid));\r\n                this._disposers.push(this._grid.template);\r\n            }\r\n            return this._grid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new grid element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Grid element\r\n     */\r\n    AxisRenderer.prototype.createGrid = function () {\r\n        return new Grid();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"ticks\", {\r\n        /**\r\n         * A list of Axis' Tick elements.\r\n         *\r\n         * Please note that these are disabled by default. To enable them, set\r\n         * template to true.\r\n         *\r\n         * ```TypeScript\r\n         * categoryAxis.renderer.ticks.template.disabled = false;\r\n         * ```\r\n         * ```JavaScript\r\n         * categoryAxis.renderer.ticks.template.disabled = false;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     // ...\r\n         *     \"renderer\": {\r\n         *       \"ticks\": {\r\n         *         \"disabled\": false\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Tick elements\r\n         */\r\n        get: function () {\r\n            if (!this._ticks) {\r\n                var tick = this.createTick();\r\n                tick.applyOnClones = true;\r\n                tick.isMeasured = false;\r\n                tick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._ticks = new ListTemplate(tick);\r\n                this._disposers.push(new ListDisposer(this._ticks));\r\n                this._disposers.push(this._ticks.template);\r\n            }\r\n            return this._ticks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new tick element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Tick element\r\n     */\r\n    AxisRenderer.prototype.createTick = function () {\r\n        return new AxisTick();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"labels\", {\r\n        /**\r\n         * A list of Axis' Label elements.\r\n         *\r\n         * @return Label elements\r\n         */\r\n        get: function () {\r\n            if (!this._labels) {\r\n                var label = this.createLabel();\r\n                this._labels = new ListTemplate(label);\r\n                label.applyOnClones = true;\r\n                label.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._labels));\r\n                this._disposers.push(this._labels.template);\r\n            }\r\n            return this._labels;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new label element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Label element\r\n     */\r\n    AxisRenderer.prototype.createLabel = function () {\r\n        return new AxisLabel();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"inside\", {\r\n        /**\r\n         * @return Labels inside?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inside\");\r\n        },\r\n        /**\r\n         * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n         *\r\n         * Does not work with all renderers, like AxisRendererRadial.\r\n         *\r\n         * @param value  Labels inside?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"inside\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                }\r\n            }\r\n            if (value) {\r\n                this.width = 0;\r\n                this.height = 0;\r\n            }\r\n            else {\r\n                this.width = undefined;\r\n                this.height = undefined;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"opposite\", {\r\n        /**\r\n         * @return Draw axis on opposite side?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"opposite\");\r\n        },\r\n        /**\r\n         * Indicates whether Axis should be drawn on the opposite side of the plot\r\n         * area than it would normally be drawn based on chart's settings.\r\n         *\r\n         * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n         * [[AxisRenderer Circular].\r\n         *\r\n         * @param value  Draw axis on opposite side?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"opposite\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"fullWidthTooltip\", {\r\n        /**\r\n         * @return Full width tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthTooltip\");\r\n        },\r\n        /**\r\n         * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n         * (between two grid lines)\r\n         *\r\n         * NOTE: this setting is ignored on circular axis types.\r\n         *\r\n         * @param value Full width tooltip?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation\", {\r\n        /**\r\n         * @return Tooltip location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipLocation\");\r\n        },\r\n        /**\r\n         * Location within axis cell to show tooltip on. (0-1)\r\n         *\r\n         * 0 - show at the start\r\n         * 0.5 - show right in the middle\r\n         * 1 - show at the end\r\n         *\r\n         * @param value Tooltip location\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipLocation\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation2\", {\r\n        /**\r\n         * @return Tooltip location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipLocation2\");\r\n        },\r\n        /**\r\n         * Location within secondary axis cell to show tooltip on. (0-1)\r\n         *\r\n         * 0 - show at the start\r\n         * 0.5 - show right in the middle\r\n         * 1 - show at the end\r\n         *\r\n         * @param value Tooltip location\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipLocation2\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"cellStartLocation\", {\r\n        /**\r\n         * @return Cell start (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cellStartLocation\");\r\n        },\r\n        /**\r\n         * Location for the cell start.\r\n         *\r\n         * Normally a \"cell\" is the whole available width in a category.\r\n         *\r\n         * If there are several clustered column-like series available, the whole\r\n         * space is divided between each clustered column, or column stacks.\r\n         *\r\n         * `cellStartLocation` identifies where, within available space, the actual\r\n         * cell starts.\r\n         *\r\n         * This, together with column series' `width` will affect actual width of\r\n         * columns, and thus gaps between them.\r\n         *\r\n         * This will affect category-like axes only, like [[DateAxis]], or\r\n         * [[CategoryAxis]].\r\n         *\r\n         * This is used to limit a space occupied by series like column.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value Cell start (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cellStartLocation\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"cellEndLocation\", {\r\n        /**\r\n         * @return Cell end (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cellEndLocation\");\r\n        },\r\n        /**\r\n         * Location for the cell end.\r\n         *\r\n         * Normally a \"cell\" is the whole available width in a category.\r\n         *\r\n         * If there are several clustered column-like series available, the whole\r\n         * space is divided between each clustered column, or column stacks.\r\n         *\r\n         * `cellEndLocation` identifies where, within available space, the actual\r\n         * cell ends.\r\n         *\r\n         * This, together with column series' `width` will affect actual width of\r\n         * columns, and thus gaps between them.\r\n         *\r\n         * This will affect category-like axes only, like [[DateAxis]], or\r\n         * [[CategoryAxis]].\r\n         *\r\n         * This is used to limit a space occupied by series like column.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value Cell end (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cellEndLocation\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"inversed\", {\r\n        /**\r\n         * @return Flip axis?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inversed\");\r\n        },\r\n        /**\r\n         * Indicates if the scale of the axis should be flipped.\r\n         *\r\n         * @param value Flip axis?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"inversed\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"minLabelPosition\", {\r\n        /**\r\n         * @return Min label position (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minLabelPosition\");\r\n        },\r\n        /**\r\n         * Minimum position along the Axis, for labels.\r\n         *\r\n         * Labels, which have their position closer to the start of the Axis, will be\r\n         * automatically hidden.\r\n         *\r\n         * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n         * that would otherwise be drawn very near start of the Axis.\r\n         *\r\n         * This is especially usefull with `inside = true`, or if the chart hasn't\r\n         * got any extra margins.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value  Min label position (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minLabelPosition\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"maxLabelPosition\", {\r\n        /**\r\n         * @return Max label position (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxLabelPosition\");\r\n        },\r\n        /**\r\n         * Maximum position along the Axis, for labels.\r\n         *\r\n         * Labels, which have their position closer to the and of the Axis, will be\r\n         * automatically hidden.\r\n         *\r\n         * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n         * that would otherwise be drawn very near end of the Axis.\r\n         *\r\n         * This is especially usefull with `inside = true`, or if the chart hasn't\r\n         * got any extra margins.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value  Max label position (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxLabelPosition\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all settings and related items from another object of the same\r\n     * type.\r\n     *\r\n     * @param source  Source object\r\n     */\r\n    AxisRenderer.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.grid.template.copyFrom(source.grid.template);\r\n        this.ticks.template.copyFrom(source.ticks.template);\r\n        this.labels.template.copyFrom(source.labels.template);\r\n        this.axisFills.template.copyFrom(source.axisFills.template);\r\n        this.line.copyFrom(source.line);\r\n        this.baseGrid.copyFrom(source.baseGrid);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisRenderer.prototype.toAxisPosition = function (value) {\r\n        return value;\r\n    };\r\n    /**\r\n     * Sets `visibility` property:\r\n     *\r\n     * * `true` - visible\r\n     * * `false` - hidden\r\n     *\r\n     * @param value  true - visible, false - hidden\r\n     * @return Current visibility\r\n     */\r\n    AxisRenderer.prototype.setVisibility = function (value) {\r\n        _super.prototype.setVisibility.call(this, value);\r\n        this.bulletsContainer.visible = value;\r\n    };\r\n    return AxisRenderer;\r\n}(Container));\r\nexport { AxisRenderer };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;\r\n//# sourceMappingURL=AxisRenderer.js.map","/**\r\n * Axis Bullet module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to draw a positioned bullet (element) on an Axis.\r\n *\r\n * ```TypeScript\r\n * let range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n *\r\n * let flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JavaScript\r\n * var range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n *\r\n * var flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"xAxes\": [{\r\n *     \"type\": \"DateAxis\",\r\n *     // ...\r\n *     \"axisRanges\": [{\r\n *       \"date\": new Date(2018, 0, 5),\r\n *       \"bullet: {\r\n *         \"type\": \"FlagBullet\",\r\n *         \"label\": {\r\n *           \"text\": \"Hello\"\r\n *         }\r\n *       }\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.9\r\n * @see {@link IAxisBulletEvents} for a list of available events\r\n * @see {@link IAxisBulletAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar AxisBullet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisBullet, _super);\r\n    function AxisBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisBullet\";\r\n        _this.location = 0.5;\r\n        _this.isMeasured = false;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisBullet.prototype, \"location\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"location\");\r\n        },\r\n        /**\r\n         * Relative position within cell/range.\r\n         *\r\n         * Value range is from from `0` (beginning) to `1` (end).\r\n         *\r\n         * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n         * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n         * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n         *\r\n         * ```TypeScript\r\n         * let range = dateAxis.axisRanges.create();\r\n         * range.date = new Date(2018, 0, 5);\r\n         * range.endDate = new Date(2018, 0, 6);\r\n         *\r\n         * let bullet = new am4charts.AxisBullet();\r\n         * bullet.location = 1;\r\n         *\r\n         * let flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n         * flag.label.text = \"Hello\";\r\n         * ```\r\n         * ```JavaScript\r\n         * var range = dateAxis.axisRanges.create();\r\n         * range.date = new Date(2018, 0, 5);\r\n         * range.endDate = new Date(2018, 0, 6);\r\n         *\r\n         * var bullet = new am4charts.AxisBullet();\r\n         * bullet.location = 1;\r\n         *\r\n         * var flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n         * flag.label.text = \"Hello\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     // ...\r\n         *     \"axisRanges\": [{\r\n         *       \"date\": new Date(2018, 0, 5),\r\n         *       \"endDate\": new Date(2018, 0, 6),\r\n         *       \"bullet: {\r\n         *         \"type\": \"AxisBullet\",\r\n         *         \"location\": 1,\r\n         *         \"children\": [{\r\n         *           \"type\": \"FlagBullet\",\r\n         *           \"label\": {\r\n         *             \"text\": \"Hello\"\r\n         *           }\r\n         *         }]\r\n         *       }\r\n         *     }]\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 0.5\r\n         * @param  value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"location\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisBullet.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.axis) {\r\n            this.axis.invalidateDataItems();\r\n        }\r\n        return changed;\r\n    };\r\n    return AxisBullet;\r\n}(Container));\r\nexport { AxisBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBullet\"] = AxisBullet;\r\n//# sourceMappingURL=AxisBullet.js.map","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A renderer for vertical axis.\r\n *\r\n * @see {@link IAxisRendererYEvents} for a list of available events\r\n * @see {@link IAxisRendererYAdapters} for a list of available Adapters\r\n */\r\nvar AxisRendererY = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisRendererY, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererY() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisRendererY\";\r\n        _this.minGridDistance = 40;\r\n        _this.opposite = false;\r\n        _this.height = percent(100);\r\n        _this.labels.template.verticalCenter = \"middle\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n    * @ignore\r\n    */\r\n    AxisRendererY.prototype.setAxis = function (axis) {\r\n        _super.prototype.setAxis.call(this, axis);\r\n        axis.layout = \"horizontal\";\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisRendererY.prototype.updateGridContainer = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var gridContainer = this.gridContainer;\r\n            gridContainer.y = axis.pixelY;\r\n            gridContainer.height = axis.axisLength;\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisRendererY.prototype.toAxisPosition = function (value) {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var inversedPosition = 1 - value;\r\n            var relativePositionSprite = axis.relativePositionSprite;\r\n            var y = axis.pixelY;\r\n            if (relativePositionSprite) {\r\n                y = $utils.spritePointToSprite({ x: 0, y: this.pixelY }, this.parent, relativePositionSprite).y;\r\n            }\r\n            else {\r\n                relativePositionSprite = axis.parent;\r\n            }\r\n            if (relativePositionSprite) {\r\n                var relativeY = y / relativePositionSprite.innerHeight;\r\n                var relativeHeight = axis.axisLength / relativePositionSprite.innerHeight;\r\n                return 1 - (inversedPosition - relativeY) / relativeHeight;\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Called when rendered is attached to an Axis, as well as a property of\r\n     * Axis that might affect the appearance is updated.\r\n     *\r\n     * E.g. `axis.opposite`, `axis.inside`, etc.\r\n     *\r\n     * This method is called **before** draw, so that any related setting\r\n     * changed in this method can be changed.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererY.prototype.processRenderer = function () {\r\n        _super.prototype.processRenderer.call(this);\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var title = axis.title;\r\n            title.valign = \"middle\";\r\n            if (!(axis.height instanceof Percent)) {\r\n                axis.height = percent(100);\r\n            }\r\n            if (this.opposite) {\r\n                title.rotation = 90;\r\n                this.line.toBack();\r\n                title.toFront();\r\n            }\r\n            else {\r\n                title.rotation = -90;\r\n                title.toBack();\r\n                this.line.toFront();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates some of the Axis tooltip's visual properties, related to\r\n     * rendering of the Axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererY.prototype.updateTooltip = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var bigNum = 2000;\r\n            var bbx = 0;\r\n            var bby = 0;\r\n            var bbw = bigNum;\r\n            var bbh = this.axisLength;\r\n            // right\r\n            if (this.opposite) {\r\n                if (this.inside) {\r\n                    bbx = -bigNum;\r\n                    bbw = bigNum;\r\n                }\r\n            }\r\n            // left\r\n            else {\r\n                if (!this.inside) {\r\n                    bbx = -bigNum;\r\n                    bbw = bigNum;\r\n                }\r\n            }\r\n            this.axis.updateTooltip(\"horizontal\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n        }\r\n    };\r\n    Object.defineProperty(AxisRendererY.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            var axis = this.axis;\r\n            return (axis.measuredHeight - axis.pixelPaddingTop - axis.pixelPaddingBottom) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @param position2  Position (0-1) Position on the second axis\r\n     * @return Point\r\n     */\r\n    AxisRendererY.prototype.positionToPoint = function (position, position2) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRendererY.prototype.pointToPosition = function (point) {\r\n        return this.coordinateToPosition(point.y, point.x);\r\n    };\r\n    /**\r\n     * Converts a coordinate in pixels to a relative position. (0-1)\r\n     *\r\n     * @param coordinate  Coordinate (px)\r\n     * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRendererY.prototype.coordinateToPosition = function (coordinate, coordinate2) {\r\n        var position;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        if (axis.renderer.inversed) {\r\n            position = (1 - axis.start) - coordinate / axisFullLength;\r\n        }\r\n        else {\r\n            position = coordinate / axisFullLength + (1 - axis.end);\r\n        }\r\n        return $math.round(position, 5);\r\n    };\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRendererY.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        var y1 = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n        var y2 = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n        var h = Math.abs(y2 - y1);\r\n        var w = this.getWidth();\r\n        var y = Math.min(y1, y2);\r\n        var x = 0;\r\n        return $path.rectToPath({\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        }, true);\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererY.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        //\tpoint.y = $utils.spritePointToSprite({ x: 0, y: point.y }, this, this.gridContainer).y;\r\n        grid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.getWidth(), y: 0 });\r\n        this.positionItem(grid, point);\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick         Tick element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererY.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        position = position + (endPosition - position) * tick.location;\r\n        var point = this.positionToPoint(position);\r\n        var tickLength = tick.length;\r\n        try {\r\n            $utils.used(this.axis.title.measuredWidth);\r\n        }\r\n        catch (_a) {\r\n            // void\r\n        }\r\n        point.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n        if (!this.opposite) {\r\n            tickLength *= (tick.inside ? 1 : -1);\r\n        }\r\n        else {\r\n            tickLength *= (tick.inside ? -1 : 1);\r\n        }\r\n        tick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength, y: 0 });\r\n        this.positionItem(tick, point);\r\n        this.toggleVisibility(tick, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererY.prototype.updateAxisLine = function () {\r\n        this.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.axisLength });\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererY.prototype.updateBaseGridElement = function () {\r\n        _super.prototype.updateBaseGridElement.call(this);\r\n        var axis = this.axis;\r\n        var w = this.getWidth();\r\n        var h = this.axisLength;\r\n        var y = axis.basePoint.y;\r\n        var baseGrid = this.baseGrid;\r\n        if (y < -0.2 || y > h + 0.2) {\r\n            baseGrid.hide(0);\r\n        }\r\n        else {\r\n            var x = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).x;\r\n            baseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n            baseGrid.moveTo({ x: x, y: y });\r\n            baseGrid.show(0);\r\n        }\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRendererY.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        if (!$type.hasValue(location)) {\r\n            location = label.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        label.isMeasured = !label.inside;\r\n        var point = this.positionToPoint(position);\r\n        var horizontalCenter;\r\n        var deltaX = 0;\r\n        var maxWidth = this.gridContainer.maxWidth;\r\n        if (this.opposite) {\r\n            if (label.inside) {\r\n                horizontalCenter = \"right\";\r\n                if (label.align == \"left\") {\r\n                    deltaX = -maxWidth;\r\n                    horizontalCenter = \"left\";\r\n                }\r\n                if (label.align == \"center\") {\r\n                    deltaX = -maxWidth / 2;\r\n                    horizontalCenter = \"middle\";\r\n                }\r\n            }\r\n            else {\r\n                horizontalCenter = \"left\";\r\n            }\r\n            point.x = 0 + deltaX;\r\n        }\r\n        else {\r\n            if (label.inside) {\r\n                horizontalCenter = \"left\";\r\n                if (label.align == \"right\") {\r\n                    deltaX = maxWidth;\r\n                    horizontalCenter = \"right\";\r\n                }\r\n                if (label.align == \"center\") {\r\n                    deltaX = maxWidth / 2;\r\n                    horizontalCenter = \"middle\";\r\n                }\r\n            }\r\n            else {\r\n                horizontalCenter = \"right\";\r\n            }\r\n            point.x = this.measuredWidth + deltaX;\r\n        }\r\n        if (label.rotation == 0) {\r\n            // Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n            label.horizontalCenter = horizontalCenter;\r\n        }\r\n        this.positionItem(label, point);\r\n        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n    };\r\n    /**\r\n     * Updates and positions an axis break element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Break element\r\n     */\r\n    AxisRendererY.prototype.updateBreakElement = function (axisBreak) {\r\n        _super.prototype.updateBreakElement.call(this, axisBreak);\r\n        var startLine = axisBreak.startLine;\r\n        var endLine = axisBreak.endLine;\r\n        var fillShape = axisBreak.fillShape;\r\n        var startPoint = axisBreak.startPoint;\r\n        var endPoint = axisBreak.endPoint;\r\n        var x1 = axisBreak.pixelMarginLeft;\r\n        var x2 = this.getWidth() - axisBreak.pixelMarginLeft - axisBreak.pixelMarginRight;\r\n        startPoint.y = $math.fitToRange(startPoint.y, -1, this.axisLength + 1);\r\n        endPoint.y = $math.fitToRange(endPoint.y, -1, this.axisLength + 1);\r\n        if (startPoint.y == endPoint.y && (startPoint.y < 0 || startPoint.y > this.axisLength)) {\r\n            axisBreak.fillShape.__disabled = true;\r\n        }\r\n        else {\r\n            axisBreak.fillShape.__disabled = false;\r\n        }\r\n        var w = Math.abs(x2 - x1);\r\n        startLine.x = x1;\r\n        startLine.height = 0;\r\n        startLine.width = w;\r\n        endLine.x = x1;\r\n        endLine.height = 0;\r\n        endLine.width = w;\r\n        fillShape.width = w;\r\n        fillShape.height = Math.abs(endPoint.y - startPoint.y);\r\n        fillShape.x = x1;\r\n        fillShape.y = endPoint.y;\r\n    };\r\n    /**\r\n     * Creates visual elements for and axis break.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Axis break\r\n     */\r\n    AxisRendererY.prototype.createBreakSprites = function (axisBreak) {\r\n        axisBreak.startLine = new WavedLine();\r\n        axisBreak.endLine = new WavedLine();\r\n        var wavedRectangle = new WavedRectangle();\r\n        wavedRectangle.setWavedSides(true, false, true, false);\r\n        axisBreak.fillShape = wavedRectangle;\r\n    };\r\n    /**\r\n     * Converts a position on the axis to a coordinate in pixels.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    AxisRendererY.prototype.positionToCoordinate = function (position) {\r\n        var coordinate;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        if (!axis.renderer.inversed) {\r\n            coordinate = (axis.end - position) * axisFullLength;\r\n        }\r\n        else {\r\n            coordinate = (position - axis.start) * axisFullLength;\r\n        }\r\n        return $math.round(coordinate, 1);\r\n    };\r\n    /**\r\n     * Updates and positions axis bullets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererY.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        var location = 0.5;\r\n        if (bullet instanceof AxisBullet) {\r\n            location = bullet.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        point.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n        this.positionItem(bullet, point);\r\n        this.toggleVisibility(bullet, position, 0, 1);\r\n    };\r\n    return AxisRendererY;\r\n}(AxisRenderer));\r\nexport { AxisRendererY };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererY\"] = AxisRendererY;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof AxisRendererY) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.inside = true;\r\n            state.properties.maxLabelPosition = 0.9;\r\n            state.properties.minLabelPosition = 0.1;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof AxisRendererY) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","/**\r\n * A module which defines functionality related to Value Axis Break.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base class to define \"breaks\" on value axis.\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * when comparing columns with relatively similar values, it would make sense\r\n * to cut out their mid section, so that their tip differences are more\r\n * prominent.\r\n *\r\n * @see {@link IValueAxisBreakEvents} for a list of available events\r\n * @see {@link IValueAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ValueAxisBreak = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueAxisBreak, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ValueAxisBreak() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ValueAxisBreak\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ValueAxisBreak.prototype, \"startPosition\", {\r\n        /**\r\n         * Pixel position of the break's start.\r\n         *\r\n         * @return Position (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            if (this.axis) {\r\n                return this.axis.valueToPosition(this.adjustedStartValue);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxisBreak.prototype, \"endPosition\", {\r\n        /**\r\n         * Pixel position of the break's end.\r\n         *\r\n         * @return Position (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            if (this.axis) {\r\n                return this.axis.valueToPosition(this.adjustedEndValue);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ValueAxisBreak;\r\n}(AxisBreak));\r\nexport { ValueAxisBreak };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxisBreak\"] = ValueAxisBreak;\r\n//# sourceMappingURL=ValueAxisBreak.js.map","/**\r\n * Value Axis module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ValueAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ValueAxisDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueAxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ValueAxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ValueAxisDataItem\";\r\n        _this.values.value = {};\r\n        _this.values.endValue = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ValueAxisDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values[\"value\"].value;\r\n        },\r\n        /**\r\n         * A data point's numeric value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxisDataItem.prototype, \"endValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values[\"endValue\"].value;\r\n        },\r\n        /**\r\n         * Data point's numeric end value.\r\n         *\r\n         * @param value  End value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"endValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ValueAxisDataItem;\r\n}(AxisDataItem));\r\nexport { ValueAxisDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to create a value axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JSON\r\n * \"yAxes\": [{\r\n *   \"type\": \"ValueAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Monthly Sales\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IValueAxisEvents} for a list of available Events\r\n * @see {@link IValueAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ValueAxis = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueAxis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ValueAxis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * [_stepDecimalPlaces description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._stepDecimalPlaces = 0;\r\n        /**\r\n         * Base value for the axis.\r\n         */\r\n        _this._baseValue = 0;\r\n        /**\r\n         * Adjusted start in case we have breaks.\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._adjustedStart = 0;\r\n        /**\r\n         * Adjusted end in case we have breaks.\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._adjustedEnd = 1;\r\n        _this._extremesChanged = false;\r\n        _this._deltaMinMax = 1;\r\n        /**\r\n         * As calculating totals is expensive operation and not often needed, we\r\n         * don't do it by default.\r\n         *\r\n         * In case you use `totalPercent` or `total` in your charts, this must be set\r\n         * to `true`.\r\n         *\r\n         * @default false\r\n         * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#100_stacks} For using `calculateTotals` for 100% stacked series.\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/#Placeholders_for_numeric_values} For using `calculateTotals` in labels.\r\n         */\r\n        _this.calculateTotals = false;\r\n        _this.className = \"ValueAxis\";\r\n        // Set field name\r\n        _this.axisFieldName = \"value\";\r\n        // Set defaults\r\n        _this.setPropertyValue(\"maxZoomFactor\", 1000);\r\n        _this.setPropertyValue(\"extraMin\", 0);\r\n        _this.setPropertyValue(\"extraMax\", 0);\r\n        _this.setPropertyValue(\"strictMinMax\", false);\r\n        _this.setPropertyValue(\"maxPrecision\", Number.MAX_VALUE);\r\n        _this.keepSelection = false;\r\n        _this.includeRangesInMinMax = false;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Holds reference to a function that accepts a DataItem as parameter.\r\n     *\r\n     * It can either return a fill opacity for a fill, or manipulate data item\r\n     * directly, to create various highlighting scenarios.\r\n     */\r\n    ValueAxis.prototype.fillRule = function (dataItem) {\r\n        var value = dataItem.value;\r\n        var axis = dataItem.component;\r\n        if (!dataItem.axisFill.disabled) {\r\n            // rounding in left to solve floating point number\r\n            if ($math.round(value / axis.step / 2, 5) == Math.round(value / axis.step / 2)) {\r\n                dataItem.axisFill.__disabled = true;\r\n            }\r\n            else {\r\n                dataItem.axisFill.__disabled = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ValueAxis.prototype.createDataItem = function () {\r\n        return new ValueAxisDataItem();\r\n    };\r\n    /**\r\n     * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n     *\r\n     * @return Axis break\r\n     */\r\n    ValueAxis.prototype.createAxisBreak = function () {\r\n        return new ValueAxisBreak();\r\n    };\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    ValueAxis.prototype.dataChangeUpdate = function () {\r\n        if (!this.keepSelection) {\r\n            if (this._start != 0 || this._end != 1) {\r\n                this._start = 0;\r\n                this._end = 1;\r\n                this.dispatchImmediately(\"startendchanged\");\r\n            }\r\n        }\r\n        else {\r\n            if (this._start != 0) {\r\n                this.dispatchImmediately(\"startchanged\");\r\n            }\r\n            if (this._end != 1) {\r\n                this.dispatchImmediately(\"endchanged\");\r\n            }\r\n            if (this._start != 0 || this._end != 1) {\r\n                this.dispatchImmediately(\"startendchanged\");\r\n            }\r\n        }\r\n        this._maxZoomed = this._maxDefined;\r\n        this._minZoomed = this._minDefined;\r\n        this._maxAdjusted = this._maxDefined;\r\n        this._minAdjusted = this._minDefined;\r\n    };\r\n    /**\r\n     * Processes data items of the related Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ValueAxis.prototype.processSeriesDataItems = function () {\r\n        // @todo: add some boolean (maybe autodedect) if we need these calculations or not. this place uses a lot of cpu\r\n        if (this.calculateTotals) {\r\n            var series = this.series.getIndex(0);\r\n            var startIndex = series.startIndex;\r\n            if (series.dataItems.length > 0) {\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                var endIndex = series.endIndex;\r\n                if (endIndex < series.dataItems.length) {\r\n                    endIndex++;\r\n                }\r\n                var _loop_1 = function (i) {\r\n                    // This has to be `var` in order to avoid garbage collection\r\n                    var total = {};\r\n                    this_1.series.each(function (series) {\r\n                        if (!series.excludeFromTotal) {\r\n                            var dataItem_1 = series.dataItems.getIndex(i);\r\n                            if (dataItem_1) {\r\n                                $object.each(dataItem_1.values, function (key) {\r\n                                    var value = dataItem_1.values[key].workingValue; // can not use getWorkingValue here!\r\n                                    if ($type.isNumber(value)) {\r\n                                        if (!$type.isNumber(total[key])) {\r\n                                            total[key] = Math.abs(value);\r\n                                        }\r\n                                        else {\r\n                                            total[key] += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                    this_1.series.each(function (series) {\r\n                        if (!series.excludeFromTotal) {\r\n                            var dataItem_2 = series.dataItems.getIndex(i);\r\n                            if (dataItem_2) {\r\n                                $object.each(dataItem_2.values, function (key) {\r\n                                    var value = dataItem_2.values[key].workingValue; // can not use getWorkingValue here!\r\n                                    if ($type.isNumber(value)) {\r\n                                        dataItem_2.setCalculatedValue(key, total[key], \"total\");\r\n                                        dataItem_2.setCalculatedValue(key, 100 * value / total[key], \"totalPercent\");\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n                var this_1 = this;\r\n                // This has to be `var` in order to avoid garbage collection\r\n                for (var i = startIndex; i < endIndex; ++i) {\r\n                    _loop_1(i);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates the whole axis. Causes it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    ValueAxis.prototype.validate = function () {\r\n        if (this.axisLength <= 0) {\r\n            return;\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        this.getMinMax();\r\n        this.fixAxisBreaks();\r\n        this.calculateZoom();\r\n        this.validateAxisElements();\r\n        this.validateAxisRanges();\r\n        this.validateBreaks();\r\n        this.hideUnusedDataItems();\r\n        this.renderer.invalidateLayout();\r\n        // hide too close\r\n        //this.hideTooCloseDataItems();\r\n    };\r\n    /**\r\n     * Calculates all positions, related to axis as per current zoom.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ValueAxis.prototype.calculateZoom = function () {\r\n        if ($type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n            var min = this.positionToValue(this.start);\r\n            var max = this.positionToValue(this.end);\r\n            var differece = this.adjustDifference(min, max);\r\n            var minMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n            this._adjustedStart = $math.round((min - this.min) / (this.max - this.min), 5);\r\n            this._adjustedEnd = $math.round((max - this.min) / (this.max - this.min), 5);\r\n            this._step = minMaxStep.step;\r\n            this._stepDecimalPlaces = $utils.decimalPlaces(this._step);\r\n            if (this._minZoomed != min || this._maxZoomed != max) {\r\n                this._minZoomed = min;\r\n                this._maxZoomed = max;\r\n                this.dispatchImmediately(\"selectionextremeschanged\");\r\n            }\r\n        }\r\n        else {\r\n            this._adjustedStart = this.start;\r\n            this._adjustedEnd = this.end;\r\n        }\r\n    };\r\n    /**\r\n     * Validates Axis elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    ValueAxis.prototype.validateAxisElements = function () {\r\n        var _this = this;\r\n        if ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n            // first regular items\r\n            var value_1 = this.minZoomed - this._step * 2;\r\n            if (!this.logarithmic) {\r\n                value_1 = Math.floor(value_1 / this._step) * this._step;\r\n            }\r\n            else {\r\n                var differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n                if (differencePower > 1) {\r\n                    value_1 = Math.pow(10, Math.log(this.min) * Math.LOG10E);\r\n                }\r\n                else {\r\n                    value_1 = Math.floor(this.minZoomed / this._step) * this._step;\r\n                    if (value_1 == 0) {\r\n                        value_1 = this.minZoomed;\r\n                    }\r\n                }\r\n            }\r\n            var maxZoomed = this._maxZoomed + this._step;\r\n            this.resetIterators();\r\n            var dataItemsIterator_1 = this._dataItemsIterator;\r\n            var i = 0;\r\n            while (value_1 <= maxZoomed) {\r\n                var axisBreak = this.isInBreak(value_1);\r\n                if (!axisBreak) {\r\n                    var dataItem = dataItemsIterator_1.find(function (x) { return x.value === value_1; });\r\n                    if (dataItem.__disabled) {\r\n                        dataItem.__disabled = false;\r\n                    }\r\n                    //this.processDataItem(dataItem);\r\n                    this.appendDataItem(dataItem);\r\n                    dataItem.axisBreak = undefined;\r\n                    if (dataItem.value != value_1) {\r\n                        dataItem.value = value_1;\r\n                        dataItem.text = this.formatLabel(value_1);\r\n                        if (dataItem.label && dataItem.label.invalid) {\r\n                            dataItem.label.validate();\r\n                        }\r\n                        if (dataItem.value >= this.min && dataItem.value <= this.max) {\r\n                            if (dataItem.label) {\r\n                                if ((this.axisLetter == \"Y\" && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (this.axisLetter == \"X\" && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n                                    this.ghostLabel.text = dataItem.label.currentText;\r\n                                    this.ghostLabel.validate();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.validateDataElement(dataItem);\r\n                }\r\n                i++;\r\n                if (!this.logarithmic) {\r\n                    value_1 += this._step;\r\n                }\r\n                else {\r\n                    var differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n                    if (differencePower > 1) {\r\n                        value_1 = Math.pow(10, Math.log(this.min) * Math.LOG10E + i);\r\n                    }\r\n                    else {\r\n                        value_1 += this._step;\r\n                    }\r\n                }\r\n                var stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(this._step)) * Math.LOG10E));\r\n                if (stepPower < 1) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    var decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value_1 = $math.round(value_1, decCount);\r\n                }\r\n            }\r\n            var axisBreaks = this._axisBreaks;\r\n            if (axisBreaks) {\r\n                // breaks later\r\n                var renderer_1 = this.renderer;\r\n                $iter.each(axisBreaks.iterator(), function (axisBreak) {\r\n                    if (axisBreak.breakSize > 0) {\r\n                        // only add grid if gap is bigger then minGridDistance\r\n                        if ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer_1.minGridDistance) {\r\n                            var breakValue_1 = axisBreak.adjustedMin;\r\n                            while (breakValue_1 <= axisBreak.adjustedMax) {\r\n                                if (breakValue_1 >= axisBreak.adjustedStartValue && breakValue_1 <= axisBreak.adjustedEndValue) {\r\n                                    var dataItem = dataItemsIterator_1.find(function (x) { return x.value === breakValue_1; });\r\n                                    if (dataItem.__disabled) {\r\n                                        dataItem.__disabled = false;\r\n                                    }\r\n                                    //this.processDataItem(dataItem);\r\n                                    _this.appendDataItem(dataItem);\r\n                                    dataItem.axisBreak = axisBreak;\r\n                                    if (dataItem.value != breakValue_1) {\r\n                                        dataItem.value = breakValue_1;\r\n                                        dataItem.text = _this.formatLabel(breakValue_1);\r\n                                        if (dataItem.label && dataItem.label.invalid) {\r\n                                            dataItem.label.validate();\r\n                                        }\r\n                                    }\r\n                                    _this.validateDataElement(dataItem);\r\n                                }\r\n                                breakValue_1 += axisBreak.adjustedStep;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates axis data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    ValueAxis.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        //dataItem.__disabled = false;\r\n        dataItem.itemIndex = this._axisItemCount;\r\n        this._axisItemCount++;\r\n        var renderer = this.renderer;\r\n        var value = dataItem.value;\r\n        var endValue = dataItem.endValue;\r\n        var position = this.valueToPosition(value);\r\n        dataItem.position = position;\r\n        var endPosition = position;\r\n        var fillEndPosition = this.valueToPosition(value + this._step);\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        // this point is needed to calculate distance to satisfy minGridDistance\r\n        dataItem.point = renderer.positionToPoint(position);\r\n        var tick = dataItem.tick;\r\n        if (tick && !tick.disabled) {\r\n            renderer.updateTickElement(tick, position, endPosition);\r\n        }\r\n        var grid = dataItem.grid;\r\n        if (grid && !grid.disabled) {\r\n            renderer.updateGridElement(grid, position, endPosition);\r\n        }\r\n        var label = dataItem.label;\r\n        if (label && !label.disabled) {\r\n            renderer.updateLabelElement(label, position, endPosition);\r\n        }\r\n        var fill = dataItem.axisFill;\r\n        if (fill && !fill.disabled) {\r\n            renderer.updateFillElement(fill, position, fillEndPosition);\r\n            if (!dataItem.isRange) {\r\n                this.fillRule(dataItem);\r\n            }\r\n        }\r\n        if (dataItem.bullet) {\r\n            renderer.updateBullet(dataItem.bullet, position, endPosition);\r\n        }\r\n        var mask = dataItem.mask;\r\n        if (mask) {\r\n            renderer.updateFillElement(mask, position, fillEndPosition);\r\n        }\r\n    };\r\n    /**\r\n     * Formats the value according to axis' own [[NumberFormatter]].\r\n     *\r\n     * @param value  Source value\r\n     * @return Formatted value\r\n     */\r\n    ValueAxis.prototype.formatLabel = function (value) {\r\n        return this.numberFormatter.format(value);\r\n    };\r\n    Object.defineProperty(ValueAxis.prototype, \"basePoint\", {\r\n        /**\r\n         * Coordinates of the actual axis start.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Base point\r\n         */\r\n        get: function () {\r\n            var baseValue = this.baseValue;\r\n            var position = this.valueToPosition(baseValue);\r\n            var basePoint = this.renderer.positionToPoint(position);\r\n            return basePoint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"baseValue\", {\r\n        /**\r\n         * @return base value\r\n         */\r\n        get: function () {\r\n            var baseValue = this._baseValue;\r\n            if (this.logarithmic) {\r\n                baseValue = this.min;\r\n            }\r\n            if (!this._adapterO) {\r\n                return baseValue;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"baseValue\", baseValue);\r\n            }\r\n        },\r\n        /**\r\n         * A base value.\r\n         *\r\n         * This is a threshold value that will divide \"positive\" and \"negative\"\r\n         * value ranges.\r\n         *\r\n         * Other scale-related functionality also depend on base value. E.g. stacks,\r\n         * value-dependent coloring, etc.\r\n         *\r\n         * @param value Base value\r\n         */\r\n        set: function (value) {\r\n            this._baseValue = value;\r\n            this.invalidateLayout();\r\n            this.invalidateSeries();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts a numeric value to relative position on axis\r\n     *\r\n     * An alias to `valueToPosition()`.\r\n     *\r\n     * @param value  Value\r\n     * @return Position\r\n     */\r\n    ValueAxis.prototype.anyToPosition = function (value) {\r\n        return this.valueToPosition(value);\r\n    };\r\n    /**\r\n     * Converts a numeric value to orientation point (x, y, angle) on axis\r\n     *\r\n     * @param value  Value\r\n     * @return Orientation point\r\n     */\r\n    ValueAxis.prototype.valueToPoint = function (value) {\r\n        var position = this.valueToPosition(value);\r\n        var point = this.renderer.positionToPoint(position);\r\n        var angle = this.renderer.positionToAngle(position);\r\n        return { x: point.x, y: point.y, angle: angle };\r\n    };\r\n    /**\r\n     * Converts a numeric value to orientation (x, y, angle) point on axis\r\n     *\r\n     * @param value  Value\r\n     * @return Orientation point\r\n     */\r\n    ValueAxis.prototype.anyToPoint = function (value) {\r\n        return this.valueToPoint(value);\r\n    };\r\n    /**\r\n     * Converts a numeric value to relative position on axis.\r\n     *\r\n     * @param value  Value\r\n     * @return relative position\r\n     */\r\n    ValueAxis.prototype.valueToPosition = function (value) {\r\n        if ($type.isNumber(value)) {\r\n            // todo: think if possible to take previous value and do not go through all previous breaks\r\n            var min_1 = this.min;\r\n            var max_1 = this.max;\r\n            if ($type.isNumber(min_1) && $type.isNumber(max_1)) {\r\n                var difference = this._difference;\r\n                var axisBreaks = this._axisBreaks;\r\n                if (axisBreaks && axisBreaks.length > 0) {\r\n                    $iter.eachContinue(axisBreaks.iterator(), function (axisBreak) {\r\n                        var startValue = axisBreak.adjustedStartValue;\r\n                        var endValue = axisBreak.adjustedEndValue;\r\n                        if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n                            if (value < startValue) {\r\n                                return false;\r\n                            }\r\n                            if ($math.intersect({ start: startValue, end: endValue }, { start: min_1, end: max_1 })) { // todo: check this once and set some flag in axisBreak\r\n                                startValue = Math.max(startValue, min_1);\r\n                                endValue = Math.min(endValue, max_1);\r\n                                var breakSize = axisBreak.breakSize;\r\n                                // value to the right of break end\r\n                                if (value > endValue) {\r\n                                    min_1 += (endValue - startValue) * (1 - breakSize); // todo: maybe this can be done differently?\r\n                                }\r\n                                // value to the left of break start\r\n                                else if (value < startValue) {\r\n                                }\r\n                                // value within break\r\n                                else {\r\n                                    value = startValue + (value - startValue) * breakSize;\r\n                                }\r\n                            }\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                var position = void 0;\r\n                if (!this.logarithmic) {\r\n                    position = (value - min_1) / difference;\r\n                }\r\n                else {\r\n                    position = (Math.log(value) * Math.LOG10E - Math.log(this.min) * Math.LOG10E) / ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E));\r\n                }\r\n                //position = $math.round(position, 10);\r\n                return position;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Converts an relative position to a corresponding value within\r\n     * axis' scale.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Value\r\n     */\r\n    ValueAxis.prototype.positionToValue = function (position) {\r\n        position = $math.round(position, 10);\r\n        var min = this.min;\r\n        var max = this.max;\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            var difference_1 = max - min; //no need to adjust!\r\n            var value_2 = null;\r\n            var axisBreaks = this._axisBreaks;\r\n            if (axisBreaks) {\r\n                // in case we have some axis breaks\r\n                if (axisBreaks.length > 0) {\r\n                    $iter.eachContinue(axisBreaks.iterator(), function (axisBreak) {\r\n                        var breakStartPosition = axisBreak.startPosition;\r\n                        var breakEndPosition = axisBreak.endPosition;\r\n                        var breakStartValue = axisBreak.adjustedStartValue;\r\n                        var breakEndValue = axisBreak.adjustedEndValue;\r\n                        if ($type.isNumber(breakStartValue) && $type.isNumber(breakEndValue)) {\r\n                            if (breakStartValue > max) {\r\n                                return false;\r\n                            }\r\n                            if ($math.intersect({ start: breakStartValue, end: breakEndValue }, { start: min, end: max })) {\r\n                                breakStartValue = $math.max(breakStartValue, min);\r\n                                breakEndValue = $math.min(breakEndValue, max);\r\n                                var breakSize = axisBreak.breakSize;\r\n                                difference_1 -= (breakEndValue - breakStartValue) * (1 - breakSize);\r\n                                // position to the right of break end\r\n                                if (position > breakEndPosition) {\r\n                                    min += (breakEndValue - breakStartValue) * (1 - breakSize);\r\n                                }\r\n                                // position to the left of break start\r\n                                else if (position < breakStartPosition) {\r\n                                }\r\n                                // value within break\r\n                                else {\r\n                                    var breakPosition = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n                                    value_2 = breakStartValue + breakPosition * (breakEndValue - breakStartValue);\r\n                                    return false;\r\n                                }\r\n                            }\r\n                            return true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (!$type.isNumber(value_2)) {\r\n                if (this.logarithmic) {\r\n                    value_2 = Math.pow(Math.E, (position * ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E)) + Math.log(this.min) * Math.LOG10E) / Math.LOG10E);\r\n                }\r\n                else {\r\n                    value_2 = position * difference_1 + min;\r\n                }\r\n            }\r\n            return value_2;\r\n        }\r\n        //}\r\n    };\r\n    /**\r\n     * Converts an X coordinate to a relative value in axis' scale.\r\n     *\r\n     * @param x  X (px)\r\n     * @return Value\r\n     */\r\n    ValueAxis.prototype.xToValue = function (x) {\r\n        return this.positionToValue(this.pointToPosition({ x: x, y: 0 }));\r\n    };\r\n    /**\r\n     * Converts an Y coordinate to a relative value in axis' scale.\r\n     *\r\n     * @param y  Y (px)\r\n     * @return Value\r\n     */\r\n    ValueAxis.prototype.yToValue = function (y) {\r\n        return this.positionToValue(this.pointToPosition({ x: 0, y: y }));\r\n    };\r\n    /**\r\n     * Converts pixel coordinates to a relative position. (0-1)\r\n     *\r\n     * @param point  Coorinates (px)\r\n     * @return Position (0-1)\r\n     */\r\n    ValueAxis.prototype.pointToPosition = function (point) {\r\n        if (this.renderer instanceof AxisRendererY) {\r\n            return 1 - this.renderer.pointToPosition(point);\r\n        }\r\n        else {\r\n            return this.renderer.pointToPosition(point);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ValueAxis.prototype.animateMinMax = function (min, max) {\r\n        return this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n    };\r\n    /**\r\n     * Calculates smallest and biggest value for the axis scale.\r\n     * @ignore\r\n     * @todo Description (review)\r\n     */\r\n    ValueAxis.prototype.getMinMax = function () {\r\n        var _this = this;\r\n        this.updateGridCount();\r\n        var min = Number.POSITIVE_INFINITY;\r\n        var max = Number.NEGATIVE_INFINITY;\r\n        // only if min and max are not set from outside, we go through min and max influencers\r\n        if (!$type.isNumber(this._minDefined) || !$type.isNumber(this._maxDefined)) {\r\n            this.series.each(function (series) {\r\n                if (!series.ignoreMinMax) {\r\n                    // check min\r\n                    var seriesMin = series.min(_this);\r\n                    if ($type.isNumber(seriesMin) && (seriesMin < min)) {\r\n                        min = seriesMin;\r\n                    }\r\n                    // check max\r\n                    var seriesMax = series.max(_this);\r\n                    if ($type.isNumber(seriesMax) && (seriesMax > max)) {\r\n                        max = seriesMax;\r\n                    }\r\n                }\r\n            });\r\n            if (this.includeRangesInMinMax) {\r\n                this.axisRanges.each(function (range) {\r\n                    if (!range.ignoreMinMax) {\r\n                        var minValue = $math.min(range.value, range.endValue);\r\n                        var maxValue = $math.max(range.value, range.endValue);\r\n                        if (minValue < min || !$type.isNumber(min)) {\r\n                            min = minValue;\r\n                        }\r\n                        if (maxValue > max || !$type.isNumber(max)) {\r\n                            max = maxValue;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (this.logarithmic) {\r\n            if (min <= 0) {\r\n                throw Error(\"Logarithmic value axis can not have vales <= 0.\");\r\n            }\r\n        }\r\n        if (min == 0 && max == 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        // if defined from outside\r\n        if ($type.isNumber(this._minDefined)) {\r\n            min = this._minDefined;\r\n        }\r\n        if ($type.isNumber(this._maxDefined)) {\r\n            max = this._maxDefined;\r\n        }\r\n        if (this._adapterO) {\r\n            min = this._adapterO.apply(\"min\", min);\r\n        }\r\n        if (this._adapterO) {\r\n            max = this._adapterO.apply(\"max\", max);\r\n        }\r\n        if (!$type.isNumber(min) || !$type.isNumber(max)) {\r\n            return;\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        if (min == Number.POSITIVE_INFINITY) {\r\n            min = undefined;\r\n        }\r\n        if (max == Number.NEGATIVE_INFINITY) {\r\n            max = undefined;\r\n        }\r\n        var dif = this.adjustDifference(min, max); // previously it was max-min, but not worked well\r\n        min = this.fixMin(min);\r\n        max = this.fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min != 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                // the number by which we need to raise 10 to get difference\r\n                var exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n                // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n                var power = Math.pow(10, Math.floor(exponent));\r\n                // reduce this number by 10 times\r\n                power = power / 10;\r\n                this._deltaMinMax = power;\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        min -= (max - min) * this.extraMin;\r\n        max += (max - min) * this.extraMax;\r\n        var strict = this.strictMinMax;\r\n        if ($type.isNumber(this._maxDefined)) {\r\n            strict = true;\r\n        }\r\n        var minMaxStep = this.adjustMinMax(min, max, dif, this._gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        dif = max - min; //new\r\n        // do it for the second time (importat!)\r\n        minMaxStep = this.adjustMinMax(min, max, max - min, this._gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (this.strictMinMax) {\r\n            if ($type.isNumber(this._minDefined)) {\r\n                min = this._minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(this._maxDefined)) {\r\n                max = this._maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            min -= (max - min) * this.extraMin;\r\n            max += (max - min) * this.extraMax;\r\n        }\r\n        if (this._adapterO) {\r\n            min = this._adapterO.apply(\"min\", min);\r\n        }\r\n        if (this._adapterO) {\r\n            max = this._adapterO.apply(\"max\", max);\r\n        }\r\n        // checking isNumber is good when all series are hidden\r\n        if ((this._minAdjusted != min || this._maxAdjusted != max) && $type.isNumber(min) && $type.isNumber(max)) {\r\n            var animation = this._minMaxAnimation;\r\n            if (this._extremesChanged && $type.isNumber(this._minAdjusted) && $type.isNumber(this._maxAdjusted) && this.inited) {\r\n                if ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n                    return;\r\n                }\r\n                else {\r\n                    this._finalMin = min;\r\n                    this._finalMax = max;\r\n                    animation = this.animateMinMax(min, max);\r\n                    if (animation && !animation.isFinished()) {\r\n                        animation.events.on(\"animationprogress\", this.validateDataItems, this);\r\n                        animation.events.on(\"animationended\", function () {\r\n                            //this.validateDataItems();\r\n                            _this.series.each(function (series) {\r\n                                series.validate();\r\n                            });\r\n                            _this.validateDataItems();\r\n                            _this.handleSelectionExtremesChange();\r\n                        });\r\n                        this._minMaxAnimation = animation;\r\n                    }\r\n                    else {\r\n                        this.series.each(function (series) {\r\n                            series.validate();\r\n                        });\r\n                    }\r\n                    this.validateDataItems();\r\n                    this.dispatchImmediately(\"extremeschanged\");\r\n                    this.handleSelectionExtremesChange();\r\n                }\r\n            }\r\n            else {\r\n                if ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n                    return;\r\n                }\r\n                else {\r\n                    this._minAdjusted = min;\r\n                    this._maxAdjusted = max;\r\n                    this._finalMin = min;\r\n                    this._finalMax = max;\r\n                    this.invalidateDataItems();\r\n                    this.dispatchImmediately(\"extremeschanged\");\r\n                }\r\n            }\r\n        }\r\n        this._extremesChanged = false;\r\n        this._difference = this.adjustDifference(min, max);\r\n    };\r\n    /**\r\n     * Adjusts the minimum value.\r\n     *\r\n     * This is a placeholder method for extending classes to override.\r\n     *\r\n     * For numeric values this does nothing, however for more complex types, like\r\n     * dates, it may be necessary to adjust.\r\n     *\r\n     * @param value  Value\r\n     * @return Adjusted value\r\n     */\r\n    ValueAxis.prototype.fixMin = function (value) {\r\n        return value;\r\n    };\r\n    /**\r\n     * Adjusts the maximum value.\r\n     *\r\n     * This is a placeholder method for extending classes to override.\r\n     *\r\n     * For numeric values this does nothing, however for more complex types, like\r\n     * dates, it may be necessary to adjust.\r\n     *\r\n     * @param value  Value\r\n     * @return Adjusted value\r\n     */\r\n    ValueAxis.prototype.fixMax = function (value) {\r\n        return value;\r\n    };\r\n    /**\r\n     * Adjusts actual min and max scale values so that the axis starts and ends\r\n     * at \"nice\" values, unless `strictMinMax` is set.\r\n     *\r\n     * The `difference` can be something else than `max - min`, because of the\r\n     * axis breaks.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param min        [description]\r\n     * @param max        [description]\r\n     * @param difference [description]\r\n     * @param gridCount  [description]\r\n     * @param strictMode [description]\r\n     * @return [description]\r\n     */\r\n    ValueAxis.prototype.adjustMinMax = function (min, max, difference, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        var initialMin = min;\r\n        var initialMax = max;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        var exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        var power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        var extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        if (!this.logarithmic) {\r\n            // round down min\r\n            if (strictMode) {\r\n                min = Math.floor(min / power) * power;\r\n                // round up max\r\n                max = Math.ceil(max / power) * power;\r\n            }\r\n            else {\r\n                min = Math.ceil(min / power) * power - extra;\r\n                // round up max\r\n                max = Math.floor(max / power) * power + extra;\r\n            }\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        else {\r\n            if (min <= 0) {\r\n                //throw Error(\"Logarithmic value axis can not have vales <= 0.\");\r\n                min = this.baseValue;\r\n            }\r\n            // @todo: think of a better way or to restrict zooming when no series are selected\r\n            if (min == Infinity) {\r\n                min = 1;\r\n            }\r\n            if (max == -Infinity) {\r\n                max = 10;\r\n            }\r\n            min = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\r\n            max = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\r\n        }\r\n        // repeat diff, exponent and power again with rounded values\r\n        //difference = this.adjustDifference(min, max);\r\n        /*\r\n\r\n                if(min > initialMin){\r\n                    min = initialMin;\r\n                }\r\n\r\n                if(max < initialMax){\r\n                    max = initialMax;\r\n                }\r\n        */\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 10;\r\n        // approximate difference between two grid lines\r\n        var step = Math.ceil((difference / gridCount) / power) * power;\r\n        var stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // TODO: in v3 I had fixStepE here, ommiting it for a while, need to think about other solution\r\n        // the step should divide by  2, 5, and 10.\r\n        var stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        if (this.maxPrecision < Number.MAX_VALUE && step != $math.ceil(step, this.maxPrecision)) {\r\n            step = $math.ceil(step, this.maxPrecision);\r\n        }\r\n        var decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        if (!this.logarithmic) {\r\n            // final min and max\r\n            var minCount = Math.floor(min / step);\r\n            min = $math.round(step * minCount, decCount);\r\n            var maxCount = void 0;\r\n            if (!strictMode) {\r\n                maxCount = Math.ceil(max / step);\r\n            }\r\n            else {\r\n                maxCount = Math.floor(max / step);\r\n            }\r\n            if (maxCount == minCount) {\r\n                maxCount++;\r\n            }\r\n            max = $math.round(step * maxCount, decCount);\r\n            if (max < initialMax) {\r\n                max = max + step;\r\n            }\r\n            if (min > initialMin) {\r\n                min = min - step;\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    };\r\n    Object.defineProperty(ValueAxis.prototype, \"min\", {\r\n        /**\r\n         * @return Min value\r\n         */\r\n        get: function () {\r\n            var min = this._minAdjusted;\r\n            if (!$type.isNumber(min)) {\r\n                min = this._minDefined;\r\n            }\r\n            return min;\r\n        },\r\n        /**\r\n         * A minimum value for the axis scale.\r\n         *\r\n         * This value might be auto-adjusted by the Axis in order to accomodate the\r\n         * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n         *\r\n         * The above might be overridden by `strictMinMax` which will force exact\r\n         * user-defined min and max values to be used for scale.\r\n         *\r\n         * @param value  Min value\r\n         */\r\n        set: function (value) {\r\n            if (this._minDefined != value) {\r\n                this._minDefined = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"minDefined\", {\r\n        /**\r\n         * Min value as defined by user's code, not auto-calculated.\r\n         *\r\n         * @readonly\r\n         * @return Min value\r\n         */\r\n        get: function () {\r\n            return this._minDefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"maxDefined\", {\r\n        /**\r\n         * Max value as defined by user's code, not auto-calculated.\r\n         *\r\n         * @readonly\r\n         * @return Man value\r\n         */\r\n        get: function () {\r\n            return this._maxDefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"extraMin\", {\r\n        /**\r\n         * @return {number}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"extraMin\");\r\n        },\r\n        /**\r\n         * Allows relatively adjusting minimum value of the axis' scale.\r\n         *\r\n         * The value is relative to the actual range of values currently displayed\r\n         * on the axis.\r\n         *\r\n         * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n         * from 100 to 200, we will now have axis displaying from 50 to 200 because\r\n         * we asked to expand minimum value by 50% (0.5).\r\n         *\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"extraMin\", value)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"extraMax\", {\r\n        /**\r\n         * @return Min multiplier\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"extraMax\");\r\n        },\r\n        /**\r\n         * Allows relatively adjusting maximum value of the axis' scale.\r\n         *\r\n         * The value is relative to the actual range of values currently displayed\r\n         * on the axis.\r\n         *\r\n         * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n         * from 100 to 200, we will now have axis displaying from 100 to 250 because\r\n         * we asked to expand maximum value by 50% (0.5).\r\n         *\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"extraMax\", value)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"step\", {\r\n        /**\r\n         * Current calculated delta in values between two adjacent grid lines (step).\r\n         *\r\n         * This is a read-only value and cannot be used to set actual step.\r\n         *\r\n         * @readonly\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} For more information about modifying density of labels\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._step;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"max\", {\r\n        /**\r\n         * @return Max value\r\n         */\r\n        get: function () {\r\n            var max = this._maxAdjusted;\r\n            if (!$type.isNumber(max)) {\r\n                max = this._maxDefined;\r\n            }\r\n            return max;\r\n        },\r\n        /**\r\n         * A maximum value for the axis scale.\r\n         *\r\n         * This value might be auto-adjusted by the Axis in order to accomodate the\r\n         * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n         *\r\n         * The above might be overridden by `strictMinMax` which will force exact\r\n         * user-defined min and max values to be used for scale.\r\n         *\r\n         * @param value  Max value\r\n         */\r\n        set: function (value) {\r\n            if (this._maxDefined != value) {\r\n                this._maxDefined = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Used for the Series to register itself as the user of this Axis.\r\n     *\r\n     * This will also decorate both the Series and Axis with event handlers, used\r\n     * to redraw on Axis position/zoom change.\r\n     *\r\n     * A disposer for those events is returned, so that they can be disposed\r\n     * together with Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param series  Series\r\n     * @return Disposer for events\r\n     */\r\n    ValueAxis.prototype.registerSeries = function (series) {\r\n        return new MultiDisposer([\r\n            _super.prototype.registerSeries.call(this, series),\r\n            series.events.on(\"extremeschanged\", this.handleExtremesChange, this, false),\r\n            series.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false),\r\n            this.events.on(\"extremeschanged\", series.invalidate, series, false)\r\n        ]);\r\n    };\r\n    /**\r\n     * Perform tasks after Axis zoom.\r\n     */\r\n    ValueAxis.prototype.handleSelectionExtremesChange = function () {\r\n        var _this = this;\r\n        var selectionMin;\r\n        var selectionMax;\r\n        var allHidden = true;\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (!series.ignoreMinMax && !series.isHidden) {\r\n                if (series.visible && !series.isHiding) {\r\n                    allHidden = false;\r\n                }\r\n                var seriesSelectionMin = series.selectionMin(_this);\r\n                var seriesSelectionMax = series.selectionMax(_this);\r\n                if ($type.isNumber(seriesSelectionMin)) {\r\n                    if (!$type.isNumber(selectionMin) || (seriesSelectionMin < selectionMin)) {\r\n                        selectionMin = seriesSelectionMin;\r\n                    }\r\n                }\r\n                // check max\r\n                if ($type.isNumber(seriesSelectionMax)) {\r\n                    if (!$type.isNumber(selectionMax) || (seriesSelectionMax > selectionMax)) {\r\n                        selectionMax = seriesSelectionMax;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (this.includeRangesInMinMax) {\r\n            this.axisRanges.each(function (range) {\r\n                if (!range.ignoreMinMax) {\r\n                    var minValue = $math.min(range.value, range.endValue);\r\n                    var maxValue = $math.max(range.value, range.endValue);\r\n                    if (minValue < selectionMax) {\r\n                        selectionMax = minValue;\r\n                    }\r\n                    if (maxValue > selectionMax) {\r\n                        selectionMax = maxValue;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        // this is not good, as if date axis is initially zoomed, selection of y axis is reset to 0, 1 at the end of this method\r\n        //$iter.each(this.series.iterator(), (series) => {\r\n        //\tif (!series.appeared) {\r\n        //\t\tallHidden = true;\r\n        //\t}\r\n        //})\r\n        if ($type.isNumber(this._minDefined)) {\r\n            if (this.strictMinMax) {\r\n                selectionMin = this._minDefined;\r\n            }\r\n            else {\r\n                selectionMin = this.min;\r\n            }\r\n        }\r\n        else if (this.strictMinMax) {\r\n            selectionMin = this._minReal;\r\n        }\r\n        if ($type.isNumber(this._maxDefined)) {\r\n            if (this.strictMinMax) {\r\n                selectionMax = this._maxDefined;\r\n            }\r\n            else {\r\n                selectionMax = this.max;\r\n            }\r\n        }\r\n        else if (this.strictMinMax) {\r\n            selectionMax = this._maxReal;\r\n        }\r\n        if (selectionMin == selectionMax) {\r\n            selectionMin -= this._deltaMinMax;\r\n            selectionMax += this._deltaMinMax;\r\n            var minMaxStep2 = this.adjustMinMax(selectionMin, selectionMax, 0, this._gridCount, this.strictMinMax);\r\n            selectionMin = minMaxStep2.min;\r\n            selectionMax = minMaxStep2.max;\r\n        }\r\n        var dif = this.adjustDifference(selectionMin, selectionMax);\r\n        var minMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount);\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        selectionMin -= (selectionMax - selectionMin) * this.extraMin;\r\n        selectionMax += (selectionMax - selectionMin) * this.extraMax;\r\n        selectionMin = $math.fitToRange(selectionMin, this.min, this.max);\r\n        selectionMax = $math.fitToRange(selectionMax, this.min, this.max);\r\n        // do it for the second time !important\r\n        dif = this.adjustDifference(selectionMin, selectionMax);\r\n        minMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount, true);\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.strictMinMax) {\r\n            selectionMin = $math.max(selectionMin, this._minDefined);\r\n            selectionMax = $math.min(selectionMax, this._maxDefined);\r\n        }\r\n        this._minZoomed = selectionMin;\r\n        this._maxZoomed = selectionMax;\r\n        this._step = minMaxStep.step;\r\n        var start = this.valueToPosition(selectionMin);\r\n        var end = this.valueToPosition(selectionMax);\r\n        // in case all series are hidden or hiding, full zoomout\r\n        if (allHidden) {\r\n            start = 0;\r\n            end = 1;\r\n        }\r\n        if (!this.keepSelection) {\r\n            this.zoom({ start: start, end: end }, false, false, 0);\r\n        }\r\n    };\r\n    Object.defineProperty(ValueAxis.prototype, \"strictMinMax\", {\r\n        /**\r\n         * @return Use exact values?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"strictMinMax\");\r\n        },\r\n        /**\r\n         * Indicates whether to blindly use exact `min` and `max` values set by user\r\n         * when generating Axis scale.\r\n         *\r\n         * If not set, the Axis might slightly adjust those values to accomodate a\r\n         * better looking grid.\r\n         *\r\n         * NOTE: if `min` and `max` are not set, setting `strictMinMax` to `true`\r\n         * will result in fixing the scale of the axis to actual lowest and highest\r\n         * values in the series within currently selected scope.\r\n         *\r\n         * @default false\r\n         * @param value Use exact values?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"strictMinMax\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"logarithmic\", {\r\n        /**\r\n         * @return Logarithmic scale?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"logarithmic\");\r\n        },\r\n        /**\r\n         * Indicates if this axis should use a logarithmic scale.\r\n         *\r\n         * Please note that logarithmic axis can **only** accommodate values bigger\r\n         * than zero.\r\n         *\r\n         * Having zero or negative values will result in error and failure of the\r\n         * whole chart.\r\n         *\r\n         * @param value Logarithmic scale?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"logarithmic\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"keepSelection\", {\r\n        /**\r\n         * @return Preseve zoom after data update?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"keepSelection\");\r\n        },\r\n        /**\r\n         * Indicates if a current selection (zoom) should be kept across data updates.\r\n         *\r\n         * If your axis is zoomed while chart's data is updated, the axis will try\r\n         * to retain the same start and end values.\r\n         *\r\n         * You can also use this to initially pre-zoom axis:\r\n         *\r\n         * ```TypeScript\r\n         * axis.keepSelection = true;\r\n         * axis.start = 0.5;\r\n         * axis.end = 0.7;\r\n         * ```\r\n         * ```JavaScript\r\n         * axis.keepSelection = true;\r\n         * axis.start = 0.5;\r\n         * axis.end = 0.7;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   \"xAxes\": [{\r\n         *     // ...\r\n         *     \"keepSelection\": true,\r\n         *     \"start\": 0.5,\r\n         *     \"end\": 0.7\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * The above will start the chart zoomed from the middle of the actual scope\r\n         * to 70%.\r\n         *\r\n         * @since 4.1.1\r\n         * @default flase\r\n         * @param  value  Preseve zoom after data update?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"keepSelection\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"includeRangesInMinMax\", {\r\n        /**\r\n         * @return Include ranges?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"includeRangesInMinMax\");\r\n        },\r\n        /**\r\n         * If set to `true`, values of axis ranges will be included when calculating\r\n         * range of values / scale of the [[ValueAxis]].\r\n         *\r\n         * @default false\r\n         * @since 4.4.9\r\n         * @param  value  Include ranges?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"includeRangesInMinMax\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"maxPrecision\", {\r\n        /**\r\n         * @return max precision\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxPrecision\");\r\n        },\r\n        /**\r\n         * Maximum number of decimals to allow when placing grid lines and labels\r\n         * on axis.\r\n         *\r\n         * Set it to `0` (zero) to force integer-only axis labels.\r\n         *\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"maxPrecision\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Invalidates axis data items when series extremes change\r\n     */\r\n    ValueAxis.prototype.handleExtremesChange = function () {\r\n        var _this = this;\r\n        this._extremesChanged = true;\r\n        this.getMinMax();\r\n        if (this.ghostLabel) {\r\n            var mw_1 = 0;\r\n            this.dataItems.each(function (dataItem) {\r\n                if (dataItem.label && dataItem.label.pixelWidth > mw_1) {\r\n                    _this.ghostLabel.text = dataItem.label.currentText;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative position on axis for series' data item's value.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Data field to get value from\r\n     * @param location  Location (0-1)\r\n     * @param stackKey  ?\r\n     * @return X coordinate (px)\r\n     */\r\n    ValueAxis.prototype.getX = function (dataItem, key, location, stackKey, range) {\r\n        return this.renderer.positionToPoint(this.getPositionX(dataItem, key, location, stackKey, range)).x;\r\n    };\r\n    /**\r\n     * Returns the X coordinate for series' data item's value.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Data field to get value from\r\n     * @param  location  Location (0-1)\r\n     * @param  stackKey  ?\r\n     * @return           Relative position\r\n     */\r\n    ValueAxis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\r\n        var value = dataItem.getWorkingValue(key);\r\n        if (!$type.hasValue(stackKey)) {\r\n            stackKey = \"valueX\";\r\n        }\r\n        var stack = dataItem.getValue(stackKey, \"stack\");\r\n        if (!$type.isNumber(value)) {\r\n            value = this.baseValue;\r\n            if (this.logarithmic) {\r\n                if (stack > 0) {\r\n                    value = 0;\r\n                }\r\n            }\r\n        }\r\n        var position = this.valueToPosition(value + stack);\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns the Y coordinate for series' data item's value.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Data field to get value from\r\n     * @param location  Location (0-1)\r\n     * @param stackKey  Stack ID\r\n     * @return Y coordinate (px)\r\n     */\r\n    ValueAxis.prototype.getY = function (dataItem, key, location, stackKey, range) {\r\n        return this.renderer.positionToPoint(this.getPositionY(dataItem, key, location, stackKey, range)).y;\r\n    };\r\n    /**\r\n     * Returns relative position on axis for series' data item's value.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Data field to get value from\r\n     * @param  location  Location (0-1)\r\n     * @param  stackKey  Stack ID\r\n     * @return           Relative position\r\n     */\r\n    ValueAxis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\r\n        var value = dataItem.getWorkingValue(key);\r\n        if (!$type.hasValue(stackKey)) {\r\n            stackKey = \"valueY\";\r\n        }\r\n        var stack = dataItem.getValue(stackKey, \"stack\");\r\n        if (!$type.isNumber(value)) {\r\n            value = this.baseValue;\r\n            if (this.logarithmic) {\r\n                if (stack > 0) {\r\n                    value = 0;\r\n                }\r\n            }\r\n        }\r\n        var position = this.valueToPosition(value + stack);\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns an angle for series data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Data field to get value from\r\n     * @param location  Location (0-1)\r\n     * @param stackKey  Stack ID\r\n     * @param range Range to fit in\r\n     * @return Angle\r\n     */\r\n    ValueAxis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\r\n        var value = dataItem.getWorkingValue(key);\r\n        var stack = dataItem.getValue(stackKey, \"stack\");\r\n        if (!$type.isNumber(value)) {\r\n            value = this.baseValue;\r\n        }\r\n        var position = this.valueToPosition(value + stack);\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return this.positionToAngle(position);\r\n    };\r\n    /**\r\n     * [getAnyRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param start     [description]\r\n     * @param end       [description]\r\n     * @param location  [description]\r\n     * @return [description]\r\n     */\r\n    ValueAxis.prototype.getAnyRangePath = function (start, end, location) {\r\n        var startPosition = this.valueToPosition(start);\r\n        var endPosition = this.valueToPosition(end);\r\n        return this.getPositionRangePath(startPosition, endPosition); // Base class (Axis) gets range shape from AxisRenderer\r\n    };\r\n    /**\r\n     * Returns text to show in a axis tooltip, based on specific position within\r\n     * axis.\r\n     *\r\n     * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n     * chart, or explicitly for this Axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position (px)\r\n     * @return Label (numeric value)\r\n     */\r\n    ValueAxis.prototype.getTooltipText = function (position) {\r\n        var value = $math.round(this.positionToValue(position), this._stepDecimalPlaces);\r\n        var valueStr = this.tooltip.numberFormatter.format(value);\r\n        if (!this._adapterO) {\r\n            return valueStr;\r\n        }\r\n        else {\r\n            return this._adapterO.apply(\"getTooltipText\", valueStr);\r\n        }\r\n    };\r\n    /**\r\n     * Zooms axis to specific values.\r\n     *\r\n     * @param startValue      Start value\r\n     * @param endValue        End value\r\n     * @param skipRangeEvent  Do not invoke events\r\n     * @param instantly       Do not play zoom animations\r\n     */\r\n    ValueAxis.prototype.zoomToValues = function (startValue, endValue, skipRangeEvent, instantly) {\r\n        var start = (startValue - this.min) / (this.max - this.min);\r\n        var end = (endValue - this.min) / (this.max - this.min);\r\n        this.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n    };\r\n    Object.defineProperty(ValueAxis.prototype, \"minZoomed\", {\r\n        /**\r\n         * A smallest value in axis scale within current zoom.\r\n         *\r\n         * @return Min zoom value\r\n         */\r\n        get: function () {\r\n            return $math.max(this.min, this._minZoomed);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValueAxis.prototype, \"maxZoomed\", {\r\n        /**\r\n         * A biggest value in axis scale within current zoom.\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return $math.min(this.max, this._maxZoomed);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates positioning of Axis breaks after something changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ValueAxis.prototype.fixAxisBreaks = function () {\r\n        var _this = this;\r\n        _super.prototype.fixAxisBreaks.call(this);\r\n        var axisBreaks = this._axisBreaks;\r\n        if (axisBreaks && axisBreaks.length > 0) {\r\n            // process breaks\r\n            axisBreaks.each(function (axisBreak) {\r\n                var startValue = axisBreak.adjustedStartValue;\r\n                var endValue = axisBreak.adjustedEndValue;\r\n                // break difference\r\n                var axisBreakDif = endValue - startValue;\r\n                var axisBreakGridCount = Math.ceil(axisBreakDif * axisBreak.breakSize) * _this._gridCount / (_this.max - _this.min);\r\n                // calculate min, max and step for axis break\r\n                var breakMinMaxStep = _this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount, true);\r\n                axisBreak.adjustedStep = breakMinMaxStep.step;\r\n                axisBreak.adjustedMin = breakMinMaxStep.min;\r\n                axisBreak.adjustedMax = breakMinMaxStep.max;\r\n            });\r\n        }\r\n        this._difference = this.adjustDifference(this.min, this.max);\r\n    };\r\n    /**\r\n     * Returns value based on position.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    ValueAxis.prototype.getPositionLabel = function (position) {\r\n        var value = this.positionToValue(position);\r\n        return this.numberFormatter.format(value);\r\n    };\r\n    /**\r\n     * Shows Axis tooltip at specific value\r\n     *\r\n     * @param value Value\r\n     */\r\n    ValueAxis.prototype.showTooltipAt = function (value) {\r\n        this.showTooltipAtPosition(this.valueToPosition(value));\r\n    };\r\n    /**\r\n     * Copies all properties and related data from a different instance of Axis.\r\n     *\r\n     * @param source Source Axis\r\n     */\r\n    ValueAxis.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.min = source.min;\r\n        this.max = source.max;\r\n        this.calculateTotals = source.calculateTotals;\r\n        this._baseValue = source.baseValue;\r\n    };\r\n    return ValueAxis;\r\n}(Axis));\r\nexport { ValueAxis };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxis\"] = ValueAxis;\r\nregistry.registeredClasses[\"ValueAxisDataItem\"] = ValueAxisDataItem;\r\n//# sourceMappingURL=ValueAxis.js.map","/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar DateAxisBreak = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DateAxisBreak, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DateAxisBreak() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"DateAxisBreak\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DateAxisBreak.prototype, \"startDate\", {\r\n        /**\r\n         * @return Start date\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startDate\");\r\n        },\r\n        /**\r\n         * Starting date for the break.\r\n         *\r\n         * @param value Start date\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startDate\", value)) {\r\n                this.startValue = value.getTime();\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxisBreak.prototype, \"endDate\", {\r\n        /**\r\n         * @return End date\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endDate\");\r\n        },\r\n        /**\r\n         * Ending date for the break.\r\n         *\r\n         * @param value End date\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endDate\", value)) {\r\n                this.endValue = value.getTime();\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateAxisBreak;\r\n}(ValueAxisBreak));\r\nexport { DateAxisBreak };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;\r\n//# sourceMappingURL=DateAxisBreak.js.map","/**\r\n * DateAxis module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ValueAxis, ValueAxisDataItem } from \"./ValueAxis\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { DateAxisBreak } from \"./DateAxisBreak\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { OrderedListTemplate } from \"../../core/utils/SortedList\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines data item for [[DateAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar DateAxisDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DateAxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DateAxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"DateAxisDataItem\";\r\n        _this.applyTheme();\r\n        _this.values.date = {};\r\n        _this.values.endDate = {};\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DateAxisDataItem.prototype, \"date\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.dates[\"date\"];\r\n        },\r\n        /**\r\n         * Date position of the data item.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"date\", date);\r\n            this.value = date.getTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxisDataItem.prototype, \"endDate\", {\r\n        /**\r\n         * @return End date\r\n         */\r\n        get: function () {\r\n            return this.dates[\"endDate\"];\r\n        },\r\n        /**\r\n         * End date for data item.\r\n         *\r\n         * @param date End date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"endDate\", date);\r\n            this.endValue = date.getTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateAxisDataItem;\r\n}(ValueAxisDataItem));\r\nexport { DateAxisDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to create a date/time-based axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Time\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Time\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"DateAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Time\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IDateAxisEvents} for a list of available Events\r\n * @see {@link IDateAxisAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/} got `DateAxis` documention\r\n * @important\r\n */\r\nvar DateAxis = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DateAxis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DateAxis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this._gapBreaks = false;\r\n        /**\r\n         * A list of date/time intervals for Date axis.\r\n         *\r\n         * This define various granularities available for the axis. For example\r\n         * if you have an axis spanning an hour, and space for 6 grid lines / labels\r\n         * the axis will choose the granularity of 10 minutes, displaying a label\r\n         * every 10 minutes.\r\n         *\r\n         * Default intervals:\r\n         *\r\n         * ```JSON\r\n         * [\r\n         *  { timeUnit: \"millisecond\", count: 1 },\r\n         *  { timeUnit: \"millisecond\", count: 5 },\r\n         *  { timeUnit: \"millisecond\", count: 10 },\r\n         *  { timeUnit: \"millisecond\", count: 50 },\r\n         *  { timeUnit: \"millisecond\", count: 100 },\r\n         *  { timeUnit: \"millisecond\", count: 500 },\r\n         *  { timeUnit: \"second\", count: 1 },\r\n         *  { timeUnit: \"second\", count: 5 },\r\n         *  { timeUnit: \"second\", count: 10 },\r\n         *  { timeUnit: \"second\", count: 30 },\r\n         *  { timeUnit: \"minute\", count: 1 },\r\n         *  { timeUnit: \"minute\", count: 5 },\r\n         *  { timeUnit: \"minute\", count: 10 },\r\n         *  { timeUnit: \"minute\", count: 30 },\r\n         *  { timeUnit: \"hour\", count: 1 },\r\n         *  { timeUnit: \"hour\", count: 3 },\r\n         *  { timeUnit: \"hour\", count: 6 },\r\n         *  { timeUnit: \"hour\", count: 12 },\r\n         *  { timeUnit: \"day\", count: 1 },\r\n         *  { timeUnit: \"day\", count: 2 },\r\n         *  { timeUnit: \"day\", count: 3 },\r\n         *  { timeUnit: \"day\", count: 4 },\r\n         *  { timeUnit: \"day\", count: 5 },\r\n         *  { timeUnit: \"week\", count: 1 },\r\n         *  { timeUnit: \"month\", count: 1 },\r\n         *  { timeUnit: \"month\", count: 2 },\r\n         *  { timeUnit: \"month\", count: 3 },\r\n         *  { timeUnit: \"month\", count: 6 },\r\n         *  { timeUnit: \"year\", count: 1 },\r\n         *  { timeUnit: \"year\", count: 2 },\r\n         *  { timeUnit: \"year\", count: 5 },\r\n         *  { timeUnit: \"year\", count: 10 },\r\n         *  { timeUnit: \"year\", count: 50 },\r\n         *  { timeUnit: \"year\", count: 100 }\r\n         * ]\r\n         * ```\r\n         */\r\n        _this.gridIntervals = new List();\r\n        /**\r\n         * If data aggregation is enabled by setting Axis' `groupData = true`, the\r\n         * chart will try to aggregate data items into grouped data items.\r\n         *\r\n         * If there are more data items in selected period than `groupCount`, it will\r\n         * group data items into bigger period.\r\n         *\r\n         * For example seconds might be grouped into 10-second aggregate data items.\r\n         *\r\n         * This setting indicates what group intervals can the chart group to.\r\n         *\r\n         * Default intervals:\r\n         *\r\n         * ```JSON\r\n         * [\r\n         *   { timeUnit: \"millisecond\", count: 1},\r\n         *   { timeUnit: \"millisecond\", count: 10 },\r\n         *   { timeUnit: \"millisecond\", count: 100 },\r\n         *   { timeUnit: \"second\", count: 1 },\r\n         *   { timeUnit: \"second\", count: 10 },\r\n         *   { timeUnit: \"minute\", count: 1 },\r\n         *   { timeUnit: \"minute\", count: 10 },\r\n         *   { timeUnit: \"hour\", count: 1 },\r\n         *   { timeUnit: \"day\", count: 1 },\r\n         *   { timeUnit: \"week\", count: 1 },\r\n         *   { timeUnit: \"month\", count: 1 },\r\n         *   { timeUnit: \"year\", count: 1 }\r\n         * ]\r\n         * ```\r\n         *\r\n         * @since 4.7.0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n         */\r\n        _this.groupIntervals = new List();\r\n        /**\r\n         * A collection of date formats to use when formatting different time units\r\n         * on Date/time axis.\r\n         *\r\n         * Actual defaults will depend on the language locale set for the chart.\r\n         *\r\n         * To override format for a specific time unit, say days, you need to set\r\n         * the appropriate key to a format string. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * axis.dateFormats.setKey(\"day\", \"MMMM d, yyyy\");\r\n         * ```\r\n         * ```JavaScript\r\n         * axis.dateFormats.setKey(\"day\", \"MMMM d, yyyy\");\r\n         * ```\r\n         * ```JSON\r\n         * \"xAxes\": [{\r\n         *   \"type\": \"DateAxis\",\r\n         *   \"dateFormats\": {\r\n         *     \"day\": \"MMMM d, yyyy\"\r\n         *   }\r\n         * }]\r\n         * ```\r\n         *\r\n         * @see {@link DateFormatter}\r\n         */\r\n        _this.dateFormats = new Dictionary();\r\n        /**\r\n         * These formats are applied to labels that are first in a larger unit.\r\n         *\r\n         * For example, if we have a DateAxis with days on it, the first day of month\r\n         * indicates a break in month - a start of the bigger period.\r\n         *\r\n         * For those labels, `periodChangeDateFormats` are applied instead of\r\n         * `dateFormats`.\r\n         *\r\n         * This allows us implement convenient structures, like instead of:\r\n         *\r\n         * `Jan 1 - Jan 2 - Jan 3 - ...`\r\n         *\r\n         * We can have:\r\n         *\r\n         * `Jan - 1 - 2 - 3 - ...`\r\n         *\r\n         * This can be disabled by setting `markUnitChange = false`.\r\n         */\r\n        _this.periodChangeDateFormats = new Dictionary();\r\n        /**\r\n         * Actual interval (granularity) derived from the actual data.\r\n         */\r\n        _this._baseIntervalReal = { timeUnit: \"day\", count: 1 };\r\n        /**\r\n         * [_minDifference description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._minDifference = {};\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._firstWeekDay = 1;\r\n        /**\r\n         * A collection of start timestamps to use as axis' min timestamp for\r\n         * particular data item item periods.\r\n         *\r\n         * @since 4.7.0\r\n         * @readonly\r\n         */\r\n        _this.groupMin = {};\r\n        /**\r\n         * A collection of start timestamps to use as axis' max timestamp for\r\n         * particular data item item periods.\r\n         *\r\n         * @since 4.7.0\r\n         * @readonly\r\n         */\r\n        _this.groupMax = {};\r\n        _this.className = \"DateAxis\";\r\n        _this.setPropertyValue(\"markUnitChange\", true);\r\n        _this.snapTooltip = true;\r\n        _this.tooltipPosition = \"pointer\";\r\n        _this.setPropertyValue(\"groupData\", false);\r\n        _this.groupCount = 200;\r\n        _this.events.on(\"parentset\", _this.getDFFormatter, _this, false);\r\n        // Translatable defaults are applied in `applyInternalDefaults()`\r\n        // ...\r\n        // Define default intervals\r\n        _this.gridIntervals.pushAll([\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ]);\r\n        _this.groupIntervals.pushAll([\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"year\", count: 1 }\r\n        ]);\r\n        // Set field name\r\n        _this.axisFieldName = \"date\";\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * A function which applies fills to axis cells.\r\n     *\r\n     * Default function fills every second fill. You can set this to a function\r\n     * that follows some other logic.\r\n     *\r\n     * Function should accept a [[DateAxisDataItem]] and modify its `axisFill`\r\n     * property accordingly.\r\n     */\r\n    DateAxis.prototype.fillRule = function (dataItem) {\r\n        var value = dataItem.value;\r\n        var axis = dataItem.component;\r\n        var gridInterval = axis._gridInterval;\r\n        var gridDuration = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n        if (Math.round((value - axis.min) / gridDuration) / 2 == Math.round(Math.round((value - axis.min) / gridDuration) / 2)) {\r\n            dataItem.axisFill.__disabled = true;\r\n        }\r\n        else {\r\n            dataItem.axisFill.__disabled = false;\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    DateAxis.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Set default date formats\r\n        if (!this.dateFormats.hasKey(\"millisecond\")) {\r\n            this.dateFormats.setKey(\"millisecond\", this.language.translate(\"_date_millisecond\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"second\")) {\r\n            this.dateFormats.setKey(\"second\", this.language.translate(\"_date_second\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"minute\")) {\r\n            this.dateFormats.setKey(\"minute\", this.language.translate(\"_date_minute\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"hour\")) {\r\n            this.dateFormats.setKey(\"hour\", this.language.translate(\"_date_hour\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"day\")) {\r\n            this.dateFormats.setKey(\"day\", this.language.translate(\"_date_day\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"week\")) {\r\n            this.dateFormats.setKey(\"week\", this.language.translate(\"_date_day\")); // not a mistake\r\n        }\r\n        if (!this.dateFormats.hasKey(\"month\")) {\r\n            this.dateFormats.setKey(\"month\", this.language.translate(\"_date_month\"));\r\n        }\r\n        if (!this.dateFormats.hasKey(\"year\")) {\r\n            this.dateFormats.setKey(\"year\", this.language.translate(\"_date_year\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"millisecond\")) {\r\n            this.periodChangeDateFormats.setKey(\"millisecond\", this.language.translate(\"_date_millisecond\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"second\")) {\r\n            this.periodChangeDateFormats.setKey(\"second\", this.language.translate(\"_date_second\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"minute\")) {\r\n            this.periodChangeDateFormats.setKey(\"minute\", this.language.translate(\"_date_minute\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"hour\")) {\r\n            this.periodChangeDateFormats.setKey(\"hour\", this.language.translate(\"_date_hour\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"day\")) {\r\n            this.periodChangeDateFormats.setKey(\"day\", this.language.translate(\"_date_day\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"week\")) {\r\n            this.periodChangeDateFormats.setKey(\"week\", this.language.translate(\"_date_day\"));\r\n        }\r\n        if (!this.periodChangeDateFormats.hasKey(\"month\")) {\r\n            this.periodChangeDateFormats.setKey(\"month\", this.language.translate(\"_date_month\") + \" \" + this.language.translate(\"_date_year\"));\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    DateAxis.prototype.createDataItem = function () {\r\n        return new DateAxisDataItem();\r\n    };\r\n    /**\r\n     * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n     *\r\n     * @return Axis break\r\n     */\r\n    DateAxis.prototype.createAxisBreak = function () {\r\n        return new DateAxisBreak();\r\n    };\r\n    /**\r\n     * Validates Axis' data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.validateDataItems = function () {\r\n        // allows to keep selection of the same size\r\n        var start = this.start;\r\n        var end = this.end;\r\n        var baseDuration = this.baseDuration;\r\n        var periodCount = (this.max - this.min) / baseDuration;\r\n        this._firstWeekDay = this.getFirstWeekDay();\r\n        this.getDFFormatter();\r\n        _super.prototype.validateDataItems.call(this);\r\n        var mainBaseDuration = $time.getDuration(this.mainBaseInterval.timeUnit, this.mainBaseInterval.count);\r\n        this.maxZoomFactor = (this.max - this.min) / mainBaseDuration;\r\n        this._deltaMinMax = this.baseDuration / 2;\r\n        // allows to keep selection of the same size\r\n        var newPeriodCount = (this.max - this.min) / baseDuration;\r\n        start = start + (end - start) * (1 - periodCount / newPeriodCount);\r\n        this.zoom({ start: start, end: end }, false, true); // added instantlyto solve zoomout problem when we have axes gaps. @todo: check how this affects maxZoomFactor\r\n    };\r\n    /**\r\n     * Handles process after zoom.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Does nothing?\r\n     */\r\n    DateAxis.prototype.handleSelectionExtremesChange = function () {\r\n    };\r\n    /**\r\n     * Calculates all positions, related to axis as per current zoom.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.calculateZoom = function () {\r\n        var _this = this;\r\n        _super.prototype.calculateZoom.call(this);\r\n        var difference = this.adjustDifference(this._minZoomed, this._maxZoomed);\r\n        var dataSetChanged = false;\r\n        // if data has to be grouped, choose interval and set dataset\r\n        if (this.groupData && $type.hasValue(difference)) {\r\n            var mainBaseInterval = this.mainBaseInterval;\r\n            var groupInterval = this.chooseInterval(0, difference, this.groupCount, this.groupIntervals);\r\n            if ($time.getDuration(groupInterval.timeUnit, groupInterval.count) < $time.getDuration(mainBaseInterval.timeUnit, mainBaseInterval.count)) {\r\n                groupInterval = tslib_1.__assign({}, mainBaseInterval);\r\n            }\r\n            this._groupInterval = groupInterval;\r\n            this._currentDataSetId = groupInterval.timeUnit + groupInterval.count;\r\n            this.series.each(function (series) {\r\n                if (series.baseAxis == _this) {\r\n                    if (series.setDataSet(_this._currentDataSetId)) {\r\n                        dataSetChanged = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        var gridInterval = this.chooseInterval(0, difference, this._gridCount);\r\n        if ($time.getDuration(gridInterval.timeUnit, gridInterval.count) < this.baseDuration) {\r\n            gridInterval = tslib_1.__assign({}, this.baseInterval);\r\n        }\r\n        this._gridInterval = gridInterval;\r\n        this._nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n        // the following is needed to avoid grid flickering while scrolling\r\n        this._intervalDuration = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n        this._gridDate = $time.round(new Date(this.minZoomed - $time.getDuration(gridInterval.timeUnit, gridInterval.count)), gridInterval.timeUnit, gridInterval.count, this._firstWeekDay, this._df.utc, new Date(this.min));\r\n        // tell series start/end\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (series.baseAxis == _this) {\r\n                var field_1 = series.getAxisField(_this);\r\n                var minZoomed = $time.round(new Date(_this._minZoomed), _this.baseInterval.timeUnit, _this.baseInterval.count).getTime();\r\n                var minZoomedStr = minZoomed.toString();\r\n                var startDataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(minZoomedStr + series.currentDataSetId);\r\n                var startIndex = 0;\r\n                if (_this.start != 0) {\r\n                    if (startDataItem) {\r\n                        startDataItem = _this.findFirst(startDataItem, minZoomed, field_1);\r\n                        startIndex = startDataItem.index;\r\n                    }\r\n                    else {\r\n                        startIndex = series.dataItems.findClosestIndex(_this._minZoomed, function (x) { return x[field_1]; }, \"left\");\r\n                    }\r\n                }\r\n                // 1 millisecond is removed so that if only first item is selected, it would not count in the second.\r\n                var baseInterval = _this.baseInterval;\r\n                var maxZoomed = $time.add($time.round(new Date(_this._maxZoomed), baseInterval.timeUnit, baseInterval.count, _this._firstWeekDay, _this._df.utc), baseInterval.timeUnit, baseInterval.count, _this._df.utc).getTime();\r\n                var maxZoomedStr = maxZoomed.toString();\r\n                var endDataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(maxZoomedStr + series.currentDataSetId);\r\n                var endIndex = series.dataItems.length;\r\n                if (_this.end != 1) {\r\n                    if (endDataItem) {\r\n                        endIndex = endDataItem.index;\r\n                    }\r\n                    else {\r\n                        maxZoomed -= 1;\r\n                        endIndex = series.dataItems.findClosestIndex(maxZoomed, function (x) { return x[field_1]; }, \"right\");\r\n                        if (endIndex < series.dataItems.length) {\r\n                            endIndex++;\r\n                        }\r\n                    }\r\n                }\r\n                series.startIndex = startIndex;\r\n                series.endIndex = endIndex;\r\n                if (!dataSetChanged && series.dataRangeInvalid) {\r\n                    series.validateDataRange();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    DateAxis.prototype.findFirst = function (dataItem, time, key) {\r\n        var index = dataItem.index;\r\n        if (index > 0) {\r\n            var series = dataItem.component;\r\n            var previousDataItem = series.dataItems.getIndex(index - 1);\r\n            var previousDate = previousDataItem[key];\r\n            if (!previousDate || previousDate.getTime() < time) {\r\n                return dataItem;\r\n            }\r\n            else {\r\n                return this.findFirst(previousDataItem, time, key);\r\n            }\r\n        }\r\n        else {\r\n            return dataItem;\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.validateData = function () {\r\n        _super.prototype.validateData.call(this);\r\n        if (!$type.isNumber(this.baseInterval.count)) {\r\n            this.baseInterval.count = 1;\r\n        }\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"minDifference\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            var minDifference = Number.MAX_VALUE;\r\n            this.series.each(function (series) {\r\n                if (minDifference > _this._minDifference[series.uid]) {\r\n                    minDifference = _this._minDifference[series.uid];\r\n                }\r\n            });\r\n            if (minDifference == Number.MAX_VALUE || minDifference == 0) {\r\n                minDifference = $time.getDuration(\"day\");\r\n            }\r\n            return minDifference;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    DateAxis.prototype.seriesDataChangeUpdate = function (series) {\r\n        this._minDifference[series.uid] = Number.MAX_VALUE;\r\n    };\r\n    /**\r\n     * [postProcessSeriesDataItems description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    DateAxis.prototype.postProcessSeriesDataItems = function () {\r\n        var _this = this;\r\n        this.series.each(function (series) {\r\n            if (JSON.stringify(series._baseInterval[_this.uid]) != JSON.stringify(_this.mainBaseInterval)) {\r\n                series.mainDataSet.each(function (dataItem) {\r\n                    _this.postProcessSeriesDataItem(dataItem);\r\n                });\r\n                series._baseInterval[_this.uid] = _this.mainBaseInterval;\r\n                if (_this.groupData) {\r\n                    _this.groupSeriesData(series);\r\n                }\r\n            }\r\n        });\r\n        this.addEmptyUnitsBreaks();\r\n    };\r\n    DateAxis.prototype.groupSeriesData = function (series) {\r\n        var _this = this;\r\n        if (series.baseAxis == this && series.dataItems.length > 0 && !series.dataGrouped) {\r\n            // make array of intervals which will be used;\r\n            var intervals_1 = [];\r\n            var mainBaseInterval = this.mainBaseInterval;\r\n            var mainIntervalDuration_1 = $time.getDuration(mainBaseInterval.timeUnit, mainBaseInterval.count);\r\n            this.groupIntervals.each(function (interval) {\r\n                var intervalDuration = $time.getDuration(interval.timeUnit, interval.count);\r\n                if (intervalDuration > mainIntervalDuration_1 && intervalDuration < (_this.max - _this.min)) {\r\n                    intervals_1.push(interval);\r\n                }\r\n            });\r\n            if (series._dataSets) {\r\n                series._dataSets.each(function (key, dataItems) {\r\n                    dataItems.each(function (dataItem) {\r\n                        dataItem.dispose();\r\n                    });\r\n                    dataItems.clear();\r\n                });\r\n                series._dataSets.clear();\r\n            }\r\n            $array.each(intervals_1, function (interval) {\r\n                //let mainBaseInterval = this._mainBaseInterval;\r\n                var key = \"date\" + _this.axisLetter;\r\n                // create data set\r\n                var dataSetId = interval.timeUnit + interval.count;\r\n                // todo: check where this clone goes\r\n                var dataSet = new OrderedListTemplate(series.mainDataSet.template.clone());\r\n                series.dataSets.setKey(dataSetId, dataSet);\r\n                series.dataGrouped = true;\r\n                var dataItems = series.mainDataSet;\r\n                var previousTime = Number.NEGATIVE_INFINITY;\r\n                var i = 0;\r\n                var newDataItem;\r\n                var dataFields = [];\r\n                $object.each(series.dataFields, function (dfkey, df) {\r\n                    var dfk = dfkey;\r\n                    if (dfk != key && dfk.indexOf(\"Show\") == -1) {\r\n                        dataFields.push(dfk);\r\n                    }\r\n                });\r\n                dataItems.each(function (dataItem) {\r\n                    var date = dataItem.getDate(key);\r\n                    if (date) {\r\n                        var time = date.getTime();\r\n                        var roundedDate = $time.round(new Date(time), interval.timeUnit, interval.count, _this._df.firstDayOfWeek, _this._df.utc);\r\n                        var currentTime = roundedDate.getTime();\r\n                        // changed period\t\t\t\t\t\t\t\t\r\n                        if (previousTime < currentTime) {\r\n                            newDataItem = dataSet.create();\r\n                            newDataItem.dataContext = {};\r\n                            newDataItem.component = series;\r\n                            // other Dates?\r\n                            newDataItem.setDate(key, roundedDate);\r\n                            newDataItem._index = i;\r\n                            i++;\r\n                            $array.each(dataFields, function (vkey) {\r\n                                //let groupFieldName = vkey + \"Group\";\r\n                                var dvalues = dataItem.values[vkey];\r\n                                if (dvalues) {\r\n                                    var value = dvalues.value;\r\n                                    var values = newDataItem.values[vkey];\r\n                                    if ($type.isNumber(value)) {\r\n                                        values.value = value;\r\n                                        values.workingValue = value;\r\n                                        values.open = value;\r\n                                        values.close = value;\r\n                                        values.low = value;\r\n                                        values.high = value;\r\n                                        values.sum = value;\r\n                                        values.average = value;\r\n                                        values.count = 1;\r\n                                    }\r\n                                    else {\r\n                                        values.count = 0;\r\n                                    }\r\n                                }\r\n                            });\r\n                            _this.postProcessSeriesDataItem(newDataItem, interval);\r\n                            $object.each(series.propertyFields, function (key, fieldValue) {\r\n                                var f = key;\r\n                                var value = dataItem.properties[key];\r\n                                if ($type.hasValue(value)) {\r\n                                    newDataItem.hasProperties = true;\r\n                                    newDataItem.setProperty(f, value);\r\n                                }\r\n                            });\r\n                            newDataItem.groupDataItems = [dataItem];\r\n                            previousTime = currentTime;\r\n                        }\r\n                        else {\r\n                            if (newDataItem) {\r\n                                $array.each(dataFields, function (vkey) {\r\n                                    var groupFieldName = series.groupFields[vkey];\r\n                                    var dvalues = dataItem.values[vkey];\r\n                                    if (dvalues) {\r\n                                        var value = dvalues.value;\r\n                                        if ($type.isNumber(value)) {\r\n                                            var values = newDataItem.values[vkey];\r\n                                            if (!$type.isNumber(values.open)) {\r\n                                                values.open = value;\r\n                                            }\r\n                                            values.close = value;\r\n                                            if (values.low > value || !$type.isNumber(values.low)) {\r\n                                                values.low = value;\r\n                                            }\r\n                                            if (values.high < value || !$type.isNumber(values.high)) {\r\n                                                values.high = value;\r\n                                            }\r\n                                            if ($type.isNumber(values.sum)) {\r\n                                                values.sum += value;\r\n                                            }\r\n                                            else {\r\n                                                values.sum = value;\r\n                                            }\r\n                                            values.count++;\r\n                                            values.average = values.sum / values.count;\r\n                                            if ($type.isNumber(values[groupFieldName])) {\r\n                                                values.value = values[groupFieldName];\r\n                                                values.workingValue = values.value;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                $utils.copyProperties(dataItem.properties, newDataItem.properties);\r\n                                $object.each(series.propertyFields, function (key, fieldValue) {\r\n                                    var f = key;\r\n                                    var value = dataItem.properties[key];\r\n                                    if ($type.hasValue(value)) {\r\n                                        newDataItem.hasProperties = true;\r\n                                        newDataItem.setProperty(f, value);\r\n                                    }\r\n                                });\r\n                                newDataItem.groupDataItems.push(dataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (newDataItem) {\r\n                        $utils.copyProperties(dataItem.dataContext, newDataItem.dataContext);\r\n                    }\r\n                });\r\n            });\r\n            this.calculateZoom();\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.getDFFormatter = function () {\r\n        this._df = this.dateFormatter;\r\n    };\r\n    /**\r\n     * [postProcessSeriesDataItem description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem Data item\r\n     */\r\n    DateAxis.prototype.postProcessSeriesDataItem = function (dataItem, interval) {\r\n        var _this = this;\r\n        // we need to do this for all series data items not only added recently, as baseInterval might change\r\n        var intervalID = \"\";\r\n        if (interval) {\r\n            intervalID = interval.timeUnit + interval.count;\r\n        }\r\n        else {\r\n            interval = this.mainBaseInterval;\r\n        }\r\n        var series = dataItem.component;\r\n        var dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);\r\n        $object.each(dataItem.dates, function (key) {\r\n            var date = dataItem.getDate(key);\r\n            var time = date.getTime();\r\n            var startDate = $time.round(new Date(time), interval.timeUnit, interval.count, _this._firstWeekDay, _this._df.utc);\r\n            var startTime = startDate.getTime();\r\n            var endDate = $time.add(new Date(startTime), interval.timeUnit, interval.count, _this._df.utc);\r\n            dataItem.setCalculatedValue(key, startTime, \"open\");\r\n            dataItem.setCalculatedValue(key, endDate.getTime(), \"close\");\r\n            dataItemsByAxis.setKey(startTime + intervalID, dataItem);\r\n        });\r\n    };\r\n    /**\r\n     * Collapses empty stretches of date/time scale by creating [[AxisBreak]]\r\n     * elements for them.\r\n     *\r\n     * Can be used to automatically remove strethes without data, like weekends.\r\n     *\r\n     * No, need to call this manually. It will automatically be done if\r\n     * `skipEmptyPeriods = true`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.addEmptyUnitsBreaks = function () {\r\n        var _this = this;\r\n        if (this.skipEmptyPeriods && $type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n            var timeUnit = this.baseInterval.timeUnit;\r\n            var count = this.baseInterval.count;\r\n            if (this._axisBreaks) {\r\n                this._axisBreaks.clear(); // TODO: what about breaks added by user?\r\n            }\r\n            var date = $time.round(new Date(this.min), timeUnit, count, this._firstWeekDay, this._df.utc);\r\n            var axisBreak = void 0;\r\n            var _loop_1 = function () {\r\n                $time.add(date, timeUnit, count, this_1._df.utc);\r\n                var startTime = date.getTime();\r\n                var startTimeStr = startTime.toString();\r\n                var hasData = $iter.contains(this_1.series.iterator(), function (series) {\r\n                    return !!series.dataItemsByAxis.getKey(_this.uid).getKey(startTimeStr + series.currentDataSetId);\r\n                });\r\n                // open break if not yet opened\r\n                if (!hasData) {\r\n                    if (!axisBreak) {\r\n                        axisBreak = this_1.axisBreaks.create();\r\n                        axisBreak.startDate = new Date(startTime);\r\n                        this_1._gapBreaks = true;\r\n                    }\r\n                }\r\n                else {\r\n                    // close if already opened\r\n                    if (axisBreak) {\r\n                        // close at end time minus one millisecond\r\n                        axisBreak.endDate = new Date(startTime - 1);\r\n                        axisBreak = undefined;\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            while (date.getTime() < this.max - this.baseDuration) {\r\n                _loop_1();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates positioning of Axis breaks after something changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.fixAxisBreaks = function () {\r\n        var _this = this;\r\n        _super.prototype.fixAxisBreaks.call(this);\r\n        var axisBreaks = this._axisBreaks;\r\n        if (axisBreaks) {\r\n            if (axisBreaks.length > 0) {\r\n                // process breaks\r\n                axisBreaks.each(function (axisBreak) {\r\n                    var breakGridCount = Math.ceil(_this._gridCount * (Math.min(_this.end, axisBreak.endPosition) - Math.max(_this.start, axisBreak.startPosition)) / (_this.end - _this.start));\r\n                    axisBreak.gridInterval = _this.chooseInterval(0, axisBreak.adjustedEndValue - axisBreak.adjustedStartValue, breakGridCount);\r\n                    var gridDate = $time.round(new Date(axisBreak.adjustedStartValue), axisBreak.gridInterval.timeUnit, axisBreak.gridInterval.count, _this._firstWeekDay, _this._df.utc);\r\n                    if (gridDate.getTime() > axisBreak.startDate.getTime()) {\r\n                        $time.add(gridDate, axisBreak.gridInterval.timeUnit, axisBreak.gridInterval.count, _this._df.utc);\r\n                    }\r\n                    axisBreak.gridDate = gridDate;\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.getFirstWeekDay = function () {\r\n        if (this._df) {\r\n            return this._df.firstDayOfWeek;\r\n        }\r\n        return 1;\r\n    };\r\n    /**\r\n     * [getGridDate description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param date           [description]\r\n     * @param intervalCount  [description]\r\n     * @return [description]\r\n     */\r\n    DateAxis.prototype.getGridDate = function (date, intervalCount) {\r\n        var timeUnit = this._gridInterval.timeUnit;\r\n        var realIntervalCount = this._gridInterval.count;\r\n        // round date\r\n        $time.round(date, timeUnit, 1, this._firstWeekDay, this._df.utc);\r\n        var prevTimestamp = date.getTime();\r\n        var newDate = $time.copy(date);\r\n        // modify date by adding intervalcount\r\n        var timestamp = $time.add(newDate, timeUnit, intervalCount, this._df.utc).getTime();\r\n        // if it's axis break, get first rounded date which is not in a break\r\n        var axisBreak = this.isInBreak(timestamp);\r\n        if (axisBreak && axisBreak.endDate) {\r\n            newDate = new Date(axisBreak.endDate.getTime());\r\n            $time.round(newDate, timeUnit, realIntervalCount, this._firstWeekDay, this._df.utc);\r\n            if (newDate.getTime() < axisBreak.endDate.getTime()) {\r\n                $time.add(newDate, timeUnit, realIntervalCount, this._df.utc);\r\n            }\r\n            timestamp = newDate.getTime();\r\n        }\r\n        // get duration between grid lines with break duration removed\r\n        var durationBreaksRemoved = this.adjustDifference(prevTimestamp, timestamp);\r\n        // calculate how many time units fit to this duration\r\n        var countBreaksRemoved = Math.round(durationBreaksRemoved / $time.getDuration(timeUnit));\r\n        // if less units fit, add one and repeat\r\n        if (countBreaksRemoved < realIntervalCount) {\r\n            return this.getGridDate(date, intervalCount + realIntervalCount);\r\n        }\r\n        return newDate;\r\n    };\r\n    /**\r\n     * [getBreaklessDate description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param axisBreak  [description]\r\n     * @param timeUnit   [description]\r\n     * @param count      [description]\r\n     * @return [description]\r\n     */\r\n    DateAxis.prototype.getBreaklessDate = function (axisBreak, timeUnit, count) {\r\n        var date = new Date(axisBreak.endValue);\r\n        $time.round(date, timeUnit, count, this._firstWeekDay, this._df.utc);\r\n        $time.add(date, timeUnit, count, this._df.utc);\r\n        var timestamp = date.getTime();\r\n        axisBreak = this.isInBreak(timestamp);\r\n        if (axisBreak) {\r\n            return this.getBreaklessDate(axisBreak, timeUnit, count);\r\n        }\r\n        return date;\r\n    };\r\n    /**\r\n     * (Re)validates all Axis elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    DateAxis.prototype.validateAxisElements = function () {\r\n        var _this = this;\r\n        if ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n            this.calculateZoom();\r\n            // first regular items\r\n            var timestamp = this._gridDate.getTime();\r\n            var timeUnit = this._gridInterval.timeUnit;\r\n            var intervalCount = this._gridInterval.count;\r\n            var prevGridDate = $time.copy(this._gridDate);\r\n            var dataItemsIterator_1 = this._dataItemsIterator;\r\n            this.resetIterators();\r\n            var _loop_2 = function () {\r\n                var date = this_2.getGridDate($time.copy(prevGridDate), intervalCount);\r\n                timestamp = date.getTime();\r\n                var endDate = $time.copy(date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length\r\n                endDate = $time.add(endDate, timeUnit, intervalCount, this_2._df.utc);\r\n                var format = this_2.dateFormats.getKey(timeUnit);\r\n                if (this_2.markUnitChange && prevGridDate) {\r\n                    if ($time.checkChange(date, prevGridDate, this_2._nextGridUnit, this_2._df.utc)) {\r\n                        if (timeUnit !== \"year\") {\r\n                            format = this_2.periodChangeDateFormats.getKey(timeUnit);\r\n                        }\r\n                    }\r\n                }\r\n                var text = this_2._df.format(date, format);\r\n                var dataItem = dataItemsIterator_1.find(function (x) { return x.text === text; });\r\n                if (dataItem.__disabled) {\r\n                    dataItem.__disabled = false;\r\n                }\r\n                this_2.appendDataItem(dataItem);\r\n                dataItem.axisBreak = undefined;\r\n                dataItem.date = date;\r\n                dataItem.endDate = endDate;\r\n                dataItem.text = text;\r\n                this_2.validateDataElement(dataItem);\r\n                prevGridDate = date;\r\n            };\r\n            var this_2 = this;\r\n            while (timestamp <= this._maxZoomed) {\r\n                _loop_2();\r\n            }\r\n            // breaks later\r\n            var renderer_1 = this.renderer;\r\n            if (this._axisBreaks) {\r\n                $iter.each(this._axisBreaks.iterator(), function (axisBreak) {\r\n                    if (axisBreak.breakSize > 0) {\r\n                        var timeUnit_1 = axisBreak.gridInterval.timeUnit;\r\n                        var intervalCount_1 = axisBreak.gridInterval.count;\r\n                        // only add grid if gap is bigger then minGridDistance\r\n                        if ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer_1.minGridDistance * 4) {\r\n                            var timestamp_1 = axisBreak.gridDate.getTime();\r\n                            var prevGridDate_1;\r\n                            var count = 0;\r\n                            var _loop_3 = function () {\r\n                                var date = $time.copy(axisBreak.gridDate);\r\n                                timestamp_1 = $time.add(date, timeUnit_1, intervalCount_1 * count, _this._df.utc).getTime();\r\n                                count++;\r\n                                if (timestamp_1 > axisBreak.adjustedStartValue && timestamp_1 < axisBreak.adjustedEndValue) {\r\n                                    var endDate = $time.copy(date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length\r\n                                    endDate = $time.add(endDate, timeUnit_1, intervalCount_1, _this._df.utc);\r\n                                    var format = _this.dateFormats.getKey(timeUnit_1);\r\n                                    if (_this.markUnitChange && prevGridDate_1) {\r\n                                        if ($time.checkChange(date, prevGridDate_1, _this._nextGridUnit, _this._df.utc)) {\r\n                                            if (timeUnit_1 !== \"year\") {\r\n                                                format = _this.periodChangeDateFormats.getKey(timeUnit_1);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    var text_1 = _this._df.format(date, format);\r\n                                    var dataItem = dataItemsIterator_1.find(function (x) { return x.text === text_1; });\r\n                                    if (dataItem.__disabled) {\r\n                                        dataItem.__disabled = false;\r\n                                    }\r\n                                    //this.processDataItem(dataItem);\r\n                                    _this.appendDataItem(dataItem);\r\n                                    dataItem.axisBreak = axisBreak;\r\n                                    axisBreak.dataItems.moveValue(dataItem);\r\n                                    dataItem.date = date;\r\n                                    dataItem.endDate = endDate;\r\n                                    dataItem.text = text_1;\r\n                                    prevGridDate_1 = date;\r\n                                    _this.validateDataElement(dataItem);\r\n                                }\r\n                            };\r\n                            while (timestamp_1 <= axisBreak.adjustedMax) {\r\n                                _loop_3();\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates Axis data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     */\r\n    DateAxis.prototype.validateDataElement = function (dataItem) {\r\n        dataItem.itemIndex = this._axisItemCount;\r\n        this._axisItemCount++;\r\n        if ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n            var renderer = this.renderer;\r\n            var timestamp = dataItem.value;\r\n            var endTimestamp = dataItem.endValue;\r\n            if (!$type.isNumber(endTimestamp)) {\r\n                endTimestamp = timestamp;\r\n            }\r\n            var position = this.valueToPosition(timestamp);\r\n            var endPosition = this.valueToPosition(endTimestamp);\r\n            var fillEndPosition = endPosition;\r\n            if (!dataItem.isRange && this._gridInterval.count > this.baseInterval.count) {\r\n                endPosition = position + (endPosition - position) / (this._gridInterval.count / this.baseInterval.count);\r\n            }\r\n            dataItem.position = position;\r\n            var tick = dataItem.tick;\r\n            if (tick && !tick.disabled) {\r\n                renderer.updateTickElement(tick, position, endPosition);\r\n            }\r\n            var grid = dataItem.grid;\r\n            if (grid && !grid.disabled) {\r\n                renderer.updateGridElement(grid, position, endPosition);\r\n            }\r\n            var fill = dataItem.axisFill;\r\n            if (fill && !fill.disabled) {\r\n                renderer.updateFillElement(fill, position, fillEndPosition);\r\n                if (!dataItem.isRange) {\r\n                    this.fillRule(dataItem);\r\n                }\r\n            }\r\n            var mask = dataItem.mask;\r\n            if (mask) {\r\n                renderer.updateFillElement(mask, position, endPosition);\r\n            }\r\n            if (dataItem.bullet) {\r\n                renderer.updateBullet(dataItem.bullet, position, endPosition);\r\n            }\r\n            var label = dataItem.label;\r\n            if (label && !label.disabled) {\r\n                var location_1 = label.location;\r\n                if (location_1 == 0) {\r\n                    if (this._gridInterval.count == 1 && this._gridInterval.timeUnit != \"week\" && !dataItem.isRange) {\r\n                        location_1 = 0.5;\r\n                    }\r\n                    else {\r\n                        location_1 = 0;\r\n                    }\r\n                }\r\n                renderer.updateLabelElement(label, position, endPosition, location_1);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"baseDuration\", {\r\n        /**\r\n         * A duration in milliseconds of the `baseInterval`.\r\n         *\r\n         * @return Duration (ms)\r\n         */\r\n        get: function () {\r\n            return $time.getDuration(this.baseInterval.timeUnit, this.baseInterval.count);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adjusts min/max values.\r\n     *\r\n     * @ignore Exclude from docs.\r\n     * @todo Description (review)\r\n     * @param min  Min timestamp\r\n     * @param max  Max timestamp\r\n     * @return Adjusted min/max step\r\n     */\r\n    DateAxis.prototype.adjustMinMax = function (min, max) {\r\n        return { min: min, max: max, step: this.baseDuration };\r\n    };\r\n    /**\r\n     * Adjusts the minimum timestamp as per cell start location.\r\n     *\r\n     * @param value  Value\r\n     * @return Adjusted value\r\n     */\r\n    DateAxis.prototype.fixMin = function (value) {\r\n        // like this because months are not equal\r\n        var interval = this.baseInterval;\r\n        var startTime = $time.round(new Date(value), interval.timeUnit, interval.count, this._firstWeekDay, this._df.utc).getTime();\r\n        var endTime = $time.add(new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();\r\n        return startTime + (endTime - startTime) * this.startLocation;\r\n    };\r\n    /**\r\n     * Adjusts the maximum timestamp as per cell start location.\r\n     *\r\n     * @param value  Value\r\n     * @return Adjusted value\r\n     */\r\n    DateAxis.prototype.fixMax = function (value) {\r\n        // like this because months are not equal\r\n        var interval = this.baseInterval;\r\n        var startTime = $time.round(new Date(value), interval.timeUnit, interval.count, this._firstWeekDay, this._df.utc).getTime();\r\n        var endTime = $time.add(new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();\r\n        return startTime + (endTime - startTime) * this.endLocation;\r\n    };\r\n    /**\r\n     * [chooseInterval description]\r\n     *\r\n     * @ignore Exclude from docs.\r\n     * @todo Description\r\n     * @param index      [description]\r\n     * @param duration   [description]\r\n     * @param gridCount  [description]\r\n     * @return [description]\r\n     */\r\n    DateAxis.prototype.chooseInterval = function (index, duration, gridCount, intervals) {\r\n        if (!intervals) {\r\n            intervals = this.gridIntervals;\r\n        }\r\n        var gridInterval = intervals.getIndex(index);\r\n        var intervalDuration = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n        var lastIndex = intervals.length - 1;\r\n        if (index >= lastIndex) {\r\n            return tslib_1.__assign({}, intervals.getIndex(lastIndex));\r\n        }\r\n        var count = Math.ceil(duration / intervalDuration);\r\n        if (duration < intervalDuration && index > 0) {\r\n            return tslib_1.__assign({}, intervals.getIndex(index - 1));\r\n        }\r\n        if (count <= gridCount) {\r\n            return tslib_1.__assign({}, intervals.getIndex(index));\r\n        }\r\n        else {\r\n            if (index + 1 < intervals.length) {\r\n                return this.chooseInterval(index + 1, duration, gridCount, intervals);\r\n            }\r\n            else {\r\n                return tslib_1.__assign({}, intervals.getIndex(index));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Formats the value according to axis' own [[DateFormatter]].\r\n     *\r\n     * @param value  Source value\r\n     * @return Formatted value\r\n     */\r\n    DateAxis.prototype.formatLabel = function (value) {\r\n        return this._df.format(value);\r\n    };\r\n    /**\r\n     * Converts a Date to an asbolute pixel position within Axis.\r\n     *\r\n     * @param date  Date\r\n     * @return Position (px)\r\n     */\r\n    DateAxis.prototype.dateToPosition = function (date) {\r\n        return this.valueToPosition(date.getTime());\r\n    };\r\n    /**\r\n     * Converts a numeric timestamp or a `Date` to a relative position on axis.\r\n     *\r\n     * @param date  Date or a timestamp\r\n     * @return Relative position\r\n     */\r\n    DateAxis.prototype.anyToPosition = function (date) {\r\n        if (date instanceof Date) {\r\n            return this.dateToPosition(date);\r\n        }\r\n        else {\r\n            return this.valueToPosition(date);\r\n        }\r\n    };\r\n    /**\r\n     * Converts date to orientation point (x, y, angle) on axis\r\n     *\r\n     * @param date Date\r\n     * @return IOrientationPoint\r\n     */\r\n    DateAxis.prototype.dateToPoint = function (date) {\r\n        var position = this.dateToPosition(date);\r\n        var point = this.renderer.positionToPoint(position);\r\n        var angle = this.renderer.positionToAngle(position);\r\n        return { x: point.x, y: point.y, angle: angle };\r\n    };\r\n    /**\r\n     * Converts a numeric value to orientation (x, y, angle) point on axis\r\n     *\r\n     * @param value  Value\r\n     * @return Orientation point\r\n     */\r\n    DateAxis.prototype.anyToPoint = function (date) {\r\n        if (date instanceof Date) {\r\n            return this.dateToPoint(date);\r\n        }\r\n        else {\r\n            return this.valueToPoint(date);\r\n        }\r\n    };\r\n    /**\r\n     * Converts pixel position within Axis to a corresponding Date.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Date\r\n     */\r\n    DateAxis.prototype.positionToDate = function (position) {\r\n        return new Date(this.positionToValue(position));\r\n    };\r\n    /**\r\n     * Returns the relative position on axis for series' data item's value.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Data field to get value from\r\n     * @param  location  Location (0-1)\r\n     * @return           Relative position\r\n     */\r\n    DateAxis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\r\n        var value = this.getTimeByLocation(dataItem, key, location);\r\n        //let stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n        if (!$type.isNumber(value)) {\r\n            value = this.baseValue;\r\n        }\r\n        var position = this.valueToPosition(value);\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns relative position on axis for series' data item's value.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Data field to get value from\r\n     * @param  location  Location (0-1)\r\n     * @return           Relative position\r\n     */\r\n    DateAxis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\r\n        var value = this.getTimeByLocation(dataItem, key, location);\r\n        var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n        if (!$type.isNumber(value)) {\r\n            value = this.baseValue;\r\n        }\r\n        var position = this.valueToPosition(value + stack);\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns an angle for series data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Data field to get value from\r\n     * @param location  Location (0-1)\r\n     * @param stackKey  Stack ID\r\n     * @param range Range to fit in\r\n     * @return Angle\r\n     */\r\n    DateAxis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\r\n        var value = this.getTimeByLocation(dataItem, key, location);\r\n        var stack = dataItem.getValue(stackKey, \"stack\");\r\n        if (!$type.isNumber(value)) {\r\n            value = this.baseValue;\r\n        }\r\n        var position = this.valueToPosition(value + stack);\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return this.positionToAngle(position);\r\n    };\r\n    /**\r\n     * [getTimeByLocation description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  [description]\r\n     * @param key       [description]\r\n     * @param location  [description]\r\n     * @return [description]\r\n     */\r\n    DateAxis.prototype.getTimeByLocation = function (dataItem, key, location) {\r\n        if (!$type.hasValue(key)) {\r\n            return;\r\n        }\r\n        if (!$type.isNumber(location)) {\r\n            location = dataItem.workingLocations[key];\r\n            if (!$type.isNumber(location)) {\r\n                location = 0;\r\n            }\r\n        }\r\n        var startTime = dataItem.values[key][\"open\"];\r\n        var endTime = dataItem.values[key][\"close\"];\r\n        var workingValue = dataItem.values[key].workingValue;\r\n        var value = dataItem.values[key].value;\r\n        var difference = value - workingValue;\r\n        startTime -= difference;\r\n        endTime -= difference;\r\n        if ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n            return startTime + (endTime - startTime) * location;\r\n        }\r\n    };\r\n    /**\r\n     * Processes a related series' data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    DateAxis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {\r\n        var series = dataItem.component;\r\n        var time;\r\n        var date = dataItem[\"date\" + axisLetter];\r\n        if (date) {\r\n            time = date.getTime();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        var openDate = dataItem[\"openDate\" + axisLetter];\r\n        var prevSeriesTime = this._prevSeriesTime;\r\n        var openTime;\r\n        if (openDate) {\r\n            openTime = openDate.getTime();\r\n        }\r\n        if ($type.isNumber(openTime)) {\r\n            var difference = Math.abs(time - openTime);\r\n            if (this._minDifference[series.uid] > difference) {\r\n                this._minDifference[series.uid] = difference;\r\n            }\r\n        }\r\n        var differece = time - prevSeriesTime;\r\n        if (differece > 0) {\r\n            if (this._minDifference[series.uid] > differece) {\r\n                this._minDifference[series.uid] = differece;\r\n            }\r\n        }\r\n        this._prevSeriesTime = time;\r\n        if (series._baseInterval[this.uid]) {\r\n            this.postProcessSeriesDataItem(dataItem);\r\n        }\r\n        else {\r\n            if (this._baseInterval) {\r\n                series._baseInterval[this.uid] = this._baseInterval;\r\n                this.postProcessSeriesDataItem(dataItem);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * [updateAxisBySeries description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    DateAxis.prototype.updateAxisBySeries = function () {\r\n        _super.prototype.updateAxisBySeries.call(this);\r\n        var baseInterval = this.chooseInterval(0, this.minDifference, 1);\r\n        // handle short months\r\n        if (this.minDifference >= $time.getDuration(\"day\", 27) && baseInterval.timeUnit == \"week\") {\r\n            baseInterval.timeUnit = \"month\";\r\n            baseInterval.count = 1;\r\n        }\r\n        if (baseInterval.timeUnit == \"month\") {\r\n            if (this.minDifference >= $time.getDuration(\"day\", 29 * 2) && baseInterval.count == 1) {\r\n                baseInterval.count = 2;\r\n            }\r\n            if (this.minDifference >= $time.getDuration(\"day\", 29 * 3) && baseInterval.count == 2) {\r\n                baseInterval.count = 3;\r\n            }\r\n            if (this.minDifference >= $time.getDuration(\"day\", 29 * 6) && baseInterval.count == 5) {\r\n                baseInterval.count = 6;\r\n            }\r\n        }\r\n        // handle daylight saving\r\n        if (this.minDifference >= $time.getDuration(\"hour\", 23) && baseInterval.timeUnit == \"hour\") {\r\n            baseInterval.timeUnit = \"day\";\r\n            baseInterval.count = 1;\r\n        }\r\n        if (this.minDifference >= $time.getDuration(\"week\", 1) - $time.getDuration(\"hour\", 1) && baseInterval.timeUnit == \"day\") {\r\n            baseInterval.timeUnit = \"week\";\r\n            baseInterval.count = 1;\r\n        }\r\n        if (this.minDifference >= $time.getDuration(\"year\", 1) - $time.getDuration(\"day\", 1.01) && baseInterval.timeUnit == \"month\") {\r\n            baseInterval.timeUnit = \"year\";\r\n            baseInterval.count = 1;\r\n        }\r\n        this._baseIntervalReal = baseInterval;\r\n        this._mainBaseInterval = baseInterval;\r\n        // no need to invalidate\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"baseInterval\", {\r\n        /**\r\n         * @return Base interval\r\n         */\r\n        get: function () {\r\n            if (this._groupInterval) {\r\n                return this._groupInterval;\r\n            }\r\n            else if (this._baseInterval) {\r\n                return this._baseInterval;\r\n            }\r\n            else {\r\n                return this._baseIntervalReal;\r\n            }\r\n        },\r\n        /**\r\n         * A base interval (granularity) of data.\r\n         *\r\n         * Used to indicate what are the base units of your data.\r\n         *\r\n         * For example, if you have a data set that has a data point every 5 minutes,\r\n         * you may want to set this to `{ timeUnit: \"minute\", count: 5 }`.\r\n         *\r\n         * If not set, the Axis will try to determine the setting by its own, looking\r\n         * at actual data.\r\n         *\r\n         * For best results, try to follow these values for `count`:\r\n         *\r\n         * When unit is \"month\", use 12 / count = round number\r\n         * When unit is \"hour\", use 24 / count = round number\r\n         * When unit is \"second\" and \"minute\", use 60 / count = round number\r\n         *\r\n         * @param timeInterval base interval\r\n         */\r\n        set: function (timeInterval) {\r\n            if (JSON.stringify(this._baseInterval) != JSON.stringify(timeInterval)) {\r\n                this._baseInterval = timeInterval;\r\n                this._mainBaseInterval = timeInterval;\r\n                if (!$type.isNumber(timeInterval.count)) {\r\n                    timeInterval.count = 1;\r\n                }\r\n                this.invalidate();\r\n                this.postProcessSeriesDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"mainBaseInterval\", {\r\n        /**\r\n         * Indicates granularity of the data of source (unaggregated) data.\r\n         *\r\n         * @since 4.7.0\r\n         * @return Granularity of the main data set\r\n         */\r\n        get: function () {\r\n            if (this._baseInterval) {\r\n                return this._baseInterval;\r\n            }\r\n            else if (this._mainBaseInterval) {\r\n                return this._mainBaseInterval;\r\n            }\r\n            else {\r\n                return this._baseIntervalReal;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"skipEmptyPeriods\", {\r\n        /**\r\n         * @return Remove empty stretches of time?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"skipEmptyPeriods\");\r\n        },\r\n        /**\r\n         * If enabled, axis will automatically collapse empty (without data points)\r\n         * periods of time, i.e. weekends.\r\n         *\r\n         * An \"empty\" period is considered a stretch of time in the length of current\r\n         * `baseInterval` without a single data point in it.\r\n         *\r\n         * For each such empty period, axis will automatically create an\r\n         * [[AxisBreak]]. By default they will be invisible. You can still configure\r\n         * them by accessing `axis.breaks.template`.\r\n         *\r\n         * [More info about breaks](https://www.amcharts.com/docs/v4/concepts/axes/#Breaks).\r\n         *\r\n         * Important notes:\r\n         * * If you set this property to `true`, you can not add your custom axis breaks to this axis anymore.\r\n         * * Using this feature affects performance. Use only if you need it.\r\n         * * Setting this to `true` will reset appearance of breaks. If you want to modify appearance, do it *after* you set `skipEmptyPeriods`.\r\n         *\r\n         * @default false\r\n         * @param value  Remove empty stretches of time?\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                var breakTemplate = this.axisBreaks.template;\r\n                breakTemplate.startLine.disabled = true;\r\n                breakTemplate.endLine.disabled = true;\r\n                breakTemplate.fillShape.disabled = true;\r\n                breakTemplate.breakSize = 0;\r\n            }\r\n            else {\r\n                if (this._gapBreaks) {\r\n                    this.axisBreaks.clear();\r\n                    this._gapBreaks = false;\r\n                }\r\n            }\r\n            if (this.setPropertyValue(\"skipEmptyPeriods\", value)) {\r\n                this.invalidate();\r\n                this.postProcessSeriesDataItems();\r\n                this.invalidateSeries();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"tooltipDateFormat\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipDateFormat\");\r\n        },\r\n        /**\r\n         * A special date format to apply axis tooltips.\r\n         *\r\n         * Will use same format as for labels, if not set.\r\n         *\r\n         * @param value  Date format\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipDateFormat\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"markUnitChange\", {\r\n        /**\r\n         * @return Use different format for period beginning?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"markUnitChange\");\r\n        },\r\n        /**\r\n         * Use `periodChangeDateFormats` to apply different formats to the first\r\n         * label in bigger time unit.\r\n         *\r\n         * @default true\r\n         * @param value  Use different format for period beginning?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"markUnitChange\", value)) {\r\n                this.invalidateData();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns text to show in a tooltip, based on specific relative position\r\n     * within axis.\r\n     *\r\n     * The label will be formatted as per [[DateFormatter]] set for the whole\r\n     * chart, or explicitly for this Axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position\r\n     * @return Label (formatted date)\r\n     */\r\n    DateAxis.prototype.getTooltipText = function (position) {\r\n        var text;\r\n        var date = this.positionToDate(position);\r\n        date = $time.round(date, this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc, new Date(this.min));\r\n        if ($type.hasValue(this.tooltipDateFormat)) {\r\n            text = this._df.format(date, this.tooltipDateFormat);\r\n        }\r\n        else {\r\n            var dateFormat = this.dateFormats.getKey(this.baseInterval.timeUnit);\r\n            if (dateFormat) {\r\n                text = this._df.format(date, dateFormat);\r\n            }\r\n            else {\r\n                text = this.getPositionLabel(position);\r\n            }\r\n        }\r\n        if (!this._adapterO) {\r\n            return text;\r\n        }\r\n        else {\r\n            return this._adapterO.apply(\"getTooltipText\", text);\r\n        }\r\n    };\r\n    /**\r\n     * Takes an absolute position within axis and adjust it to a specific position within base interval. (cell)\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position Source position\r\n     * @param location  Location in the cell\r\n     * @return Adjusted position\r\n     */\r\n    DateAxis.prototype.roundPosition = function (position, location, axisLocation) {\r\n        var baseInterval = this.baseInterval;\r\n        var timeUnit = baseInterval.timeUnit;\r\n        var count = baseInterval.count;\r\n        var date = this.positionToDate(position);\r\n        $time.round(date, timeUnit, count, this._firstWeekDay, this._df.utc);\r\n        if (location > 0) {\r\n            $time.add(date, timeUnit, location * count, this._df.utc);\r\n        }\r\n        if (axisLocation > 0 && axisLocation < 1) {\r\n            date.setTime(date.getTime() + this.baseDuration * axisLocation);\r\n        }\r\n        if (this.isInBreak(date.getTime())) {\r\n            while (date.getTime() < this.max) {\r\n                $time.add(date, timeUnit, count, this._df.utc);\r\n                if (!this.isInBreak(date.getTime())) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return this.dateToPosition(date);\r\n    };\r\n    /**\r\n     * Returns an relative position of the start of the cell (period), that specific position value falls into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param position  Relative position\r\n     * @return Cell start relative position\r\n     */\r\n    DateAxis.prototype.getCellStartPosition = function (position) {\r\n        return this.roundPosition(position, 0);\r\n    };\r\n    /**\r\n     * Returns an relative position of the end of the cell (period), that specific position value falls into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param position  Relative position\r\n     * @return Cell end relative position\r\n     */\r\n    DateAxis.prototype.getCellEndPosition = function (position) {\r\n        return this.roundPosition(position, 1);\r\n        //return this.dateToPosition($time.add(this.positionToDate(this.roundPosition(position, 1)), this.baseInterval.timeUnit, this.baseInterval.count));\r\n    };\r\n    /**\r\n     * Returns a Series data item that corresponds to the specific pixel position\r\n     * of the Axis.\r\n     *\r\n     * If `findNearest` (third parameter) is set to `true`, the method will try\r\n     * to locate nearest available data item if none is found directly under\r\n     * `position`.\r\n     *\r\n     * @param series       Series\r\n     * @param position     Position (px)\r\n     * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n     * @return Data item\r\n     */\r\n    DateAxis.prototype.getSeriesDataItem = function (series, position, findNearest) {\r\n        var value = this.positionToValue(position);\r\n        var date = $time.round(new Date(value), this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc);\r\n        var dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);\r\n        var dataItem = dataItemsByAxis.getKey(date.getTime().toString());\r\n        // todo:  alternatively we can find closiest here\r\n        if (!dataItem && findNearest) {\r\n            var key_1;\r\n            if (this.axisLetter == \"Y\") {\r\n                key_1 = \"dateY\";\r\n            }\r\n            else {\r\n                key_1 = \"dateX\";\r\n            }\r\n            dataItem = series.dataItems.getIndex(series.dataItems.findClosestIndex(date.getTime(), function (x) {\r\n                if (x[key_1]) {\r\n                    return x[key_1].getTime();\r\n                }\r\n                else {\r\n                    return -Infinity;\r\n                }\r\n            }, \"any\"));\r\n        }\r\n        return dataItem;\r\n    };\r\n    /**\r\n     * Returns a formatted date based on position in axis scale.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    DateAxis.prototype.getPositionLabel = function (position) {\r\n        // @todo Better format recognition\r\n        var date = this.positionToDate(position);\r\n        return this._df.format(date, this.getCurrentLabelFormat());\r\n    };\r\n    /**\r\n     * Returns label date format based on currently used time units\r\n     *\r\n     * @return Format\r\n     */\r\n    DateAxis.prototype.getCurrentLabelFormat = function () {\r\n        return this.dateFormats.getKey(this._gridInterval ? this._gridInterval.timeUnit : \"day\");\r\n    };\r\n    /**\r\n     * Initializes an Axis renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    DateAxis.prototype.initRenderer = function () {\r\n        _super.prototype.initRenderer.call(this);\r\n        var renderer = this.renderer;\r\n        if (renderer) {\r\n            // Set defaults\r\n            renderer.ticks.template.location = 0;\r\n            renderer.grid.template.location = 0;\r\n            renderer.labels.template.location = 0;\r\n            renderer.baseGrid.disabled = true;\r\n        }\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"basePoint\", {\r\n        /**\r\n         * Coordinates of the actual axis start.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Base point\r\n         */\r\n        get: function () {\r\n            return { x: 0, y: 0 };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.animateMinMax = function (min, max) {\r\n        var _this = this;\r\n        var animation = this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n        animation.events.on(\"animationprogress\", function () {\r\n            _this.dispatch(\"extremeschanged\");\r\n        });\r\n        return animation;\r\n    };\r\n    /**\r\n     * Invalidates axis data items when series extremes change\r\n     */\r\n    DateAxis.prototype.handleExtremesChange = function () {\r\n        _super.prototype.handleExtremesChange.call(this);\r\n        if (this.groupData) {\r\n            var id = this.baseInterval.timeUnit + this.baseInterval.count;\r\n            this.groupMin[id] = this.min;\r\n            this.groupMax[id] = this.max;\r\n        }\r\n    };\r\n    /**\r\n     * Zooms axis to specific Dates.\r\n     *\r\n     * @param startDate       Start date\r\n     * @param endValue        End date\r\n     * @param skipRangeEvent  Do not invoke events\r\n     * @param instantly       Do not play zoom animations\r\n     */\r\n    DateAxis.prototype.zoomToDates = function (startDate, endDate, skipRangeEvent, instantly, adjust) {\r\n        startDate = this._df.parse(startDate);\r\n        endDate = this._df.parse(endDate);\r\n        this.zoomToValues(startDate.getTime(), endDate.getTime(), skipRangeEvent, instantly, adjust);\r\n    };\r\n    /**\r\n     * Zooms axis to specific values.\r\n     *\r\n     * @param startValue      Start value\r\n     * @param endValue        End value\r\n     * @param skipRangeEvent  Do not invoke events\r\n     * @param instantly       Do not play zoom animations\r\n     */\r\n    DateAxis.prototype.zoomToValues = function (startValue, endValue, skipRangeEvent, instantly, adjust) {\r\n        var _this = this;\r\n        if (!this.groupData) {\r\n            var start = (startValue - this.min) / (this.max - this.min);\r\n            var end = (endValue - this.min) / (this.max - this.min);\r\n            this.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n        }\r\n        else {\r\n            var difference = this.adjustDifference(startValue, endValue);\r\n            var isEnd = false;\r\n            if (endValue == this.max) {\r\n                isEnd = true;\r\n            }\r\n            var isStart = false;\r\n            if (startValue == this.min) {\r\n                isStart = true;\r\n            }\r\n            if ($type.hasValue(difference)) {\r\n                var mainBaseInterval = this.mainBaseInterval;\r\n                var groupInterval = this.chooseInterval(0, difference, this.groupCount, this.groupIntervals);\r\n                if ((groupInterval.timeUnit == mainBaseInterval.timeUnit && groupInterval.count < mainBaseInterval.count) || $time.getDuration(groupInterval.timeUnit, 1) < $time.getDuration(mainBaseInterval.timeUnit, 1)) {\r\n                    groupInterval = tslib_1.__assign({}, mainBaseInterval);\r\n                }\r\n                var id = groupInterval.timeUnit + groupInterval.count;\r\n                var min_1 = this.groupMin[id];\r\n                var max_1 = this.groupMax[id];\r\n                if (!$type.isNumber(min_1) || !$type.isNumber(max_1)) {\r\n                    min_1 = Number.POSITIVE_INFINITY;\r\n                    max_1 = Number.NEGATIVE_INFINITY;\r\n                    this.series.each(function (series) {\r\n                        var seriesMin = series.min(_this);\r\n                        var seriesMax = series.max(_this);\r\n                        if (seriesMin < min_1) {\r\n                            min_1 = seriesMin;\r\n                        }\r\n                        if (seriesMax < max_1) {\r\n                            max_1 = seriesMax;\r\n                        }\r\n                    });\r\n                    this.groupMin[id] = min_1;\r\n                    this.groupMax[id] = max_1;\r\n                }\r\n                startValue = $math.fitToRange(startValue, min_1, max_1);\r\n                endValue = $math.fitToRange(endValue, min_1, max_1);\r\n                if (adjust) {\r\n                    if (isEnd) {\r\n                        startValue = endValue - difference;\r\n                        startValue = $math.fitToRange(startValue, min_1, max_1);\r\n                    }\r\n                    if (isStart) {\r\n                        endValue = startValue + difference;\r\n                        endValue = $math.fitToRange(endValue, min_1, max_1);\r\n                    }\r\n                }\r\n                var start = (startValue - min_1) / (max_1 - min_1);\r\n                var end = (endValue - min_1) / (max_1 - min_1);\r\n                this.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Adds `baseInterval` to \"as is\" fields.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as is?\r\n     */\r\n    DateAxis.prototype.asIs = function (field) {\r\n        return field == \"baseInterval\" || _super.prototype.asIs.call(this, field);\r\n    };\r\n    /**\r\n     * Copies all properties and related data from a different instance of Axis.\r\n     *\r\n     * @param source Source Axis\r\n     */\r\n    DateAxis.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.dateFormats = source.dateFormats;\r\n        this.periodChangeDateFormats = source.periodChangeDateFormats;\r\n        this.groupIntervals.clear();\r\n        source.groupIntervals.each(function (interval) {\r\n            _this.groupIntervals.push(tslib_1.__assign({}, interval));\r\n        });\r\n        this.gridIntervals.clear();\r\n        source.gridIntervals.each(function (interval) {\r\n            _this.gridIntervals.push(tslib_1.__assign({}, interval));\r\n        });\r\n        if (source._baseInterval) {\r\n            this.baseInterval = source._baseInterval;\r\n        }\r\n    };\r\n    /**\r\n     * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n     *\r\n     * @param position Position (0-1)\r\n     * @param local or global position\r\n     */\r\n    DateAxis.prototype.showTooltipAtPosition = function (position, local) {\r\n        var _this = this;\r\n        if (!local) {\r\n            position = this.toAxisPosition(position);\r\n        }\r\n        if (this.snapTooltip) {\r\n            // rounding is not good, pen/aac4e7f66f019d36b2447f050c600c13 (no last tootltip shown)\r\n            var actualDate = this.positionToDate(position); //$time.round(this.positionToDate(position), this.baseInterval.timeUnit, 1, this.getFirstWeekDay(), this.dateFormatter.utc);\r\n            var actualTime_1 = actualDate.getTime();\r\n            var closestDate_1;\r\n            this.series.each(function (series) {\r\n                if (series.baseAxis == _this) {\r\n                    var dataItem = _this.getSeriesDataItem(series, position, true);\r\n                    if (dataItem) {\r\n                        var date = void 0;\r\n                        if (series.xAxis == _this) {\r\n                            date = dataItem.dateX;\r\n                        }\r\n                        if (series.yAxis == _this) {\r\n                            date = dataItem.dateY;\r\n                        }\r\n                        if (!closestDate_1) {\r\n                            closestDate_1 = date;\r\n                        }\r\n                        else {\r\n                            if (Math.abs(closestDate_1.getTime() - actualTime_1) > Math.abs(date.getTime() - actualTime_1)) {\r\n                                closestDate_1 = date;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (closestDate_1) {\r\n                var closestTime_1 = closestDate_1.getTime();\r\n                closestDate_1 = $time.round(new Date(closestTime_1), this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc);\r\n                closestTime_1 = closestDate_1.getTime();\r\n                var tooltipLocation = this.renderer.tooltipLocation;\r\n                if (tooltipLocation == 0) {\r\n                    tooltipLocation = 0.0001;\r\n                }\r\n                closestDate_1 = new Date(closestDate_1.getTime() + this.baseDuration * tooltipLocation);\r\n                position = this.dateToPosition(closestDate_1);\r\n                this.series.each(function (series) {\r\n                    var dataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(closestTime_1 + series.currentDataSetId);\r\n                    var point = series.showTooltipAtDataItem(dataItem);\r\n                    if (point) {\r\n                        _this.chart._seriesPoints.push({ series: series, point: point });\r\n                    }\r\n                    else {\r\n                        // check, otherwise column tooltip will be hidden\r\n                        if (series.tooltipText || series.tooltipHTML) {\r\n                            series.hideTooltip();\r\n                        }\r\n                    }\r\n                });\r\n                //this.chart.sortSeriesTooltips(seriesPoints);\r\n            }\r\n        }\r\n        _super.prototype.showTooltipAtPosition.call(this, position, true);\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"snapTooltip\", {\r\n        /**\r\n         * @return Should snap?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapTooltip\");\r\n        },\r\n        /**\r\n         * Should the nearest tooltip be shown if no data item is found on the\r\n         * current cursor position.\r\n         *\r\n         * @default true\r\n         * @param value  Should snap?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"snapTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"groupData\", {\r\n        /**\r\n         * @return Group data points?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"groupData\");\r\n        },\r\n        /**\r\n         * Indicates if data should be aggregated to composide data items if there\r\n         * are more data items in selected range than `groupCount`.\r\n         *\r\n         * Grouping will occur automatically, based on current selection range, and\r\n         * will change dynamically when user zooms in/out the chart.\r\n         *\r\n         * NOTE: This works only if [[DateAxis]] is base axis of an [[XYSeries]].\r\n         *\r\n         * The related [[XYSeries]] also needs to be set up to take advantage of, by\r\n         * setting its [`groupFields`](https://www.amcharts.com/docs/v4/reference/xyseries/#groupFields_property).\r\n         *\r\n         * The group intervals to aggregate data to is defined by `groupIntervals`\r\n         * property.\r\n         *\r\n         * ```TypeScript\r\n         * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * let series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JavaScript\r\n         * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * var series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     \"groupData\": true\r\n         *   }],\r\n         *   \"yAxes\": [{\r\n         *     \"type\": \"ValueAxis\"\r\n         *   }],\r\n         *   \"series\": [{\r\n         *     \"type\": \"LineSeries\",\r\n         *     \"dataFields\": {\r\n         *       \"dateX\": \"date\",\r\n         *       \"valueY\": \"value\"\r\n         *     },\r\n         *     \"groupFields\": {\r\n         *       \"valueY\": \"average\"\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @default false\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n         * @since 4.7.0\r\n         * @param  value  Group data points?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"groupData\", value)) {\r\n                this.series.each(function (series) {\r\n                    series.setDataSet(\"\");\r\n                });\r\n                this._currentDataSetId = \"\";\r\n                this._groupInterval = undefined;\r\n                this.invalidate();\r\n                this.invalidateSeries();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"groupCount\", {\r\n        /**\r\n         * @return Number of data items\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"groupCount\");\r\n        },\r\n        /**\r\n         * Indicates threshold of data items in selected range at which to start\r\n         * aggregating data items if `groupData = true`.\r\n         *\r\n         * @default 200\r\n         * @since 4.7.0\r\n         * @param  value  Number of data items\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"groupCount\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxis.prototype, \"gridInterval\", {\r\n        /**\r\n         * Current grid interval.\r\n         *\r\n         * @return Grid interval\r\n         */\r\n        get: function () {\r\n            return this._gridInterval;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateAxis.prototype.makeGap = function (dataItem, previous) {\r\n        var series = dataItem.component;\r\n        if (dataItem && previous) {\r\n            if (!series.connect && $type.isNumber(series.autoGapCount)) {\r\n                if (series.baseAxis == this) {\r\n                    var date = dataItem.dates[\"date\" + this.axisLetter];\r\n                    var prevDate = previous.dates[\"date\" + this.axisLetter];\r\n                    if (date && prevDate) {\r\n                        var time = date.getTime();\r\n                        var prevTime = prevDate.getTime();\r\n                        if (time - prevTime > series.autoGapCount * this.baseDuration) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(DateAxis.prototype, \"baseValue\", {\r\n        /**\r\n         * @return base value\r\n         */\r\n        get: function () {\r\n            return this.min;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateAxis;\r\n}(ValueAxis));\r\nexport { DateAxis };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateAxis\"] = DateAxis;\r\nregistry.registeredClasses[\"DateAxisDataItem\"] = DateAxisDataItem;\r\n//# sourceMappingURL=DateAxis.js.map","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A renderer for horizontal axis.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nvar AxisRendererX = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisRendererX, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererX() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisRendererX\";\r\n        _this.minGridDistance = 120;\r\n        _this.opposite = false;\r\n        _this.rotation = 0;\r\n        _this.width = percent(100);\r\n        _this.labels.template.horizontalCenter = \"middle\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n    * @ignore\r\n    */\r\n    AxisRendererX.prototype.setAxis = function (axis) {\r\n        _super.prototype.setAxis.call(this, axis);\r\n        axis.layout = \"vertical\";\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisRendererX.prototype.updateGridContainer = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var gridContainer = this.gridContainer;\r\n            gridContainer.x = axis.pixelX;\r\n            gridContainer.width = axis.axisLength;\r\n        }\r\n    };\r\n    /**\r\n     * Called when rendered is attached to an Axis, as well as a property of\r\n     * Axis that might affect the appearance is updated.\r\n     *\r\n     * E.g. `axis.opposite`, `axis.inside`, etc.\r\n     *\r\n     * This method is called **before** draw, so that any related setting\r\n     * changed in this method can be changed.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererX.prototype.processRenderer = function () {\r\n        _super.prototype.processRenderer.call(this);\r\n        // can not do this in init, as axis is set later\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            if (!(axis.width instanceof Percent)) {\r\n                axis.width = percent(100);\r\n            }\r\n            // @todo Is thi sneeded?\r\n            $utils.used(this.line);\r\n            var title = axis.title;\r\n            title.rotation = 0;\r\n            title.align = \"center\";\r\n            if (this.opposite) {\r\n                this.line.toFront();\r\n                title.toBack();\r\n            }\r\n            else {\r\n                title.toFront();\r\n                this.toBack();\r\n                this.line.toBack();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates some of the Axis tooltip's visual properties, related to\r\n     * rendering of the Axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererX.prototype.updateTooltip = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var bigNum = 1000;\r\n            var bbx = this.line.pixelX;\r\n            var bby = this.line.pixelY;\r\n            var bbw = this.axisLength;\r\n            var bbh = bigNum;\r\n            // top\r\n            if (this.opposite) {\r\n                if (!this.inside) {\r\n                    bby = -bigNum;\r\n                    bbh = bigNum;\r\n                }\r\n            }\r\n            // bottom\r\n            else {\r\n                if (this.inside) {\r\n                    bby = -bigNum;\r\n                    bbh = bigNum;\r\n                }\r\n            }\r\n            this.axis.updateTooltip(\"vertical\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n        }\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRendererX.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        if (!$type.hasValue(location)) {\r\n            location = label.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        label.isMeasured = !label.inside;\r\n        var deltaY = 0;\r\n        var verticalCenter;\r\n        var maxHeight = this.gridContainer.maxHeight;\r\n        if (this.opposite) {\r\n            if (label.inside) {\r\n                verticalCenter = \"top\";\r\n                if (label.valign == \"bottom\") {\r\n                    deltaY = maxHeight;\r\n                    verticalCenter = \"bottom\";\r\n                }\r\n                if (label.valign == \"middle\") {\r\n                    deltaY = maxHeight / 2;\r\n                    verticalCenter = \"middle\";\r\n                }\r\n            }\r\n            else {\r\n                verticalCenter = \"bottom\";\r\n            }\r\n            point.y = deltaY;\r\n        }\r\n        else {\r\n            if (label.inside) {\r\n                verticalCenter = \"bottom\";\r\n                if (label.valign == \"top\") {\r\n                    deltaY = -maxHeight;\r\n                    verticalCenter = \"top\";\r\n                }\r\n                if (label.valign == \"middle\") {\r\n                    deltaY = -maxHeight / 2;\r\n                    verticalCenter = \"middle\";\r\n                }\r\n            }\r\n            else {\r\n                verticalCenter = \"top\";\r\n            }\r\n            point.y += deltaY;\r\n        }\r\n        if (label.rotation == 0) {\r\n            // Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n            label.verticalCenter = verticalCenter;\r\n        }\r\n        this.positionItem(label, point);\r\n        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n    };\r\n    Object.defineProperty(AxisRendererX.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            var axis = this.axis;\r\n            return (axis.measuredWidth - axis.pixelPaddingRight - axis.pixelPaddingLeft) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @param position2  Position (0-1) Position on the second axis\r\n     * @return Point\r\n     */\r\n    AxisRendererX.prototype.positionToPoint = function (position, position2) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRendererX.prototype.pointToPosition = function (point) {\r\n        return this.coordinateToPosition(point.x, point.y);\r\n    };\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRendererX.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        var x1 = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n        var x2 = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n        var w = Math.abs(x2 - x1);\r\n        var h = this.getHeight();\r\n        var x = Math.min(x1, x2);\r\n        var y = 0;\r\n        return $path.rectToPath({\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        }, true);\r\n    };\r\n    /**\r\n     * Updates and positions an axis break element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Break element\r\n     */\r\n    AxisRendererX.prototype.updateBreakElement = function (axisBreak) {\r\n        _super.prototype.updateBreakElement.call(this, axisBreak);\r\n        var startLine = axisBreak.startLine;\r\n        var endLine = axisBreak.endLine;\r\n        var fillShape = axisBreak.fillShape;\r\n        var startPoint = axisBreak.startPoint;\r\n        var endPoint = axisBreak.endPoint;\r\n        var y1 = axisBreak.pixelMarginLeft;\r\n        var y2 = this.getHeight() - axisBreak.pixelMarginTop - axisBreak.pixelMarginBottom;\r\n        startPoint.x = $math.fitToRange(startPoint.x, -1, this.axisLength + 1);\r\n        endPoint.x = $math.fitToRange(endPoint.x, -1, this.axisLength + 1);\r\n        if (startPoint.x == endPoint.x && (startPoint.x < 0 || startPoint.x > this.axisLength)) {\r\n            axisBreak.fillShape.__disabled = true;\r\n        }\r\n        else {\r\n            axisBreak.fillShape.__disabled = false;\r\n        }\r\n        startLine.y = y1;\r\n        startLine.width = 0;\r\n        startLine.height = y2;\r\n        endLine.y = y1;\r\n        endLine.width = 0;\r\n        endLine.height = y2;\r\n        fillShape.height = y2;\r\n        fillShape.width = Math.abs(endPoint.x - startPoint.x);\r\n        fillShape.y = y1;\r\n        fillShape.x = startPoint.x;\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererX.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        //point.x = $utils.spritePointToSprite({x:point.x, y:0}, this, this.gridContainer).x;\r\n        grid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.getHeight() });\r\n        this.positionItem(grid, point);\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick         Tick element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererX.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        position = position + (endPosition - position) * tick.location;\r\n        var point = this.positionToPoint(position);\r\n        var tickLength = tick.length;\r\n        point.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n        if (this.opposite) {\r\n            tickLength *= (tick.inside ? 1 : -1);\r\n        }\r\n        else {\r\n            tickLength *= (tick.inside ? -1 : 1);\r\n        }\r\n        tick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: tickLength });\r\n        this.positionItem(tick, point);\r\n        this.toggleVisibility(tick, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererX.prototype.updateAxisLine = function () {\r\n        this.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.axisLength, y: 0 });\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererX.prototype.updateBaseGridElement = function () {\r\n        _super.prototype.updateBaseGridElement.call(this);\r\n        var axis = this.axis;\r\n        var h = this.getHeight();\r\n        var w = this.axisLength;\r\n        var baseGrid = this.baseGrid;\r\n        var x = axis.basePoint.x;\r\n        if (x < -0.2 || x > w + 0.2) {\r\n            baseGrid.hide(0);\r\n        }\r\n        else {\r\n            var y = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).y;\r\n            baseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n            baseGrid.moveTo({ x: x, y: y });\r\n            baseGrid.show(0);\r\n        }\r\n    };\r\n    /**\r\n     * Creates visual elements for and axis break.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Axis break\r\n     */\r\n    AxisRendererX.prototype.createBreakSprites = function (axisBreak) {\r\n        axisBreak.startLine = new WavedLine();\r\n        axisBreak.endLine = new WavedLine();\r\n        var wavedRectangle = new WavedRectangle();\r\n        wavedRectangle.setWavedSides(false, true, false, true);\r\n        axisBreak.fillShape = wavedRectangle;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisRendererX.prototype.toAxisPosition = function (value) {\r\n        var inversedPosition = value;\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var relativePositionSprite = axis.relativePositionSprite;\r\n            var x = axis.pixelX;\r\n            if (relativePositionSprite) {\r\n                x = $utils.spritePointToSprite({ x: this.pixelX, y: 0 }, this.parent, relativePositionSprite).x;\r\n            }\r\n            else {\r\n                relativePositionSprite = axis.parent;\r\n            }\r\n            if (relativePositionSprite) {\r\n                var relativeX = x / relativePositionSprite.innerWidth;\r\n                var relativeWidth = axis.axisLength / relativePositionSprite.innerWidth;\r\n                return (inversedPosition - relativeX) / relativeWidth;\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Updates and positions axis bullets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererX.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        var location = 0.5;\r\n        if (bullet instanceof AxisBullet) {\r\n            location = bullet.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        point.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n        this.positionItem(bullet, point);\r\n        this.toggleVisibility(bullet, position, 0, 1);\r\n    };\r\n    return AxisRendererX;\r\n}(AxisRenderer));\r\nexport { AxisRendererX };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX\"] = AxisRendererX;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof AxisRendererX) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.inside = true;\r\n            state.properties.maxLabelPosition = 0.9;\r\n            state.properties.minLabelPosition = 0.1;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof AxisRendererX) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\r\nvar CategoryAxisBreak = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CategoryAxisBreak, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CategoryAxisBreak() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CategoryAxisBreak\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"startPosition\", {\r\n        /**\r\n         * Pixel position of the break's start.\r\n         *\r\n         * @return Position (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            if (this.axis) {\r\n                return this.axis.indexToPosition(this.adjustedStartValue);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"endPosition\", {\r\n        /**\r\n         * Pixel position of the break's end.\r\n         *\r\n         * @return Position (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            if (this.axis) {\r\n                return this.axis.indexToPosition(this.adjustedEndValue);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"startCategory\", {\r\n        /**\r\n         * @return Start category\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startCategory\");\r\n        },\r\n        /**\r\n         * A category break starts on.\r\n         *\r\n         * @param value Start category\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startCategory\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"endCategory\", {\r\n        /**\r\n         * @return End category\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endCategory\");\r\n        },\r\n        /**\r\n         * A category break ends on.\r\n         *\r\n         * @param value  End category\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endCategory\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"startValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var category = this.getPropertyValue(\"startCategory\");\r\n            if (category) {\r\n                return this.axis.categoryToIndex(category);\r\n            }\r\n            else {\r\n                return this.getPropertyValue(\"startValue\");\r\n            }\r\n        },\r\n        /**\r\n         * An index of start category.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startValue\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisBreak.prototype, \"endValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var category = this.getPropertyValue(\"endCategory\");\r\n            if (category) {\r\n                return this.axis.categoryToIndex(category);\r\n            }\r\n            else {\r\n                return this.getPropertyValue(\"endValue\");\r\n            }\r\n        },\r\n        /**\r\n         * An index of end category or a end value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endValue\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CategoryAxisBreak;\r\n}(AxisBreak));\r\nexport { CategoryAxisBreak };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;\r\n//# sourceMappingURL=CategoryAxisBreak.js.map","/**\r\n * Category axis module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisRendererX } from \"./AxisRendererX\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { CategoryAxisBreak } from \"./CategoryAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Adapter } from \"../../core/utils/Adapter\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[CategoryAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar CategoryAxisDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CategoryAxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CategoryAxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.seriesDataItems = {};\r\n        _this.className = \"CategoryAxisDataItem\";\r\n        _this.text = \"{category}\";\r\n        _this.locations.category = 0;\r\n        _this.locations.endCategory = 1;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CategoryAxisDataItem.prototype, \"adapter\", {\r\n        /**\r\n         * Holds Adapter.\r\n         */\r\n        get: function () {\r\n            if (!this._adapterO) {\r\n                this._adapterO = new Adapter(this);\r\n            }\r\n            return this._adapterO;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisDataItem.prototype, \"category\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            if (this._adapterO) {\r\n                if (this._adapterO.isEnabled(\"category\")) {\r\n                    return this._adapterO.apply(\"category\", this.properties.category);\r\n                }\r\n            }\r\n            return this.properties.category;\r\n        },\r\n        /**\r\n         * Category.\r\n         *\r\n         * @param value  Category\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"category\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoryAxisDataItem.prototype, \"endCategory\", {\r\n        /**\r\n         * @return End category\r\n         */\r\n        get: function () {\r\n            return this.properties.endCategory;\r\n        },\r\n        /**\r\n         * End category.\r\n         *\r\n         * Used for items that span several categories, like [[CategoryAxisBreak]].\r\n         *\r\n         * @param value  End category\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"endCategory\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CategoryAxisDataItem;\r\n}(AxisDataItem));\r\nexport { CategoryAxisDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to create a category-based axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Clients\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Clients\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"CategoryAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Clients\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link ICategoryAxisEvents} for a list of available Events\r\n * @see {@link ICategoryAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar CategoryAxis = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CategoryAxis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CategoryAxis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A collection that holds Axis' data items sorted by each category.\r\n         */\r\n        _this.dataItemsByCategory = new Dictionary();\r\n        _this.className = \"CategoryAxis\";\r\n        // Set field name\r\n        _this.axisFieldName = \"category\";\r\n        _this._lastDataItem = _this.createDataItem();\r\n        _this._lastDataItem.component = _this;\r\n        _this._disposers.push(_this._lastDataItem);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    CategoryAxis.prototype.createDataItem = function () {\r\n        return new CategoryAxisDataItem();\r\n    };\r\n    /**\r\n     * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n     *\r\n     * @return Axis break\r\n     */\r\n    CategoryAxis.prototype.createAxisBreak = function () {\r\n        return new CategoryAxisBreak();\r\n    };\r\n    /**\r\n     * Processes a related series' data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    CategoryAxis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {\r\n        _super.prototype.processSeriesDataItem.call(this, dataItem, axisLetter);\r\n        var category = dataItem[\"category\" + this.axisLetter];\r\n        if ($type.hasValue(category)) {\r\n            var categoryAxisDataItem = this.dataItemsByCategory.getKey(category);\r\n            if (categoryAxisDataItem) {\r\n                var seriesId = dataItem.component.uid;\r\n                var seriesDataItems = categoryAxisDataItem.seriesDataItems[seriesId];\r\n                if (!seriesDataItems) {\r\n                    seriesDataItems = [];\r\n                    categoryAxisDataItem.seriesDataItems[seriesId] = seriesDataItems;\r\n                }\r\n                seriesDataItems.push(dataItem);\r\n            }\r\n        }\r\n        else {\r\n            dataItem.component.dataItems.remove(dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Validates the data range.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    CategoryAxis.prototype.validateDataRange = function () {\r\n        var _this = this;\r\n        _super.prototype.validateDataRange.call(this);\r\n        $iter.each(this._series.iterator(), function (series) {\r\n            if ((series.xAxis instanceof CategoryAxis) && (series.yAxis instanceof CategoryAxis)) {\r\n                series.invalidateDataRange();\r\n            }\r\n            else {\r\n                var startIndex = _this.positionToIndex(_this.start);\r\n                var endIndex = _this.positionToIndex(_this.end);\r\n                if (endIndex >= _this.dataItems.length) {\r\n                    endIndex--;\r\n                }\r\n                var seriesId = series.uid;\r\n                var minIndex = void 0;\r\n                var maxIndex = void 0;\r\n                for (var i = startIndex; i <= endIndex; i++) {\r\n                    var axisDataItem = _this.dataItems.getIndex(i);\r\n                    if (axisDataItem) {\r\n                        var seriesDataItems = axisDataItem.seriesDataItems[seriesId];\r\n                        if (seriesDataItems) {\r\n                            for (var i_1 = 0; i_1 < seriesDataItems.length; i_1++) {\r\n                                var seriesDataItem = seriesDataItems[i_1];\r\n                                if (seriesDataItem) {\r\n                                    var index = seriesDataItem.index;\r\n                                    if (!$type.isNumber(minIndex) || index < minIndex) {\r\n                                        minIndex = index;\r\n                                    }\r\n                                    if (!$type.isNumber(maxIndex) || index > maxIndex) {\r\n                                        maxIndex = index;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if ($type.isNumber(minIndex)) {\r\n                    series.startIndex = minIndex;\r\n                }\r\n                else {\r\n                    series.start = _this.start;\r\n                }\r\n                if ($type.isNumber(maxIndex)) {\r\n                    series.endIndex = maxIndex + 1;\r\n                }\r\n                else {\r\n                    series.end = _this.end;\r\n                }\r\n                // range might not change, but axis breaks might.\r\n                if (_this._axisBreaks && _this._axisBreaks.length > 0) {\r\n                    series.invalidateDataRange();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Validates the whole axis. Causes it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    CategoryAxis.prototype.validate = function () {\r\n        var _this = this;\r\n        _super.prototype.validate.call(this);\r\n        var dataCount = this.dataItems.length;\r\n        var startIndex = $math.fitToRange(Math.floor(this.start * dataCount - 1), 0, dataCount);\r\n        var endIndex = $math.fitToRange(Math.ceil(this.end * dataCount), 0, dataCount);\r\n        if (this.renderer.invalid) {\r\n            this.renderer.validate();\r\n        }\r\n        // find frequency at which we'll show items\r\n        var maxCount = this.renderer.axisLength / this.renderer.minGridDistance;\r\n        var frequency = Math.min(this.dataItems.length, Math.ceil((endIndex - startIndex) / maxCount));\r\n        this._startIndex = Math.floor(startIndex / frequency) * frequency;\r\n        this._endIndex = Math.ceil(this.end * dataCount);\r\n        this.fixAxisBreaks();\r\n        if (this._startIndex == this._endIndex) {\r\n            this._endIndex++;\r\n        }\r\n        this._frequency = frequency;\r\n        if (this.axisLength <= 0) {\r\n            return;\r\n        }\r\n        this.maxZoomFactor = this.dataItems.length;\r\n        if (this.dataItems.length <= 0) {\r\n            this.maxZoomFactor = 1;\r\n        }\r\n        this.resetIterators();\r\n        // it's important to use protected variables here, as getters will return 0 - length\r\n        // TODO use iterator instead\r\n        // @ todo: not solved cat axis item fading\r\n        startIndex = $math.max(0, this._startIndex - this._frequency);\r\n        endIndex = $math.min(this.dataItems.length, this._endIndex + this._frequency);\r\n        var itemIndex = 0;\r\n        for (var i = 0; i < startIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            dataItem.__disabled = true;\r\n        }\r\n        for (var i = endIndex, len = this.dataItems.length; i < len; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            dataItem.__disabled = true;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n            if (i < this.dataItems.length) {\r\n                var dataItem = this.dataItems.getIndex(i);\r\n                if (i / this._frequency == Math.round(i / this._frequency)) {\r\n                    var axisBreak = this.isInBreak(i);\r\n                    if (!axisBreak) {\r\n                        this.appendDataItem(dataItem);\r\n                        this.validateDataElement(dataItem, itemIndex);\r\n                    }\r\n                    itemIndex++;\r\n                }\r\n                else {\r\n                    //previously we disabled all before, but this is better for cpu\r\n                    //this.validateDataElement(dataItem, itemIndex); // helps to solve shrinking // not good - creates all items\r\n                    dataItem.__disabled = true;\r\n                }\r\n            }\r\n        }\r\n        this.appendDataItem(this._lastDataItem);\r\n        this.validateDataElement(this._lastDataItem, itemIndex + 1, this.dataItems.length);\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            axisBreaks.each(function (axisBreak) {\r\n                var adjustedStartValue = axisBreak.adjustedStartValue;\r\n                var adjustedEndValue = axisBreak.adjustedEndValue;\r\n                if ($math.intersect({ start: adjustedStartValue, end: adjustedEndValue }, { start: _this._startIndex, end: _this._endIndex })) {\r\n                    var frequency_1 = $math.fitToRange(Math.ceil(_this._frequency / axisBreak.breakSize), 1, adjustedEndValue - adjustedStartValue);\r\n                    var itemIndex_1 = 0;\r\n                    // TODO use iterator instead\r\n                    for (var b = adjustedStartValue; b <= adjustedEndValue; b = b + frequency_1) {\r\n                        var dataItem = _this.dataItems.getIndex(b);\r\n                        _this.appendDataItem(dataItem);\r\n                        _this.validateDataElement(dataItem, itemIndex_1);\r\n                        itemIndex_1++;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        this.validateBreaks();\r\n        this.validateAxisRanges();\r\n        this.ghostLabel.invalidate(); // solves font issue\r\n        this.renderer.invalidateLayout();\r\n    };\r\n    /**\r\n     * [validateDataElement description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem   [description]\r\n     * @param itemIndex  [description]\r\n     */\r\n    CategoryAxis.prototype.validateDataElement = function (dataItem, itemIndex, index) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        dataItem.itemIndex = this._axisItemCount;\r\n        this._axisItemCount++;\r\n        //dataItem.__disabled = false;\r\n        var renderer = this.renderer;\r\n        if (!$type.isNumber(index)) {\r\n            index = this.categoryToIndex(dataItem.category);\r\n        }\r\n        var endIndex = this.categoryToIndex(dataItem.endCategory);\r\n        if (!$type.isNumber(endIndex)) {\r\n            endIndex = index;\r\n        }\r\n        var position = this.indexToPosition(index, dataItem.locations.category);\r\n        var endPosition = this.indexToPosition(endIndex, dataItem.locations.endCategory);\r\n        dataItem.position = position;\r\n        var fillEndIndex;\r\n        var fillPosition;\r\n        var fillEndPosition;\r\n        if (dataItem.isRange) {\r\n            fillEndIndex = endIndex;\r\n            fillPosition = this.indexToPosition(index, dataItem.locations.category);\r\n            fillEndPosition = this.indexToPosition(fillEndIndex, dataItem.locations.endCategory);\r\n        }\r\n        dataItem.point = renderer.positionToPoint(position);\r\n        var tick = dataItem.tick;\r\n        if (tick && !tick.disabled) {\r\n            renderer.updateTickElement(tick, position, endPosition);\r\n        }\r\n        var grid = dataItem.grid;\r\n        if (grid && !grid.disabled) {\r\n            renderer.updateGridElement(grid, position, endPosition);\r\n        }\r\n        var label = dataItem.label;\r\n        if (label && !label.disabled) {\r\n            // theorethically this might result problems if category text changes, the range text won't change. But otherwise range.label.text = \"custom text\" wont' work, which is not intuitive.\r\n            if (!dataItem.isRange || label.text == undefined) {\r\n                dataItem.text = dataItem.text;\r\n            }\r\n            renderer.updateLabelElement(label, position, endPosition);\r\n            if ((renderer instanceof AxisRendererY && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (renderer instanceof AxisRendererX && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n                if (dataItem.label.html) {\r\n                    this.ghostLabel.html = dataItem.label.currentText;\r\n                }\r\n                else {\r\n                    this.ghostLabel.text = dataItem.label.currentText;\r\n                }\r\n            }\r\n        }\r\n        var fill = dataItem.axisFill;\r\n        if (fill && !fill.disabled) {\r\n            if (!dataItem.isRange) {\r\n                fillEndIndex = index + this._frequency;\r\n                fillPosition = this.indexToPosition(index, fill.location);\r\n                fillEndPosition = this.indexToPosition(fillEndIndex, fill.location);\r\n            }\r\n            renderer.updateFillElement(fill, fillPosition, fillEndPosition);\r\n            if (!dataItem.isRange) {\r\n                this.fillRule(dataItem, itemIndex);\r\n            }\r\n        }\r\n        if (dataItem.bullet) {\r\n            renderer.updateBullet(dataItem.bullet, position, endPosition);\r\n        }\r\n        var mask = dataItem.mask;\r\n        if (mask) {\r\n            renderer.updateFillElement(mask, fillPosition, fillEndPosition);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    CategoryAxis.prototype.disposeData = function () {\r\n        this.dataItemsByCategory.clear();\r\n        _super.prototype.disposeData.call(this);\r\n    };\r\n    /**\r\n     * Processes the axis data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem     Data item\r\n     * @param dataContext  The raw data that corresponds to this data item\r\n     */\r\n    CategoryAxis.prototype.processDataItem = function (dataItem, dataContext) {\r\n        if (dataItem) {\r\n            // creat a collection for fast access\r\n            _super.prototype.processDataItem.call(this, dataItem, dataContext);\r\n            // check if such category already exists\r\n            //let existingDataItem: CategoryAxisDataItem = this.dataItemsByCategory.getKey(dataItem.category);\r\n            //if (existingDataItem && existingDataItem != dataItem) {\r\n            //\tthis.dataItems.remove(existingDataItem);\r\n            //}\r\n            if ($type.hasValue(dataItem.category)) {\r\n                this.dataItemsByCategory.setKey(dataItem.category, dataItem);\r\n            }\r\n        }\r\n    };\r\n    CategoryAxis.prototype.getDataItem = function (dataContext) {\r\n        var category = (dataContext[this.dataFields.category]);\r\n        if ($type.hasValue(category)) {\r\n            var dataItem = this.dataItemsByCategory.getKey(category);\r\n            if (dataItem) {\r\n                return dataItem;\r\n            }\r\n            else {\r\n                return this.dataItems.create();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Converts a category index to an actual screen coordinate on the axis.\r\n     *\r\n     * `location` identifies relative location within category. 0 - beginning,\r\n     * 0.5 - middle, 1 - end, and anything inbetween.\r\n     *\r\n     * @param index     Index\r\n     * @param location  Location (0-1)\r\n     * @return Position (px)\r\n     */\r\n    CategoryAxis.prototype.indexToPosition = function (index, location) {\r\n        if (!$type.isNumber(location)) {\r\n            location = 0.5;\r\n        }\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var difference = this.adjustDifference(startIndex, endIndex);\r\n        var startLocation = this.startLocation;\r\n        var endLocation = this.endLocation;\r\n        difference -= startLocation;\r\n        difference -= (1 - endLocation);\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            $iter.eachContinue(axisBreaks.iterator(), function (axisBreak) {\r\n                var breakStartIndex = axisBreak.adjustedStartValue;\r\n                var breakEndIndex = axisBreak.adjustedEndValue;\r\n                if (index < startIndex) {\r\n                    return false;\r\n                }\r\n                if ($math.intersect({ start: breakStartIndex, end: breakEndIndex }, { start: startIndex, end: endIndex })) {\r\n                    breakStartIndex = Math.max(startIndex, breakStartIndex);\r\n                    breakEndIndex = Math.min(endIndex, breakEndIndex);\r\n                    var breakSize = axisBreak.breakSize;\r\n                    // value to the right of break end\r\n                    if (index > breakEndIndex) {\r\n                        startIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n                    }\r\n                    // value to the left of break start\r\n                    else if (index < breakStartIndex) {\r\n                    }\r\n                    // value within break\r\n                    else {\r\n                        index = breakStartIndex + (index - breakStartIndex) * breakSize;\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n        return $math.round((index + location - startLocation - startIndex) / difference, 5);\r\n    };\r\n    /**\r\n     * Converts a string category name to relative position on axis.\r\n     *\r\n     * `location` identifies relative location within category. 0 - beginning,\r\n     * 0.5 - middle, 1 - end, and anything inbetween.\r\n     *\r\n     * @param category  Category name\r\n     * @param location  Location (0-1)\r\n     * @return Position\r\n     */\r\n    CategoryAxis.prototype.categoryToPosition = function (category, location) {\r\n        var index = this.categoryToIndex(category);\r\n        return this.indexToPosition(index, location);\r\n    };\r\n    /**\r\n     * Converts a string category name to a orientation point (x, y, angle) on axis\r\n     *\r\n     * `location` identifies relative location within category. 0 - beginning,\r\n     * 0.5 - middle, 1 - end, and anything inbetween.\r\n     * @param category  Category name\r\n     * @param location  Location (0-1)\r\n     * @return Orientation point\r\n     */\r\n    CategoryAxis.prototype.categoryToPoint = function (category, location) {\r\n        var position = this.categoryToPosition(category, location);\r\n        var point = this.renderer.positionToPoint(position);\r\n        var angle = this.renderer.positionToAngle(position);\r\n        return { x: point.x, y: point.y, angle: angle };\r\n    };\r\n    /**\r\n     * Converts a string category name to a orientation point (x, y, angle) on axis\r\n     *\r\n     * `location` identifies relative location within category. 0 - beginning,\r\n     * 0.5 - middle, 1 - end, and anything inbetween.\r\n     * @param category  Category name\r\n     * @param location  Location (0-1)\r\n     * @return Orientation point\r\n     */\r\n    CategoryAxis.prototype.anyToPoint = function (category, location) {\r\n        return this.categoryToPoint(category, location);\r\n    };\r\n    /**\r\n     * Converts a string category name to relative position on axis.\r\n     *\r\n     * An alias to `categoryToPosition()`.\r\n     *\r\n     * @param category  Category name\r\n     * @param location  Location (0-1)\r\n     * @return Relative position\r\n     */\r\n    CategoryAxis.prototype.anyToPosition = function (category, location) {\r\n        return this.categoryToPosition(category, location);\r\n    };\r\n    /**\r\n     * Converts named category to an index of data item it corresponds to.\r\n     *\r\n     * @param category  Category\r\n     * @return Data item index\r\n     */\r\n    CategoryAxis.prototype.categoryToIndex = function (category) {\r\n        if ($type.hasValue(category)) {\r\n            var dataItem = this.dataItemsByCategory.getKey(category);\r\n            if (dataItem) {\r\n                return dataItem.index;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Zooms the axis to specific named ctaegories.\r\n     *\r\n     * @param startCategory  Start category\r\n     * @param endCategory    End category\r\n     */\r\n    CategoryAxis.prototype.zoomToCategories = function (startCategory, endCategory) {\r\n        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1);\r\n    };\r\n    /**\r\n     * [getAnyRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param start         [description]\r\n     * @param end           [description]\r\n     * @param startLocation [description]\r\n     * @param endLocation   [description]\r\n     * @return [description]\r\n     */\r\n    CategoryAxis.prototype.getAnyRangePath = function (start, end, startLocation, endLocation) {\r\n        var startPos = this.categoryToPosition(start, startLocation);\r\n        var endPos = this.categoryToPosition(end, endLocation);\r\n        return this.getPositionRangePath(startPos, endPos); // Base class (Axis) gets range shape from AxisRenderer\r\n    };\r\n    /**\r\n     * Takes an absolute position (px) within axis and adjust it to a specific\r\n     * `location` within category it corresponds to.\r\n     *\r\n     * @param position  Source position (px)\r\n     * @param location  Location within category (0-1)\r\n     * @return Adjusted position (px)\r\n     */\r\n    CategoryAxis.prototype.roundPosition = function (position, location) {\r\n        var index = this.positionToIndex(position);\r\n        return this.indexToPosition(index, location);\r\n    };\r\n    /**\r\n     * Finds and returns first series data item with specific category\r\n     * @param series    Target series\r\n     * @param category  Category\r\n     * @return XYSeriesDataItem data item\r\n     */\r\n    CategoryAxis.prototype.getFirstSeriesDataItem = function (series, category) {\r\n        for (var i = 0; i < series.dataItems.length; i++) {\r\n            var dataItem = series.dataItems.getIndex(i);\r\n            if (series.xAxis == this) {\r\n                if (dataItem.categoryX == category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n            if (series.yAxis == this) {\r\n                if (dataItem.categoryY == category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Finds and returns last series data item with specific category.\r\n     * @param series    Target series\r\n     * @param category  Category\r\n     * @return XYSeriesDataItem data item\r\n     */\r\n    CategoryAxis.prototype.getLastSeriesDataItem = function (series, category) {\r\n        for (var i = series.dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = series.dataItems.getIndex(i);\r\n            if (series.xAxis == this) {\r\n                if (dataItem.categoryX == category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n            if (series.yAxis == this) {\r\n                if (dataItem.categoryY == category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a data item from Series that corresponds to a specific absolute\r\n     * position on the Axis.\r\n     *\r\n     * @param series    Target series\r\n     * @param position  Position (px)\r\n     * @return XYSeriesDataItem data item\r\n     */\r\n    CategoryAxis.prototype.getSeriesDataItem = function (series, position, findNearest) {\r\n        var _this = this;\r\n        if ($type.isNumber(position)) {\r\n            var index_1 = this.positionToIndex(position);\r\n            if (index_1 >= this.dataItems.length) {\r\n                index_1--;\r\n            }\r\n            var dataItem = this.dataItems.getIndex(index_1);\r\n            if (dataItem) {\r\n                var category_1 = dataItem.category;\r\n                var sdi_1;\r\n                var seriesDataItem = series.dataItems.getIndex(index_1);\r\n                if (seriesDataItem) {\r\n                    if (series.xAxis == this) {\r\n                        if (seriesDataItem.categoryX == category_1) {\r\n                            return seriesDataItem;\r\n                        }\r\n                    }\r\n                    if (series.yAxis == this) {\r\n                        if (seriesDataItem.categoryY == category_1) {\r\n                            return seriesDataItem;\r\n                        }\r\n                    }\r\n                }\r\n                series.dataItems.each(function (dataItem) {\r\n                    if (series.xAxis == _this) {\r\n                        if (dataItem.categoryX == category_1) {\r\n                            if (!sdi_1) {\r\n                                sdi_1 = dataItem;\r\n                            }\r\n                            if (Math.abs(index_1 - sdi_1.index) > Math.abs(index_1 - dataItem.index)) {\r\n                                sdi_1 = dataItem;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (series.yAxis == _this) {\r\n                        if (dataItem.categoryY == category_1) {\r\n                            if (!sdi_1) {\r\n                                sdi_1 = dataItem;\r\n                            }\r\n                            if (Math.abs(index_1 - sdi_1.index) > Math.abs(index_1 - dataItem.index)) {\r\n                                sdi_1 = dataItem;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                //@todo\r\n                if (findNearest) {\r\n                }\r\n                return sdi_1;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the X coordinate for series' data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Category\r\n     * @param location  Location (0-1)\r\n     * @return X coordinate (px)\r\n     */\r\n    CategoryAxis.prototype.getX = function (dataItem, key, location, stackKey, range) {\r\n        var position = this.getPositionX(dataItem, key, location, stackKey, range);\r\n        if ($type.isNaN(position)) {\r\n            return this.basePoint.x;\r\n        }\r\n        else {\r\n            return this.renderer.positionToPoint(position).x;\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative position on axis for series' data item.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Category\r\n     * @param  location  Location (0-1)\r\n     * @return           Relative position\r\n     */\r\n    CategoryAxis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\r\n        var position;\r\n        if ($type.hasValue(key)) {\r\n            position = this.categoryToPosition(dataItem.categories[key], location);\r\n        }\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns the Y coordinate for series' data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Category\r\n     * @param location  Location (0-1)\r\n     * @return Y coordinate (px)\r\n     */\r\n    CategoryAxis.prototype.getY = function (dataItem, key, location, stackKey, range) {\r\n        var position = this.getPositionY(dataItem, key, location, stackKey, range);\r\n        if ($type.isNaN(position)) {\r\n            return this.basePoint.y;\r\n        }\r\n        else {\r\n            return this.renderer.positionToPoint(position).y;\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative position on axis for series' data item.\r\n     *\r\n     * @since 4.5.14\r\n     * @param  dataItem  Data item\r\n     * @param  key       Category\r\n     * @param  location  Location (0-1)\r\n     * @return           Relative position\r\n     */\r\n    CategoryAxis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\r\n        var position;\r\n        if ($type.hasValue(key)) {\r\n            position = this.categoryToPosition(dataItem.categories[key], location);\r\n        }\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Returns an angle for series data item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       Category\r\n     * @param location  Location (0-1)\r\n     * @param stackKey  Stack key (?)\r\n     * @param range Range to fit in\r\n     * @return Angle\r\n     */\r\n    CategoryAxis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\r\n        var position = this.categoryToPosition(dataItem.categories[key], location);\r\n        if (range) {\r\n            position = $math.fitToRange(position, range.start, range.end);\r\n        }\r\n        return this.positionToAngle(position);\r\n    };\r\n    /**\r\n     * Returns an absolute pixel coordinate of the start of the cell (category),\r\n     * that specific position value falls into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param position  Position (px)\r\n     * @return Cell start position (px)\r\n     */\r\n    CategoryAxis.prototype.getCellStartPosition = function (position) {\r\n        return this.roundPosition(position, 0);\r\n    };\r\n    /**\r\n     * Returns an absolute pixel coordinate of the end of the cell (category),\r\n     * that specific position value falls into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param position  Position (px)\r\n     * @return Cell end position (px)\r\n     */\r\n    CategoryAxis.prototype.getCellEndPosition = function (position) {\r\n        return this.roundPosition(position, 1);\r\n    };\r\n    /**\r\n     * Returns text to show in a category tooltip, based on specific position\r\n     * within axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position (px)\r\n     * @return Label (category)\r\n     */\r\n    CategoryAxis.prototype.getTooltipText = function (position) {\r\n        var dataItem = this.dataItems.getIndex(this.positionToIndex(position));\r\n        if (dataItem) {\r\n            this.tooltipDataItem = dataItem;\r\n            this.tooltip.dataItem = dataItem;\r\n            if (this.tooltipText) {\r\n                return this.tooltipText;\r\n            }\r\n            if (!this._adapterO) {\r\n                return dataItem.category;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"getTooltipText\", dataItem.category);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    CategoryAxis.prototype.positionToIndex = function (position) {\r\n        position = $math.round(position, 10);\r\n        if (position < 0) {\r\n            position = 0;\r\n        }\r\n        if (position > 1) {\r\n            position = 1;\r\n        }\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var difference = endIndex - startIndex - this.startLocation - (1 - this.endLocation);\r\n        position += 1 / difference * this.startLocation;\r\n        var index = null;\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            // in case we have some axis breaks\r\n            $iter.eachContinue(axisBreaks.iterator(), function (axisBreak) {\r\n                var breakStartPosition = axisBreak.startPosition;\r\n                var breakEndPosition = axisBreak.endPosition;\r\n                var breakStartIndex = axisBreak.adjustedStartValue;\r\n                var breakEndIndex = axisBreak.adjustedEndValue;\r\n                breakStartIndex = $math.max(breakStartIndex, startIndex);\r\n                breakEndIndex = $math.min(breakEndIndex, endIndex);\r\n                var breakSize = axisBreak.breakSize;\r\n                difference -= (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n                // position to the right of break end\r\n                if (position > breakEndPosition) {\r\n                    startIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n                }\r\n                // position to the left of break start\r\n                else if (position < breakStartPosition) {\r\n                }\r\n                // value within break\r\n                else {\r\n                    var breakPosition = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n                    index = breakStartIndex + Math.round(breakPosition * (breakEndIndex - breakStartIndex));\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n        if (!$type.isNumber(index)) {\r\n            index = Math.floor(position * difference + startIndex);\r\n        }\r\n        if (index >= this.dataItems.length) {\r\n            index = this.dataItems.length - 1;\r\n        }\r\n        // not good, when panning out of bounds, each time one less item gets selected\r\n        //if (index >= endIndex) {\r\n        //\tindex--;\r\n        //}\r\n        return index;\r\n    };\r\n    /**\r\n     * Returns category based on position.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * This is a synonim of `getPositionLabel()` implemented here for consistentcy.\r\n     *\r\n     * @since 4.3.8\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    CategoryAxis.prototype.positionToCategory = function (position) {\r\n        return this.getPositionLabel(position);\r\n    };\r\n    /**\r\n     * Returns category based on position.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    CategoryAxis.prototype.getPositionLabel = function (position) {\r\n        var dataItem = this.dataItems.getIndex(this.positionToIndex(position));\r\n        if (dataItem) {\r\n            return dataItem.category;\r\n        }\r\n    };\r\n    Object.defineProperty(CategoryAxis.prototype, \"basePoint\", {\r\n        /**\r\n         * Coordinates of the actual axis start.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Base point\r\n         */\r\n        get: function () {\r\n            // This makes base grid to be drawn at the end of the axis and adds extra\r\n            // grid which we need to nicely close the chart.\r\n            return this.renderer.positionToPoint(1);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initializes Axis' renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    CategoryAxis.prototype.initRenderer = function () {\r\n        _super.prototype.initRenderer.call(this);\r\n        var renderer = this.renderer;\r\n        renderer.baseGrid.disabled = true;\r\n    };\r\n    Object.defineProperty(CategoryAxis.prototype, \"frequency\", {\r\n        /**\r\n         * Current frequency of labels of the axis.\r\n         *\r\n         * Normally it would be 1, but when labels start to be hidden due\r\n         * to `minGridDistance` this read-only property will increase.\r\n         *\r\n         * @readonly\r\n         * @since 4.2.0\r\n         * @return Label frequency\r\n         */\r\n        get: function () {\r\n            return this._frequency;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CategoryAxis;\r\n}(Axis));\r\nexport { CategoryAxis };\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxis\"] = CategoryAxis;\r\nregistry.registeredClasses[\"CategoryAxisDataItem\"] = CategoryAxisDataItem;\r\n//# sourceMappingURL=CategoryAxis.js.map","/**\r\n * XY series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem } from \"./Series\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar XYSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"XYSeriesDataItem\";\r\n        _this.values.customValue = {};\r\n        _this.values.valueX = { stack: 0 };\r\n        _this.values.valueY = { stack: 0 };\r\n        _this.values.openValueX = {};\r\n        _this.values.openValueY = {};\r\n        _this.values.dateX = {};\r\n        _this.values.dateY = {};\r\n        _this.values.openDateX = {};\r\n        _this.values.openDateY = {};\r\n        _this.setLocation(\"dateX\", 0.5, 0);\r\n        _this.setLocation(\"dateY\", 0.5, 0);\r\n        _this.setLocation(\"categoryX\", 0.5, 0);\r\n        _this.setLocation(\"categoryY\", 0.5, 0);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"valueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueX.value;\r\n        },\r\n        /**\r\n         * Item's numeric value on X value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"customValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.customValue.value;\r\n        },\r\n        /**\r\n         * Item's custom numeric value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"customValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"valueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueY.value;\r\n        },\r\n        /**\r\n         * Item's numeric value on Y value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"dateX\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"dateX\");\r\n        },\r\n        /**\r\n         * Item's date value on X date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"dateX\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"dateY\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"dateY\");\r\n        },\r\n        /**\r\n         * Item's date value on Y date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"dateY\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"categoryX\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.categoryX;\r\n        },\r\n        /**\r\n         * Item's category on X category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"categoryX\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"categoryY\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.categoryY;\r\n        },\r\n        /**\r\n         * Item's category on Y category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"categoryY\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.openValueX.value;\r\n        },\r\n        /**\r\n         * Item's open numeric value on X value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"openValueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.openValueY.value;\r\n        },\r\n        /**\r\n         * Item's open numeric value on Y value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"openValueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openDateX\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"openDateX\");\r\n        },\r\n        /**\r\n         * Item's open date value on X date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"openDateX\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openDateY\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"openDateY\");\r\n        },\r\n        /**\r\n         * Item's open date value on Y date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"openDateY\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryX\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.openCategoryX;\r\n        },\r\n        /**\r\n         * Item's open category on X category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"openCategoryX\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryY\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.openCategoryY;\r\n        },\r\n        /**\r\n         * Item's open category on Y category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"openCategoryY\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Return smallest value out of all item's value fields.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields      Fields to check in\r\n     * @param working     Include working (temporary) values\r\n     * @param stackValue  If item is in a stack, the value item starts as\r\n     * @return Value\r\n     */\r\n    XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {\r\n        var _this = this;\r\n        //if (this.visible) {  // dumped because of non smooth zooming\r\n        var min;\r\n        if (!$type.isNumber(stackValue)) {\r\n            stackValue = 0;\r\n        }\r\n        $array.each(fields, function (field) {\r\n            var value;\r\n            if (working) {\r\n                value = _this.getWorkingValue(field);\r\n            }\r\n            else {\r\n                value = _this.getValue(field);\r\n            }\r\n            value += stackValue;\r\n            if (value < min || !$type.isNumber(min)) {\r\n                min = value;\r\n            }\r\n        });\r\n        return min;\r\n        //}\r\n    };\r\n    /**\r\n     * Return biggest value out of all item's value fields.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields      Fields to check in\r\n     * @param working     Include working (temporary) values\r\n     * @param stackValue  If item is in a stack, the value item starts as\r\n     * @return Value\r\n     */\r\n    XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {\r\n        var _this = this;\r\n        //if (this.visible) { // dumped because of non smooth zooming\r\n        var max;\r\n        if (!$type.isNumber(stackValue)) {\r\n            stackValue = 0;\r\n        }\r\n        $array.each(fields, function (field) {\r\n            var value;\r\n            if (working) {\r\n                value = _this.getWorkingValue(field);\r\n            }\r\n            else {\r\n                value = _this.getValue(field);\r\n            }\r\n            value += stackValue;\r\n            if (value > max || !$type.isNumber(max)) {\r\n                max = value;\r\n            }\r\n        });\r\n        return max;\r\n        //}\r\n    };\r\n    return XYSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { XYSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar XYSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Indicates which of the series' `dataFields` to calculate aggregate values\r\n         * for.\r\n         *\r\n         * Available data fields for all [[XYSeries]] are:\r\n         * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n         *\r\n         * [[CandlestickSeries]] adds:\r\n         * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n         *\r\n         * Available options:\r\n         * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, \"average\", `\"sum\"`.\r\n         *\r\n         * Defaults are as follows:\r\n         * * `valueX`: `\"close\"`\r\n         * * `valueY`: `\"close\"`\r\n         * * `openValueX`: `\"open\"`\r\n         * * `openValueY`: `\"open\"`\r\n         * * `lowValueX`: `\"low\"`\r\n         * * `lowValueY`: `\"low\"`\r\n         * * `highValueX`: `\"high\"`\r\n         * * `highValueY`: `\"high\"`\r\n         *\r\n         * Is required only if data being plotted on a `DateAxis` and\r\n         * its `groupData` is set to `true`.\r\n         *\r\n         * ```TypeScript\r\n         * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * let series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JavaScript\r\n         * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * var series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     \"groupData\": true\r\n         *   }],\r\n         *   \"yAxes\": [{\r\n         *     \"type\": \"ValueAxis\"\r\n         *   }],\r\n         *   \"series\": [{\r\n         *     \"type\": \"LineSeries\",\r\n         *     \"dataFields\": {\r\n         *       \"dateX\": \"date\",\r\n         *       \"valueY\": \"value\"\r\n         *     },\r\n         *     \"groupFields\": {\r\n         *       \"valueY\": \"average\"\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * The above setup will ensure, that if there are many data items within\r\n         * selected range, they will be grouped into aggregated data points, using\r\n         * average value of all the values.\r\n         *\r\n         * For example if we have 2 years worth of daily data (~700 data items), when\r\n         * fully zoomed out, the chart would show ~100 data items instead: one for\r\n         * each week in those two years.\r\n         *\r\n         * Grouping will occur automatically, based on current selection range, and\r\n         * will change dynamically when user zooms in/out the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n         * @since 4.7.0\r\n         */\r\n        _this.groupFields = {};\r\n        /**\r\n         * X axis the series is attached to.\r\n         */\r\n        _this._xAxis = new MutableValueDisposer();\r\n        /**\r\n         * Y axis the series is attached to.\r\n         */\r\n        _this._yAxis = new MutableValueDisposer();\r\n        /**\r\n         * [_xValueFields description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._xValueFields = [];\r\n        /**\r\n         * [_yValueFields description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._yValueFields = [];\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._baseInterval = {};\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.dataGrouped = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.usesShowFields = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._dataSetChanged = false;\r\n        _this.className = \"XYSeries\";\r\n        _this.isMeasured = false;\r\n        _this.groupFields.valueX = \"close\";\r\n        _this.groupFields.valueY = \"close\";\r\n        _this.groupFields.customValue = \"close\";\r\n        _this.groupFields.openValueX = \"open\";\r\n        _this.groupFields.openValueY = \"open\";\r\n        _this.cursorTooltipEnabled = true;\r\n        _this.cursorHoverEnabled = true;\r\n        _this.excludeFromTotal = false;\r\n        _this.mainContainer.mask = new Sprite();\r\n        _this.mainContainer.mask.setElement(_this.paper.add(\"path\"));\r\n        _this.stacked = false;\r\n        _this.snapTooltip = false;\r\n        _this.tooltip.pointerOrientation = \"horizontal\";\r\n        _this.hideTooltipWhileZooming = true;\r\n        _this.tooltip.events.on(\"hidden\", function () {\r\n            _this.returnBulletDefaultState();\r\n        }, undefined, false);\r\n        _this._disposers.push(_this._xAxis);\r\n        _this._disposers.push(_this._yAxis);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    XYSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"X/Y Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    XYSeries.prototype.createDataItem = function () {\r\n        return new XYSeriesDataItem();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.dataChangeUpdate = function () {\r\n        this._tmin.clear();\r\n        this._tmax.clear();\r\n        this._smin.clear();\r\n        this._smax.clear();\r\n        if (this.xAxis) {\r\n            this.xAxis.seriesDataChangeUpdate(this);\r\n        }\r\n        if (this.yAxis) {\r\n            this.yAxis.seriesDataChangeUpdate(this);\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the series' data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateData = function () {\r\n        this._baseInterval = {};\r\n        var dataFields = this.dataFields;\r\n        if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\r\n            this.usesShowFields = true;\r\n        }\r\n        else {\r\n            this.usesShowFields = false;\r\n        }\r\n        this.defineFields();\r\n        if (this.data.length > 0) {\r\n            this.dataChangeUpdate();\r\n        }\r\n        _super.prototype.validateData.call(this);\r\n        this.updateItemReaderText();\r\n        if (this.chart) {\r\n            if (!$type.hasValue(this.dataFields[this._xField]) || !$type.hasValue(this.dataFields[this._yField])) {\r\n                throw Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\r\n            }\r\n        }\r\n        this.dataGrouped = false;\r\n    };\r\n    /**\r\n     * Processes data item.\r\n     *\r\n     * @param dataItem     Data item\r\n     * @param dataContext  Raw data\r\n     * @param index        Index of the data item\r\n     */\r\n    XYSeries.prototype.processDataItem = function (dataItem, dataContext) {\r\n        try {\r\n            _super.prototype.processDataItem.call(this, dataItem, dataContext);\r\n            this.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n            this.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n            this.setInitialWorkingValues(dataItem);\r\n        }\r\n        catch (e) {\r\n            if (this._chart) {\r\n                this._chart.raiseCriticalError(e);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * When validating raw data, instead of processing data item, we update it\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item\r\n     */\r\n    XYSeries.prototype.updateDataItem = function (dataItem) {\r\n        _super.prototype.updateDataItem.call(this, dataItem);\r\n        //dataItem.events.disable();\r\n        this.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n        this.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n        //dataItem.events.enable();\t\t\r\n    };\r\n    /**\r\n     * Inits data item's working values.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @param index     Data item's index\r\n     */\r\n    XYSeries.prototype.setInitialWorkingValues = function (dataItem) {\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis) {\r\n            var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\r\n            if (dataItemsX) {\r\n                dataItemsX.clear();\r\n            }\r\n            if (xAxis instanceof CategoryAxis) {\r\n                this.clearCatAxis(xAxis);\r\n            }\r\n        }\r\n        if (yAxis) {\r\n            var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\r\n            if (dataItemsY) {\r\n                dataItemsY.clear();\r\n            }\r\n            if (yAxis instanceof CategoryAxis) {\r\n                this.clearCatAxis(yAxis);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.clearCatAxis = function (axis) {\r\n        var uid = this.uid;\r\n        axis.dataItems.each(function (dataItem) {\r\n            if (dataItem.seriesDataItems[uid]) {\r\n                dataItem.seriesDataItems[uid] = [];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Sets up which data fields to use for data access.\r\n     */\r\n    XYSeries.prototype.defineFields = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            var xAxisFieldName = xAxis.axisFieldName;\r\n            var xField = (xAxisFieldName + \"X\");\r\n            var xOpenField = (\"open\" + $utils.capitalize(xAxisFieldName) + \"X\");\r\n            var yAxisFieldName = yAxis.axisFieldName;\r\n            var yField = (yAxisFieldName + \"Y\");\r\n            var yOpenField = (\"open\" + $utils.capitalize(yAxisFieldName) + \"Y\");\r\n            this._xField = xField;\r\n            this._yField = yField;\r\n            if (this.dataFields[xOpenField]) {\r\n                this._xOpenField = xOpenField;\r\n            }\r\n            if (this.dataFields[yOpenField]) {\r\n                this._yOpenField = yOpenField;\r\n            }\r\n            if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\r\n                this._yOpenField = yField;\r\n            }\r\n            if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\r\n                this._xOpenField = xField;\r\n            }\r\n            if (this.stacked && this.baseAxis == xAxis) {\r\n                this._xOpenField = xField;\r\n            }\r\n            if (this.stacked && this.baseAxis == yAxis) {\r\n                this._yOpenField = yField;\r\n            }\r\n            if ((xAxis instanceof CategoryAxis) && (yAxis instanceof CategoryAxis)) {\r\n                if (!this._yOpenField) {\r\n                    this._yOpenField = yField;\r\n                }\r\n            }\r\n            this._xValueFields = [];\r\n            this._yValueFields = [];\r\n            this.addValueField(xAxis, this._xValueFields, this._xField);\r\n            this.addValueField(xAxis, this._xValueFields, this._xOpenField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yOpenField);\r\n        }\r\n    };\r\n    /**\r\n     * [axis description]\r\n     *\r\n     * @todo Description\r\n     * @param axis    Axis\r\n     * @param fields  Fields (?)\r\n     * @param field   Field\r\n     */\r\n    XYSeries.prototype.addValueField = function (axis, fields, field) {\r\n        if (axis instanceof ValueAxis) {\r\n            if ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\r\n                fields.push(field);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets category field from the category axis.\r\n     *\r\n     * User might set field for category axis only, but not for series. In such\r\n     * case, we take field value from axis and set it for series.\r\n     *\r\n     * @param field  Field\r\n     * @param axis   Axis\r\n     */\r\n    XYSeries.prototype.setCategoryAxisField = function (field, axis) {\r\n        if (!$type.hasValue(this.dataFields[field])) {\r\n            this.dataFields[field] = axis.dataFields.category;\r\n        }\r\n    };\r\n    /**\r\n     * Sets date field from the date axis.\r\n     *\r\n     * User might set field for category axis only, but not for series. In such\r\n     * case, we take field value from axis and set it for series.\r\n     *\r\n     * @param field  Field\r\n     * @param axis   Axis\r\n     */\r\n    XYSeries.prototype.setDateAxisField = function (field, axis) {\r\n        if (!$type.hasValue(this.dataFields[field])) {\r\n            this.dataFields[field] = axis.dataFields.date;\r\n        }\r\n    };\r\n    /**\r\n     * Performs after-draw tasks, e.g. creates masks.\r\n     */\r\n    XYSeries.prototype.afterDraw = function () {\r\n        _super.prototype.afterDraw.call(this);\r\n        this.createMask();\r\n    };\r\n    /**\r\n     * Create a mask for the series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.createMask = function () {\r\n        // this mask from which we cut out ranges. does not work well if ranges overlap.\r\n        if (this.mainContainer.mask) {\r\n            var path_1 = this.getMaskPath();\r\n            // @todo: this approach won't work well on circluar or other non x/y axes\r\n            $iter.each(this.axisRanges.iterator(), function (range) {\r\n                if (range.axisFill.fillPath) {\r\n                    range.axisFill.validate();\r\n                    path_1 += range.axisFill.fillPath;\r\n                }\r\n            });\r\n            this.mainContainer.mask.path = path_1;\r\n        }\r\n    };\r\n    /**\r\n     * Returns an SVG path to use as series mask.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    XYSeries.prototype.getMaskPath = function () {\r\n        if (this.xAxis && this.yAxis) {\r\n            return $path.rectToPath({\r\n                x: 0,\r\n                y: 0,\r\n                width: this.xAxis.axisLength,\r\n                height: this.yAxis.axisLength\r\n            });\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns axis data field to use.\r\n     *\r\n     * @param axis  Axis\r\n     * @return Field name\r\n     */\r\n    XYSeries.prototype.getAxisField = function (axis) {\r\n        if (axis == this.xAxis) {\r\n            return this.xField;\r\n        }\r\n        if (axis == this.yAxis) {\r\n            return this.yField;\r\n        }\r\n    };\r\n    /**\r\n     * Validates data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateDataItems = function () {\r\n        // this helps date axis to check which baseInterval we should use\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            xAxis.updateAxisBySeries();\r\n            yAxis.updateAxisBySeries();\r\n        }\r\n        _super.prototype.validateDataItems.call(this);\r\n        if (xAxis && yAxis) {\r\n            xAxis.postProcessSeriesDataItems();\r\n            yAxis.postProcessSeriesDataItems();\r\n        }\r\n    };\r\n    /**\r\n     * Validates data range.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateDataRange = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (xAxis.dataRangeInvalid) {\r\n                xAxis.validateDataRange();\r\n            }\r\n            if (yAxis.dataRangeInvalid) {\r\n                yAxis.validateDataRange();\r\n            }\r\n        }\r\n        _super.prototype.validateDataRange.call(this);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validate = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (xAxis.invalid) {\r\n                xAxis.validate();\r\n            }\r\n            if (yAxis.invalid) {\r\n                yAxis.validate();\r\n            }\r\n            this.y = yAxis.pixelY;\r\n            this.x = xAxis.pixelX;\r\n            this._showBullets = true;\r\n            var minBulletDistance = this.minBulletDistance;\r\n            if ($type.isNumber(minBulletDistance)) {\r\n                if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"xAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            if (this.chart) {\r\n                if (!this._xAxis.get()) {\r\n                    var axis = this.chart.xAxes.getIndex(0);\r\n                    if (!axis) {\r\n                        throw Error(\"There are no X axes on chart.\");\r\n                    }\r\n                    this.xAxis = axis;\r\n                }\r\n                return this._xAxis.get();\r\n            }\r\n        },\r\n        /**\r\n         * X axis the series is attached to.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setXAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    XYSeries.prototype.setXAxis = function (axis) {\r\n        var oldAxis = this._xAxis.get();\r\n        if (oldAxis != axis) {\r\n            if (oldAxis) {\r\n                this.dataItemsByAxis.removeKey(oldAxis.uid);\r\n                // TODO why is this here ?\r\n                this._xAxis.dispose();\r\n                // temp @todo: why it is not disposed?\r\n                oldAxis.series.removeValue(this);\r\n            }\r\n            this._xAxis.set(axis, axis.registerSeries(this));\r\n            this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\r\n            this.invalidateData();\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"yAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            if (this.chart) {\r\n                if (!this._yAxis.get()) {\r\n                    var axis = this.chart.yAxes.getIndex(0);\r\n                    if (!axis) {\r\n                        throw Error(\"There are no Y axes on chart.\");\r\n                    }\r\n                    this.yAxis = axis;\r\n                }\r\n                return this._yAxis.get();\r\n            }\r\n        },\r\n        /**\r\n         * Y axis the series is attached to.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setYAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    XYSeries.prototype.setYAxis = function (axis) {\r\n        var oldAxis = this._yAxis.get();\r\n        if (oldAxis != axis) {\r\n            if (oldAxis) {\r\n                this.dataItemsByAxis.removeKey(oldAxis.uid);\r\n                // TODO why is this here ?\r\n                this._yAxis.dispose();\r\n                // temp @todo: why it is not disposed?\r\n                oldAxis.series.removeValue(this);\r\n            }\r\n            this._yAxis.set(axis, axis.registerSeries(this));\r\n            if (axis.chart instanceof XYChart) {\r\n                axis.chart.handleYAxisSet(this);\r\n            }\r\n            this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\r\n            this.invalidateData();\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"baseAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (!this._baseAxis && xAxis && yAxis) {\r\n                if (yAxis instanceof DateAxis) {\r\n                    this._baseAxis = yAxis;\r\n                }\r\n                if (xAxis instanceof DateAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n                if (yAxis instanceof CategoryAxis) {\r\n                    this._baseAxis = yAxis;\r\n                }\r\n                if (xAxis instanceof CategoryAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n                if (!this._baseAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n            }\r\n            return this._baseAxis;\r\n        },\r\n        /**\r\n         * The main (base) axis.\r\n         *\r\n         * This is the axis that series fills will go to, or grow animations will\r\n         * happen from.\r\n         *\r\n         * @param value  Axis\r\n         */\r\n        set: function (value) {\r\n            if (this._baseAxis != value) {\r\n                this._baseAxis = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Makes the chart use particular data set.\r\n     *\r\n     * If `id` is not provided or there is no such data set, main data will be\r\n     * used.\r\n     *\r\n     * @ignore\r\n     * @since 4.7.0\r\n     * @param  id  Data set id\r\n     */\r\n    XYSeries.prototype.setDataSet = function (id) {\r\n        var changed = _super.prototype.setDataSet.call(this, id);\r\n        if (changed) {\r\n            this._dataSetChanged = true;\r\n            var dataItems = this.dataItems;\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\r\n                this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\r\n                this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\r\n                this.dispatchImmediately(\"extremeschanged\");\r\n            }\r\n            if (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\r\n                this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\r\n                this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\r\n                this.dispatchImmediately(\"extremeschanged\");\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Processes values after data items' were added.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItems  Data items\r\n     */\r\n    XYSeries.prototype.processValues = function (working) {\r\n        _super.prototype.processValues.call(this, working);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (!xAxis || !yAxis) {\r\n            return;\r\n        }\r\n        var dataItems = this.dataItems;\r\n        var minX = Infinity;\r\n        var maxX = -Infinity;\r\n        var minY = Infinity;\r\n        var maxY = -Infinity;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var workingStartIndex = startIndex;\r\n        var workingEndIndex = endIndex;\r\n        if (!working) {\r\n            startIndex = 0;\r\n            endIndex = this.dataItems.length;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n            var dataItem = dataItems.getIndex(i);\r\n            this.getStackValue(dataItem, working);\r\n            var stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n            var stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n            minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n            minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n            maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n            maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n            // if it's stacked, pay attention to stack value\r\n            if (this.stacked) {\r\n                if (this.baseAxis == xAxis) {\r\n                    if (stackY < minY) {\r\n                        minY = stackY;\r\n                    }\r\n                    if (stackY > maxY) {\r\n                        maxY = stackY;\r\n                    }\r\n                }\r\n                if (this.baseAxis == yAxis) {\r\n                    if (stackX < minX) {\r\n                        minX = stackX;\r\n                    }\r\n                    if (stackX > maxX) {\r\n                        maxX = stackX;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // this is mainly for value axis to calculate total and perecent.total of each series category\r\n        xAxis.processSeriesDataItems();\r\n        yAxis.processSeriesDataItems();\r\n        var xAxisId = xAxis.uid;\r\n        var yAxisId = yAxis.uid;\r\n        if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n            return;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n            return;\r\n        }\r\n        if (!working) {\r\n            if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\r\n                this._tmin.setKey(xAxisId, minX);\r\n                this._tmax.setKey(xAxisId, maxX);\r\n                this._tmin.setKey(yAxisId, minY);\r\n                this._tmax.setKey(yAxisId, maxY);\r\n                var stackedSeries = this.stackedSeries;\r\n                if (stackedSeries) {\r\n                    if (stackedSeries.isDisposed()) {\r\n                        this.stackedSeries = undefined;\r\n                    }\r\n                    else {\r\n                        stackedSeries.processValues(false);\r\n                    }\r\n                }\r\n                this.dispatchImmediately(\"extremeschanged\");\r\n            }\r\n        }\r\n        if (startIndex != workingStartIndex || endIndex != workingEndIndex) {\r\n            minX = Infinity;\r\n            maxX = -Infinity;\r\n            minY = Infinity;\r\n            maxY = -Infinity;\r\n            for (var i = workingStartIndex; i < workingEndIndex; i++) {\r\n                var dataItem = dataItems.getIndex(i);\r\n                this.getStackValue(dataItem, working);\r\n                var stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n                var stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n                minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n                minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n                maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n                maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n                // if it's stacked, pay attention to stack value\r\n                if (this.stacked) {\r\n                    if (this.baseAxis == xAxis) {\r\n                        if (stackY < minY) {\r\n                            minY = stackY;\r\n                        }\r\n                        if (stackY > maxY) {\r\n                            maxY = stackY;\r\n                        }\r\n                    }\r\n                    if (this.baseAxis == yAxis) {\r\n                        if (stackX < minX) {\r\n                            minX = stackX;\r\n                        }\r\n                        if (stackX > maxX) {\r\n                            maxX = stackX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n            return;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n            return;\r\n        }\r\n        if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\r\n            this._smin.setKey(xAxisId, minX);\r\n            this._smax.setKey(xAxisId, maxX);\r\n            this._smin.setKey(yAxisId, minY);\r\n            this._smax.setKey(yAxisId, maxY);\r\n            if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\r\n                /// new, helps to handle issues with change percent\r\n                var changed = false;\r\n                if (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n                    var tmin = this._tmin.getKey(yAxisId);\r\n                    if (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged) && minY < tmin)) {\r\n                        this._tmin.setKey(yAxisId, minY);\r\n                        changed = true;\r\n                    }\r\n                    var tmax = this._tmax.getKey(yAxisId);\r\n                    if (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged) && maxY > tmax)) {\r\n                        this._tmax.setKey(yAxisId, maxY);\r\n                        changed = true;\r\n                    }\r\n                }\r\n                if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\r\n                    var tmin = this._tmin.getKey(xAxisId);\r\n                    if (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged) && minX < tmin)) {\r\n                        this._tmin.setKey(xAxisId, minX);\r\n                        changed = true;\r\n                    }\r\n                    var tmax = this._tmax.getKey(xAxisId);\r\n                    if (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged) && maxX > tmax)) {\r\n                        this._tmax.setKey(xAxisId, maxX);\r\n                        changed = true;\r\n                    }\r\n                }\r\n                if (changed) {\r\n                    this.dispatchImmediately(\"extremeschanged\");\r\n                }\r\n                this.dispatchImmediately(\"selectionextremeschanged\");\r\n            }\r\n        }\r\n        if (!working && this.stacked) {\r\n            this.processValues(true);\r\n        }\r\n        this._dataSetChanged = false;\r\n    };\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     *\r\n     * @see {@link Tooltip}\r\n     */\r\n    XYSeries.prototype.hideTooltip = function () {\r\n        _super.prototype.hideTooltip.call(this);\r\n        this.returnBulletDefaultState();\r\n        this._prevTooltipDataItem = undefined;\r\n    };\r\n    /**\r\n     * Shows series tooltip at specific position.\r\n     *\r\n     * @param xPosition  X\r\n     * @param yPosition  Y\r\n     */\r\n    XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\r\n        var dataItem;\r\n        if (this.visible && !this.isHiding && !this.isShowing) {\r\n            var xAxis = this._xAxis.get();\r\n            var yAxis = this._yAxis.get();\r\n            if (xAxis == this.baseAxis) {\r\n                dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\r\n            }\r\n            if (yAxis == this.baseAxis) {\r\n                dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\r\n            }\r\n            var point = this.showTooltipAtDataItem(dataItem);\r\n            if (point) {\r\n                return point;\r\n            }\r\n            // so that if tooltip is shown on columns or bullets for it not to be hidden\r\n            if (!this.tooltipText) {\r\n                return;\r\n            }\r\n        }\r\n        this.hideTooltip();\r\n    };\r\n    XYSeries.prototype.getAdjustedXLocation = function (dataItem, field) {\r\n        return dataItem.locations[field];\r\n    };\r\n    XYSeries.prototype.getAdjustedYLocation = function (dataItem, field) {\r\n        return dataItem.locations[field];\r\n    };\r\n    /**\r\n     * Shows series tooltip at specific dataItem.\r\n     *\r\n     * @param dataItem\r\n     */\r\n    XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {\r\n        var cursor = this.chart.cursor;\r\n        if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\r\n            this.hideTooltip();\r\n            return;\r\n        }\r\n        this.returnBulletDefaultState(dataItem);\r\n        if (dataItem && dataItem.visible) {\r\n            this.updateLegendValue(dataItem);\r\n            if (this.cursorTooltipEnabled) {\r\n                this.tooltipDataItem = dataItem;\r\n                // todo: add tooltipXField and tooltipYField.\r\n                var tooltipXField = this.tooltipXField;\r\n                var tooltipYField = this.tooltipYField;\r\n                if ($type.hasValue(dataItem[tooltipXField]) && $type.hasValue(dataItem[tooltipYField])) {\r\n                    var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\r\n                    if (tooltipPoint) {\r\n                        this.tooltipX = tooltipPoint.x;\r\n                        this.tooltipY = tooltipPoint.y;\r\n                        if (this._prevTooltipDataItem != dataItem) {\r\n                            this.dispatchImmediately(\"tooltipshownat\", {\r\n                                type: \"tooltipshownat\",\r\n                                target: this,\r\n                                dataItem: dataItem\r\n                            });\r\n                            this._prevTooltipDataItem = dataItem;\r\n                        }\r\n                        if (this.cursorHoverEnabled) {\r\n                            try {\r\n                                for (var _a = tslib_1.__values(dataItem.sprites), _b = _a.next(); !_b.done; _b = _a.next()) {\r\n                                    var sprite = _b.value;\r\n                                    if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {\r\n                                    }\r\n                                    else {\r\n                                        sprite.isHover = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                            finally {\r\n                                try {\r\n                                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\r\n                                }\r\n                                finally { if (e_1) throw e_1.error; }\r\n                            }\r\n                        }\r\n                        if (this.showTooltip()) {\r\n                            return $utils.spritePointToSvg({ x: tooltipPoint.x, y: tooltipPoint.y }, this);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.updateLegendValue(dataItem, true);\r\n        }\r\n        var e_1, _c;\r\n    };\r\n    /**\r\n     * returns default state to bullets when tooltip is shown at some other data item or hidden\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.returnBulletDefaultState = function (dataItem) {\r\n        if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\r\n            try {\r\n                for (var _a = tslib_1.__values(this._prevTooltipDataItem.sprites), _b = _a.next(); !_b.done; _b = _a.next()) {\r\n                    var sprite = _b.value;\r\n                    if (!sprite.isDisposed()) {\r\n                        sprite.isHover = false;\r\n                    }\r\n                    else {\r\n                        this._prevTooltipDataItem = undefined;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        var e_2, _c;\r\n    };\r\n    XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\r\n        // use series xField/yField if bullet doesn't have fields set\r\n        var xField = bulletTemplate.xField;\r\n        if (!$type.hasValue(xField)) {\r\n            xField = this.xField;\r\n        }\r\n        var yField = bulletTemplate.yField;\r\n        if (!$type.hasValue(yField)) {\r\n            yField = this.yField;\r\n        }\r\n        if ((this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n            return false;\r\n        }\r\n        if (bulletTemplate.disabled) {\r\n            var disabledField = bulletTemplate.propertyFields.disabled;\r\n            var dataContext = dataItem.dataContext;\r\n            if (dataContext && dataContext[disabledField] === false) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    XYSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        // use series xField/yField if bullet doesn't have fields set\r\n        var xField = bullet.xField;\r\n        if (!$type.hasValue(xField)) {\r\n            xField = this.xField;\r\n        }\r\n        var yField = bullet.yField;\r\n        if (!$type.hasValue(yField)) {\r\n            yField = this.yField;\r\n        }\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if ((xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n            bullet.visible = false;\r\n        }\r\n        else {\r\n            var bulletLocationX = this.getBulletLocationX(bullet, xField);\r\n            var bulletLocationY = this.getBulletLocationY(bullet, yField);\r\n            var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\r\n            if (point) {\r\n                var xOpenField = this.xOpenField;\r\n                var yOpenField = this.yOpenField;\r\n                var positionX = void 0;\r\n                var positionY = void 0;\r\n                if (xAxis instanceof DateAxis) {\r\n                    if (!$type.isNumber(bulletLocationX)) {\r\n                        bulletLocationX = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(xField);\r\n                    if (!xOpenField) {\r\n                        if (xAxis == this.baseAxis) {\r\n                            openValue = xAxis.baseValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(xOpenField);\r\n                    }\r\n                    if (!$type.isNumber(openValue)) {\r\n                        openValue = closeValue;\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    if (openValue == closeValue) {\r\n                        var baseInterval = xAxis.baseInterval;\r\n                        var dateFormatter = xAxis.dateFormatter;\r\n                        openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc).getTime();\r\n                        closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n                    }\r\n                    var middleValue = void 0;\r\n                    if (xAxis == this.baseAxis) {\r\n                        middleValue = openValue + (closeValue - openValue) * bulletLocationX;\r\n                    }\r\n                    else {\r\n                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n                    }\r\n                    positionX = xAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (xAxis instanceof ValueAxis) {\r\n                    if (!$type.isNumber(bulletLocationX)) {\r\n                        bulletLocationX = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(xField);\r\n                    if (!xOpenField) {\r\n                        openValue = xAxis.baseValue;\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(xOpenField);\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n                    positionX = xAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (xAxis instanceof CategoryAxis) {\r\n                    var rightLocation = this.getAdjustedXLocation(dataItem, xField);\r\n                    var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField);\r\n                    positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);\r\n                    var openPositionX = void 0;\r\n                    if (xOpenField) {\r\n                        openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);\r\n                    }\r\n                    if (!$type.isNumber(openPositionX)) {\r\n                        openPositionX = 1;\r\n                    }\r\n                    positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\r\n                }\r\n                if (yAxis instanceof DateAxis) {\r\n                    if (!$type.isNumber(bulletLocationY)) {\r\n                        bulletLocationY = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(yField);\r\n                    if (!yOpenField) {\r\n                        if (yAxis == this.baseAxis) {\r\n                            openValue = yAxis.baseValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(yOpenField);\r\n                    }\r\n                    if (!$type.isNumber(openValue)) {\r\n                        openValue = closeValue;\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueY\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    if (openValue == closeValue) {\r\n                        var baseInterval = yAxis.baseInterval;\r\n                        var dateFormatter = yAxis.dateFormatter;\r\n                        openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc).getTime();\r\n                        closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n                    }\r\n                    var middleValue = void 0;\r\n                    if (yAxis == this.baseAxis) {\r\n                        middleValue = openValue + (closeValue - openValue) * bulletLocationY;\r\n                    }\r\n                    else {\r\n                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n                    }\r\n                    positionY = yAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (yAxis instanceof ValueAxis) {\r\n                    if (!$type.isNumber(bulletLocationY)) {\r\n                        bulletLocationY = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(yField);\r\n                    if (!yOpenField) {\r\n                        openValue = yAxis.baseValue;\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(yOpenField);\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueY\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n                    positionY = yAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (yAxis instanceof CategoryAxis) {\r\n                    positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);\r\n                    var topLocation = this.getAdjustedYLocation(dataItem, yField);\r\n                    var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField);\r\n                    positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);\r\n                    var openPositionY = void 0;\r\n                    if (yOpenField) {\r\n                        openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);\r\n                    }\r\n                    if (!$type.isNumber(openPositionY)) {\r\n                        openPositionY = 1;\r\n                    }\r\n                    positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\r\n                }\r\n                bullet.visible = true;\r\n                this.positionBulletReal(bullet, positionX, positionY);\r\n            }\r\n            else {\r\n                bullet.visible = false;\r\n            }\r\n        }\r\n    };\r\n    XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\r\n        bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\r\n        bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\r\n    };\r\n    /**\r\n    * returns bullet x location\r\n    * @ignore\r\n    */\r\n    XYSeries.prototype.getBulletLocationX = function (bullet, field) {\r\n        var bulletLocation = bullet.locationX;\r\n        var dataItem = bullet.dataItem;\r\n        if (!$type.isNumber(bulletLocation)) {\r\n            bulletLocation = dataItem.workingLocations[field];\r\n        }\r\n        return bulletLocation;\r\n    };\r\n    /**\r\n    * returns bullet x location\r\n    * @ignore\r\n    */\r\n    XYSeries.prototype.getBulletLocationY = function (bullet, field) {\r\n        var bulletLocation = bullet.locationY;\r\n        var dataItem = bullet.dataItem;\r\n        if (!$type.isNumber(bulletLocation)) {\r\n            bulletLocation = dataItem.workingLocations[field];\r\n        }\r\n        return bulletLocation;\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"stacked\", {\r\n        /**\r\n         * @return Can be stacked?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"stacked\");\r\n        },\r\n        /**\r\n         * Can items from this series be included into stacks?\r\n         *\r\n         * Note: proper stacking is only possible if series have the same number\r\n         * of data items. To ensure this, don't set data directly on series\r\n         * but do this on chart instead.\r\n         *\r\n         * @default false\r\n         * @param stacked  Can be stacked?\r\n         */\r\n        set: function (stacked) {\r\n            this.setPropertyValue(\"stacked\", stacked, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"snapTooltip\", {\r\n        /**\r\n         * @return Should snap?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapTooltip\");\r\n        },\r\n        /**\r\n         * Should the nearest tooltip be shown if no data item is found on the\r\n         * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n         *\r\n         * @default false\r\n         * @param value  Should snap?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"snapTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    XYSeries.prototype.show = function (duration) {\r\n        var _this = this;\r\n        var fields;\r\n        if (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\r\n            fields = this._xValueFields;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\r\n            fields = this._yValueFields;\r\n        }\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var delay = 0;\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        var anim;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation && interpolationDuration > 0) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            anim = dataItem.show(interpolationDuration, delay, fields);\r\n        });\r\n        // other data sets\r\n        this.dataSets.each(function (key, dataSet) {\r\n            if (dataSet != _this.dataItems) {\r\n                dataSet.each(function (dataItem) {\r\n                    dataItem.events.disable();\r\n                    dataItem.show(0, 0, fields);\r\n                    dataItem.events.enable();\r\n                });\r\n            }\r\n        });\r\n        if (this.mainDataSet != this.dataItems) {\r\n            this.mainDataSet.each(function (dataItem) {\r\n                dataItem.events.disable();\r\n                dataItem.show(0, 0, fields);\r\n                dataItem.events.enable();\r\n            });\r\n        }\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        if (anim && !anim.isFinished()) {\r\n            animation = anim;\r\n        }\r\n        if (this.hidden) {\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            this.hidden = false;\r\n        }\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    XYSeries.prototype.hide = function (duration) {\r\n        var _this = this;\r\n        var fields;\r\n        var value;\r\n        var xAxis = this.xAxis;\r\n        if (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\r\n            fields = this._xValueFields;\r\n            // animate to zero if 0 is within zoomMin/zoomMax\r\n            if (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {\r\n                value = xAxis.baseValue;\r\n            }\r\n            else {\r\n                value = xAxis.min;\r\n            }\r\n        }\r\n        var yAxis = this.yAxis;\r\n        if (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\r\n            fields = this._yValueFields;\r\n            // animate to zero if 0 is within zoomMin/zoomMax\r\n            if (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {\r\n                value = yAxis.baseValue;\r\n            }\r\n            else {\r\n                value = yAxis.min;\r\n            }\r\n        }\r\n        //if ($type.hasValue(fields)) {\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var interpolationDuration = this.hiddenState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        var delay = 0;\r\n        var anim;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (interpolationDuration == 0) {\r\n                dataItem.hide(0, 0, value, fields);\r\n            }\r\n            else {\r\n                if (_this.sequencedInterpolation && interpolationDuration > 0) {\r\n                    delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n                }\r\n                anim = dataItem.hide(interpolationDuration, delay, value, fields);\r\n            }\r\n        });\r\n        var animation = _super.prototype.hide.call(this, interpolationDuration);\r\n        if (animation && !animation.isFinished()) {\r\n            animation.delay(delay);\r\n        }\r\n        if (anim && !anim.isFinished()) {\r\n            animation = anim;\r\n        }\r\n        // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\r\n        this.validateDataElements();\r\n        //}\r\n        return animation;\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name);\r\n        // to calculate stack values\r\n        var axisSeries = this.baseAxis.series;\r\n        $iter.each(axisSeries.iterator(), function (series) {\r\n            if (series.stacked) {\r\n                series.invalidateProcessedData();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * [getStackValue description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    XYSeries.prototype.getStackValue = function (dataItem, working) {\r\n        // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\r\n        // if this series is not stacked or new stack begins, return.\r\n        var _this = this;\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (!this.stacked || !xAxis || !yAxis) {\r\n            return;\r\n        }\r\n        else {\r\n            // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\r\n            var chart = this.chart;\r\n            var index = chart.series.indexOf(this);\r\n            var field_1;\r\n            if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n                field_1 = this.xField;\r\n            }\r\n            if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n                field_1 = this.yField;\r\n            }\r\n            if (!field_1) {\r\n                return;\r\n            }\r\n            //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\r\n            dataItem.setCalculatedValue(field_1, 0, \"stack\");\r\n            $iter.eachContinue(chart.series.range(0, index).backwards().iterator(), function (prevSeries) {\r\n                // stacking is only possible if both axes are the same\r\n                if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis) {\r\n                    // saving value\r\n                    prevSeries.stackedSeries = _this;\r\n                    var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\r\n                    if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {\r\n                        var value = dataItem.getValue(field_1);\r\n                        var prevValue = void 0;\r\n                        var prevRealValue = prevDataItem.getValue(field_1) + prevDataItem.getValue(field_1, \"stack\");\r\n                        if (working) {\r\n                            prevValue = prevDataItem.getWorkingValue(field_1) + prevDataItem.getValue(field_1, \"stack\");\r\n                        }\r\n                        else {\r\n                            prevValue = prevDataItem.getValue(field_1) + prevDataItem.getValue(field_1, \"stack\");\r\n                        }\r\n                        if ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {\r\n                            //dataItem.events.disable();\r\n                            dataItem.setCalculatedValue(field_1, prevValue, \"stack\");\r\n                            //dataItem.events.enable();\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (!prevSeries.stacked) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"xField\", {\r\n        /**\r\n         * [xField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._xField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"yField\", {\r\n        /**\r\n         * [yField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._yField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"xOpenField\", {\r\n        /**\r\n         * [xOpenField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._xOpenField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"yOpenField\", {\r\n        /**\r\n         * [yOpenField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._yOpenField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"tooltipXField\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (this._tooltipXField) {\r\n                return this._tooltipXField;\r\n            }\r\n            return this._xField;\r\n        },\r\n        /**\r\n         * [tooltipXField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this._tooltipXField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"tooltipYField\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (this._tooltipYField) {\r\n                return this._tooltipYField;\r\n            }\r\n            return this._yField;\r\n        },\r\n        /**\r\n         * [tooltipYField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this._tooltipYField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns lowest value in the series for the specific axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.min = function (axis) {\r\n        return this._tmin.getKey(axis.uid);\r\n    };\r\n    /**\r\n     * Returns highest value in the series for the specific axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.max = function (axis) {\r\n        return this._tmax.getKey(axis.uid);\r\n    };\r\n    /**\r\n     * Returns lowest value in the series for the specific axis within current\r\n     * selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.selectionMin = function (axis) {\r\n        var value = this._smin.getKey(axis.uid);\r\n        if (!$type.isNumber(value)) {\r\n            value = this.min(axis);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Returns highest value in the series for the specific axis within current\r\n     * selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.selectionMax = function (axis) {\r\n        var value = this._smax.getKey(axis.uid);\r\n        if (!$type.isNumber(value)) {\r\n            value = this.max(axis);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYSeries.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up base axes\r\n            if ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\r\n                if (this.map.hasKey(config.baseAxis)) {\r\n                    config.baseAxis = this.map.getKey(config.baseAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\r\n                    delete config.baseAxis;\r\n                }\r\n            }\r\n            // Set up axes\r\n            if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n                if (this.map.hasKey(config.xAxis)) {\r\n                    config.xAxis = this.map.getKey(config.xAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\r\n                    delete config.xAxis;\r\n                }\r\n            }\r\n            if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n                if (this.map.hasKey(config.yAxis)) {\r\n                    config.yAxis = this.map.getKey(config.yAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\r\n                    delete config.yAxis;\r\n                }\r\n            }\r\n            // Set up axis ranges\r\n            if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n                for (var i = 0, len = config.axisRanges.length; i < len; i++) {\r\n                    var range = config.axisRanges[i];\r\n                    if (!$type.hasValue(range.type)) {\r\n                        range.type = \"AxisDataItem\";\r\n                    }\r\n                    if ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\r\n                        range.component = this.map.getKey(range.axis);\r\n                    }\r\n                    else if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\r\n                        range.component = this.map.getKey(range.component);\r\n                    }\r\n                }\r\n            }\r\n            // Parse date fields based on the series fields\r\n            if (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n                this.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n     *\r\n     * @param    dataItem   Data item\r\n     * @param    xKey       Name of X data field\r\n     * @param    yKey       Name of Y data field\r\n     * @param    locationX  X location\r\n     * @param    locationY  Y location\r\n     * @param    stackKeyX  ?\r\n     * @param    stackKeyY  ?\r\n     * @returns             Coordinates\r\n     */\r\n    XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\r\n        if (this.xAxis && this.yAxis) {\r\n            var x = this.xAxis.getX(dataItem, xKey, locationX);\r\n            var y = this.yAxis.getY(dataItem, yKey, locationY);\r\n            x = $math.fitToRange(x, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n            y = $math.fitToRange(y, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n            return { x: x, y: y };\r\n        }\r\n    };\r\n    /**\r\n     * Updates item reader text based on the type and set up of axis.\r\n     */\r\n    XYSeries.prototype.updateItemReaderText = function () {\r\n        // We do not want to overwrite this if `itemReaderText` was changed by\r\n        // user code.\r\n        if (this._itemReaderTextChanged) {\r\n            return;\r\n        }\r\n        var text = \"\";\r\n        $object.each(this.dataFields, function (key, val) {\r\n            text += \"{\" + key + \"} \";\r\n        });\r\n        this.itemReaderText = text;\r\n        this._itemReaderTextChanged = false;\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"cursorTooltipEnabled\", {\r\n        /**\r\n         * @return Display tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorTooltipEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if series should display a tooltip for chart's cursor.\r\n         *\r\n         * If set to `true` (default), the tooltips set for all series item's\r\n         * elements like columns and bullets will be automatically shown\r\n         * when [[XYCursor]] passes over category/date, even if its not hovered\r\n         * directly over the item.\r\n         *\r\n         * Set this to `false` to disable such behavior and display item-specific\r\n         * tooltips only when hovered directly over them\r\n         *\r\n         * @default true\r\n         * @param value Display tooltip?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cursorTooltipEnabled\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"cursorHoverEnabled\", {\r\n        /**\r\n         * @return Hover enabled?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorHoverEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if series should apply hover state on bullets/columns/etc when\r\n         * cursor is over the data item.\r\n         *\r\n         * If set to `true` (default) and chart cursor is enabled on th chart,\r\n         * hovering over date/category will trigger hover states on related Series\r\n         * items like bullets and columns.\r\n         *\r\n         * @default true\r\n         * @since 4.2.2\r\n         * @param  value  Hover enabled?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cursorHoverEnabled\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"excludeFromTotal\", {\r\n        /**\r\n         * @return Exclude from totals?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"excludeFromTotal\");\r\n        },\r\n        /**\r\n         * Indicates if series' values should be excluded when calculating totals.\r\n         *\r\n         * @default false\r\n         * @since 4.4.9\r\n         * @param  value  Exclude from totals?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"excludeFromTotal\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"hideTooltipWhileZooming\", {\r\n        /**\r\n         * @return Hide tooltip while zooming?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n        },\r\n        /**\r\n         * Indicates if series' tooltip should be hidden while series axis range is\r\n         * animating (zooming).\r\n         *\r\n         * @default true\r\n         * @since 4.7.16\r\n         * @param  value  Hide tooltip while zooming?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return XYSeries;\r\n}(Series));\r\nexport { XYSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\r\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;\r\n//# sourceMappingURL=XYSeries.js.map","/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar XYChartScrollbar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYChartScrollbar, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChartScrollbar() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A chart element Scrollbar is for.\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"XYChartScrollbar\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.padding(0, 0, 0, 0);\r\n        var scrollbarChart = _this.createChild(XYChart);\r\n        scrollbarChart.shouldClone = false;\r\n        scrollbarChart.margin(0, 0, 0, 0);\r\n        scrollbarChart.padding(0, 0, 0, 0);\r\n        scrollbarChart.interactionsEnabled = false;\r\n        _this._scrollbarChart = scrollbarChart;\r\n        _this._disposers.push(_this._scrollbarChart);\r\n        _this.minHeight = 60;\r\n        _this.minWidth = 60;\r\n        var unselectedOverlay = _this.createChild(Sprite);\r\n        unselectedOverlay.shouldClone = false;\r\n        unselectedOverlay.setElement(_this.paper.add(\"path\"));\r\n        unselectedOverlay.fill = interfaceColors.getFor(\"background\");\r\n        unselectedOverlay.fillOpacity = 0.8;\r\n        unselectedOverlay.interactionsEnabled = false;\r\n        unselectedOverlay.isMeasured = false;\r\n        unselectedOverlay.toBack();\r\n        _this._unselectedOverlay = unselectedOverlay;\r\n        _this._disposers.push(_this._unselectedOverlay);\r\n        scrollbarChart.toBack();\r\n        _this.background.cornerRadius(0, 0, 0, 0);\r\n        var thumbBackground = _this.thumb.background;\r\n        thumbBackground.cornerRadius(0, 0, 0, 0);\r\n        thumbBackground.fillOpacity = 0;\r\n        thumbBackground.fill = interfaceColors.getFor(\"background\");\r\n        var hoverState = thumbBackground.states.getKey(\"hover\");\r\n        if (hoverState) {\r\n            hoverState.properties.fillOpacity = 0.2;\r\n        }\r\n        var downState = thumbBackground.states.getKey(\"down\");\r\n        if (downState) {\r\n            downState.properties.fillOpacity = 0.4;\r\n        }\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"series\", {\r\n        /**\r\n         * A list of series that are used to draw graph(s) on the scrollbar.\r\n         *\r\n         * @readonly\r\n         * @return Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new List();\r\n                this._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\r\n                this._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new series when they are pushed into a `series` list.\r\n     *\r\n     * @param event Event\r\n     */\r\n    XYChartScrollbar.prototype.handleSeriesAdded = function (event) {\r\n        var sourceSeries = event.newValue;\r\n        if (!sourceSeries.xAxis || !sourceSeries.yAxis) {\r\n            return;\r\n        }\r\n        var scrollbarChart = this.scrollbarChart;\r\n        scrollbarChart.zoomOutButton.disabled = true;\r\n        this.chart = sourceSeries.chart;\r\n        // Ensure that scrollbar chart shares the same locale as parent chart\r\n        scrollbarChart.language.locale = this.chart.language.locale;\r\n        var addXAxis = true;\r\n        var addYAxis = true;\r\n        // check if we haven't added clone of x or y axis before\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (series != sourceSeries) {\r\n                if (series.xAxis == sourceSeries.xAxis) {\r\n                    addXAxis = false;\r\n                }\r\n                if (series.yAxis == sourceSeries.yAxis) {\r\n                    addYAxis = false;\r\n                }\r\n            }\r\n        });\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var series = sourceSeries.clone();\r\n        if (addXAxis) {\r\n            var xAxis = sourceSeries.xAxis.clone();\r\n            scrollbarChart.xAxes.moveValue(xAxis);\r\n            xAxis.title.disabled = true;\r\n            xAxis.rangeChangeDuration = 0;\r\n            //xAxis.id = sourceSeries.uid;\r\n            var renderer = xAxis.renderer;\r\n            renderer.ticks.template.disabled = true;\r\n            renderer.inside = true;\r\n            renderer.labels.template.inside = true;\r\n            renderer.line.strokeOpacity = 0;\r\n            renderer.minLabelPosition = 0.02;\r\n            renderer.maxLabelPosition = 0.98;\r\n            renderer.line.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.grid.template.strokeOpacity = 0.05;\r\n            renderer.minWidth = undefined;\r\n            renderer.minHeight = undefined;\r\n            renderer.padding(0, 0, 0, 0);\r\n            renderer.chart = scrollbarChart;\r\n            renderer.margin(0, 0, 0, 0);\r\n            xAxis.width = percent(100);\r\n            var labelsTemplate = renderer.labels.template;\r\n            labelsTemplate.fillOpacity = 0.5;\r\n            xAxis.maxZoomCount = undefined;\r\n            xAxis.minZoomCount = undefined;\r\n            if (xAxis instanceof DateAxis) {\r\n                var vAxis_1 = xAxis;\r\n                var sourceAxis = sourceSeries.xAxis;\r\n                xAxis.groupCount = sourceAxis.groupCount * 5;\r\n                this._disposers.push(vAxis_1.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_1.clonedFrom.minDefined)) {\r\n                        vAxis_1.min = vAxis_1.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_1.clonedFrom.maxDefined)) {\r\n                        vAxis_1.max = vAxis_1.clonedFrom.maxDefined;\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            else if (xAxis instanceof ValueAxis) {\r\n                var vAxis_2 = xAxis;\r\n                if (!$type.isNumber(vAxis_2.clonedFrom.minDefined)) {\r\n                    vAxis_2.min = undefined;\r\n                }\r\n                if (!$type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\r\n                    vAxis_2.max = undefined;\r\n                }\r\n                this._disposers.push(vAxis_2.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_2.clonedFrom.minDefined)) {\r\n                        vAxis_2.min = vAxis_2.clonedFrom.min;\r\n                    }\r\n                    if ($type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\r\n                        vAxis_2.max = vAxis_2.clonedFrom.max;\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            series.xAxis = xAxis;\r\n        }\r\n        else {\r\n            this.scrollbarChart.xAxes.each(function (xAxis) {\r\n                if (xAxis.clonedFrom == sourceSeries.xAxis) {\r\n                    series.xAxis = xAxis;\r\n                }\r\n            });\r\n        }\r\n        if (addYAxis) {\r\n            var yAxis = sourceSeries.yAxis.clone();\r\n            scrollbarChart.yAxes.moveValue(yAxis);\r\n            yAxis.title.disabled = true;\r\n            yAxis.rangeChangeDuration = 0;\r\n            var renderer = yAxis.renderer;\r\n            renderer.ticks.template.disabled = true;\r\n            renderer.inside = true;\r\n            renderer.labels.template.inside = true;\r\n            renderer.line.strokeOpacity = 0;\r\n            renderer.minLabelPosition = 0.02;\r\n            renderer.maxLabelPosition = 0.98;\r\n            renderer.line.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.grid.template.strokeOpacity = 0.05;\r\n            renderer.minWidth = undefined;\r\n            renderer.minHeight = undefined;\r\n            renderer.chart = scrollbarChart;\r\n            renderer.padding(0, 0, 0, 0);\r\n            renderer.margin(0, 0, 0, 0);\r\n            yAxis.height = percent(100);\r\n            var labelsTemplate = renderer.labels.template;\r\n            labelsTemplate.fillOpacity = 0.5;\r\n            series.yAxis = yAxis;\r\n            yAxis.maxZoomCount = undefined;\r\n            yAxis.minZoomCount = undefined;\r\n            if (yAxis instanceof DateAxis) {\r\n                var vAxis_3 = yAxis;\r\n                var sourceAxis = sourceSeries.yAxis;\r\n                yAxis.groupCount = sourceAxis.groupCount * 5;\r\n                this._disposers.push(vAxis_3.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_3.clonedFrom.minDefined)) {\r\n                        vAxis_3.min = vAxis_3.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_3.clonedFrom.maxDefined)) {\r\n                        vAxis_3.max = vAxis_3.clonedFrom.maxDefined;\r\n                    }\r\n                }));\r\n            }\r\n            else if (yAxis instanceof ValueAxis) {\r\n                var vAxis_4 = yAxis;\r\n                if (!$type.isNumber(vAxis_4.clonedFrom.minDefined)) {\r\n                    vAxis_4.min = undefined;\r\n                }\r\n                if (!$type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\r\n                    vAxis_4.max = undefined;\r\n                }\r\n                this._disposers.push(vAxis_4.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_4.clonedFrom.minDefined)) {\r\n                        vAxis_4.min = vAxis_4.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\r\n                        vAxis_4.max = vAxis_4.clonedFrom.maxDefined;\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        else {\r\n            this.scrollbarChart.yAxes.each(function (yAxis) {\r\n                if (yAxis.clonedFrom == sourceSeries.yAxis) {\r\n                    series.yAxis = yAxis;\r\n                }\r\n            });\r\n        }\r\n        series.rangeChangeDuration = 0;\r\n        series.interpolationDuration = 0;\r\n        series.defaultState.transitionDuration = 0;\r\n        series.showOnInit = false;\r\n        this._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\r\n        // data might be set drectly on series\r\n        this._disposers.push(sourceSeries.events.on(\"datavalidated\", function () {\r\n            if (series.data != sourceSeries.data) { // data setter doesn't check this\r\n                series.data = sourceSeries.data;\r\n            }\r\n        }, undefined, false));\r\n        series.defaultState.properties.visible = true;\r\n        series.filters.push(new DesaturateFilter());\r\n        scrollbarChart.series.push(series);\r\n        this.updateByOrientation();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChartScrollbar.prototype.updateByOrientation = function () {\r\n        var _this = this;\r\n        if (this._scrollbarChart) {\r\n            $iter.each(this._scrollbarChart.xAxes.iterator(), function (xAxis) {\r\n                var renderer = xAxis.renderer;\r\n                if (_this.orientation == \"vertical\") {\r\n                    renderer.grid.template.disabled = true;\r\n                    renderer.labels.template.disabled = true;\r\n                    renderer.minGridDistance = 10;\r\n                }\r\n                else {\r\n                    renderer.grid.template.disabled = false;\r\n                    renderer.labels.template.disabled = false;\r\n                    renderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\r\n                }\r\n            });\r\n            $iter.each(this._scrollbarChart.yAxes.iterator(), function (yAxis) {\r\n                var renderer = yAxis.renderer;\r\n                if (_this.orientation == \"horizontal\") {\r\n                    renderer.grid.template.disabled = true;\r\n                    renderer.labels.template.disabled = true;\r\n                    renderer.minGridDistance = 10;\r\n                }\r\n                else {\r\n                    renderer.grid.template.disabled = false;\r\n                    renderer.labels.template.disabled = false;\r\n                    renderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up after series are removed from Scrollbar.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    XYChartScrollbar.prototype.handleSeriesRemoved = function (event) {\r\n        var sourceSeries = event.oldValue;\r\n        var scrollbarChart = this.scrollbarChart;\r\n        scrollbarChart.series.each(function (series) {\r\n            if (series.clonedFrom == sourceSeries) {\r\n                scrollbarChart.series.removeValue(series);\r\n            }\r\n        });\r\n        if (scrollbarChart.series.length == 0) {\r\n            scrollbarChart.xAxes.clear();\r\n            scrollbarChart.yAxes.clear();\r\n        }\r\n        try {\r\n            sourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\r\n        }\r\n        catch (err) {\r\n        }\r\n    };\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"scrollbarChart\", {\r\n        /**\r\n         * A chart element that is used to display graphs in the Scrollbar.\r\n         *\r\n         * This is not the same as `chart`. It's a totally independent instance of\r\n         * [[XYChart]] with separate config, series, etc.\r\n         *\r\n         * It can be configured just like any other [[XYChart]].\r\n         *\r\n         * @readonly\r\n         * @return Scrollbar's internal chart\r\n         */\r\n        get: function () {\r\n            return this._scrollbarChart;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart that Scrollbar belongs to.\r\n         *\r\n         * @param chart  Chart\r\n         */\r\n        set: function (chart) {\r\n            if (this._chart.get() !== chart) {\r\n                this._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\r\n                this.handleDataChanged();\r\n                this._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"unselectedOverlay\", {\r\n        /**\r\n         * A [[Sprite]] object representing overlay that is used to dim area of the\r\n         * scrollbar that is currently not selected.\r\n         *\r\n         * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n         * completely disabling the dimming, and `1` making unselected area completely\r\n         * blank.\r\n         *\r\n         * @since 4.6.1\r\n         * @readonly\r\n         * @return Unselected area curtain element\r\n         */\r\n        get: function () {\r\n            return this._unselectedOverlay;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates Scrollbar's internal chart's data when the main chart's data\r\n     * changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChartScrollbar.prototype.handleDataChanged = function () {\r\n        if (this.chart.data != this.scrollbarChart.data) {\r\n            this.scrollbarChart.data = this.chart.data;\r\n        }\r\n        this.scrollbarChart.invalidateData();\r\n    };\r\n    /**\r\n     * Zooms out all axes on the internal chart.\r\n     */\r\n    XYChartScrollbar.prototype.zoomOutAxes = function () {\r\n        var scrollbarChart = this.scrollbarChart;\r\n        $iter.each(scrollbarChart.xAxes.iterator(), function (x) {\r\n            x.zoom({ start: 0, end: 1 }, true, true);\r\n        });\r\n        $iter.each(scrollbarChart.yAxes.iterator(), function (y) {\r\n            y.zoom({ start: 0, end: 1 }, true, true);\r\n        });\r\n    };\r\n    /**\r\n     * Updates scrollbar thumb.\r\n     */\r\n    XYChartScrollbar.prototype.updateThumb = function () {\r\n        _super.prototype.updateThumb.call(this);\r\n        if (this._unselectedOverlay) {\r\n            var thumb = this.thumb;\r\n            var x = thumb.pixelX || 0;\r\n            var y = thumb.pixelY || 0;\r\n            var w = thumb.pixelWidth || 0;\r\n            var h = thumb.pixelHeight || 0;\r\n            var path = \"\";\r\n            if (this.orientation == \"horizontal\") {\r\n                path = $path.rectToPath({\r\n                    x: -1,\r\n                    y: 0,\r\n                    width: x,\r\n                    height: h\r\n                });\r\n                path += $path.rectToPath({\r\n                    x: x + w,\r\n                    y: 0,\r\n                    width: (this.pixelWidth || 0) - x - w,\r\n                    height: h\r\n                });\r\n            }\r\n            else {\r\n                path = $path.rectToPath({\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: w,\r\n                    height: y\r\n                });\r\n                path += $path.rectToPath({\r\n                    x: 0,\r\n                    y: y + h,\r\n                    width: w,\r\n                    height: (this.pixelHeight || 0) - y - h\r\n                });\r\n            }\r\n            this._unselectedOverlay.path = path;\r\n        }\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYChartScrollbar.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            if ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    var series = config.series[i];\r\n                    if ($type.hasValue(series) && $type.isString(series)) {\r\n                        if (this.map.hasKey(series)) {\r\n                            config.series[i] = this.map.getKey(series);\r\n                        }\r\n                        else {\r\n                            throw Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return XYChartScrollbar;\r\n}(Scrollbar));\r\nexport { XYChartScrollbar };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;\r\n//# sourceMappingURL=XYChartScrollbar.js.map","/**\r\n * XY Chart module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, SerialChartDataItem } from \"./SerialChart\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { AxisRendererX } from \"../axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../axes/AxisRendererY\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { XYSeries } from \"../series/XYSeries\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { ZoomOutButton } from \"../../core/elements/ZoomOutButton\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { XYChartScrollbar } from \"../elements/XYChartScrollbar\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[XYChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar XYChartDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"XYChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return XYChartDataItem;\r\n}(SerialChartDataItem));\r\nexport { XYChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates an XY chart, and any derivative chart, like Serial, Date-based, etc.\r\n *\r\n * Basically this is a chart type, that is used to display any chart\r\n * information in a square plot area.\r\n *\r\n * The horizontal and vertical scale is determined by the type of Axis.\r\n *\r\n * The plot types are determined by type of Series.\r\n *\r\n * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n *\r\n * // Add Data\r\n * chart.data = [{\r\n * \"country\": \"USA\",\r\n * \"visits\": 3025\r\n * }, {\r\n * \t\"country\": \"China\",\r\n * \t\"visits\": 1882\r\n * }, {\r\n * \t\"country\": \"Japan\",\r\n * \t\"visits\": 1809\r\n * }];\r\n *\r\n * // Add category axis\r\n * let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n * categoryAxis.dataFields.category = \"country\";\r\n *\r\n * // Add value axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Add series\r\n * let series = chart.series.push(new am4charts.ColumnSeries());\r\n * series.name = \"Web Traffic\";\r\n * series.dataFields.categoryX = \"country\";\r\n * series.dataFields.valueY = \"visits\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"XYChart\");\r\n *\r\n * // Add Data\r\n * chart.data = [{\r\n * \"country\": \"USA\",\r\n * \"visits\": 3025\r\n * }, {\r\n * \t\"country\": \"China\",\r\n * \t\"visits\": 1882\r\n * }, {\r\n * \t\"country\": \"Japan\",\r\n * \t\"visits\": 1809\r\n * }];\r\n *\r\n * // Add category axis\r\n * var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n * categoryAxis.dataFields.category = \"country\";\r\n *\r\n * // Add value axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Add series\r\n * var series = chart.series.push(new am4charts.ColumnSeries());\r\n * series.name = \"Web Traffic\";\r\n * series.dataFields.categoryX = \"country\";\r\n * series.dataFields.valueY = \"visits\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Category axis\r\n * \t\"xAxes\": [{\r\n * \t\t\"type\": \"CategoryAxis\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Value axis\r\n * \t\"yAxes\": [{\r\n * \t\t\"type\": \"ValueAxis\"\r\n * \t}],\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"ColumnSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"categoryX\": \"country\",\r\n * \t\t\t\"valueY\": \"visits\"\r\n * \t\t},\r\n * \t\t\"name\": \"Web Traffic\"\r\n * \t}],\r\n *\r\n * \t// Cursor\r\n * \t\"cursor\": {},\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"USA\",\r\n * \t\t\"visits\": 3025\r\n * \t}, {\r\n * \t\t\"country\": \"China\",\r\n * \t\t\"visits\": 1882\r\n * \t}, {\r\n * \t\t\"country\": \"Japan\",\r\n * \t\t\"visits\": 1809\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"XYChart\");\r\n * ```\r\n *\r\n *\r\n * @see {@link IXYChartEvents} for a list of available Events\r\n * @see {@link IXYChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nvar XYChart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Defines the type of horizontal axis rederer.\r\n         */\r\n        _this._axisRendererX = AxisRendererX;\r\n        /**\r\n         * Defines the type of vertical axis rederer.\r\n         */\r\n        _this._axisRendererY = AxisRendererY;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._seriesPoints = [];\r\n        _this.className = \"XYChart\";\r\n        // Set defaults\r\n        //this.margin(10, 10, 10, 10);\r\n        _this.maskBullets = true;\r\n        _this.arrangeTooltips = true;\r\n        // Create main chart container\r\n        var chartContainer = _this.chartContainer;\r\n        chartContainer.layout = \"vertical\";\r\n        _this.padding(15, 15, 15, 15);\r\n        // Create top axes container\r\n        var topAxesCont = chartContainer.createChild(Container);\r\n        topAxesCont.shouldClone = false;\r\n        topAxesCont.layout = \"vertical\";\r\n        topAxesCont.width = percent(100);\r\n        topAxesCont.zIndex = 1;\r\n        _this.topAxesContainer = topAxesCont;\r\n        // Create vertical axes and plot area container\r\n        // Plot area and vertical axes share the whole width of the chart,\r\n        // so we need to put then into a separate container so that layouting\r\n        // engine takes care of the positioning\r\n        var yAxesAndPlotCont = chartContainer.createChild(Container);\r\n        yAxesAndPlotCont.shouldClone = false;\r\n        yAxesAndPlotCont.layout = \"horizontal\";\r\n        yAxesAndPlotCont.width = percent(100);\r\n        yAxesAndPlotCont.height = percent(100);\r\n        yAxesAndPlotCont.zIndex = 0;\r\n        _this.yAxesAndPlotContainer = yAxesAndPlotCont;\r\n        // Create a container for bottom axes\r\n        var bottomAxesCont = chartContainer.createChild(Container);\r\n        bottomAxesCont.shouldClone = false;\r\n        bottomAxesCont.width = percent(100);\r\n        bottomAxesCont.layout = \"vertical\";\r\n        bottomAxesCont.zIndex = 1;\r\n        _this.bottomAxesContainer = bottomAxesCont;\r\n        // Create a container for left-side axes\r\n        var leftAxesCont = yAxesAndPlotCont.createChild(Container);\r\n        leftAxesCont.shouldClone = false;\r\n        leftAxesCont.layout = \"horizontal\";\r\n        leftAxesCont.height = percent(100);\r\n        leftAxesCont.contentAlign = \"right\";\r\n        leftAxesCont.events.on(\"transformed\", _this.updateXAxesMargins, _this, false);\r\n        leftAxesCont.zIndex = 1;\r\n        _this.leftAxesContainer = leftAxesCont;\r\n        // Create a container for plot area\r\n        var plotCont = yAxesAndPlotCont.createChild(Container);\r\n        plotCont.shouldClone = false;\r\n        plotCont.height = percent(100);\r\n        plotCont.width = percent(100);\r\n        // Create transparend background for plot container so that hover works\r\n        // on all of it\r\n        plotCont.background.fillOpacity = 0;\r\n        _this.plotContainer = plotCont;\r\n        // must go below plot container\r\n        _this.mouseWheelBehavior = \"none\";\r\n        _this._cursorContainer = plotCont;\r\n        // Create a container for right-side axes\r\n        var rightAxesCont = yAxesAndPlotCont.createChild(Container);\r\n        rightAxesCont.shouldClone = false;\r\n        rightAxesCont.layout = \"horizontal\";\r\n        rightAxesCont.height = percent(100);\r\n        rightAxesCont.zIndex = 1;\r\n        rightAxesCont.events.on(\"transformed\", _this.updateXAxesMargins, _this, false);\r\n        _this.rightAxesContainer = rightAxesCont;\r\n        _this.seriesContainer.parent = plotCont;\r\n        _this.bulletsContainer.parent = plotCont;\r\n        var zoomOutButton = plotCont.createChild(ZoomOutButton);\r\n        zoomOutButton.shouldClone = false;\r\n        zoomOutButton.align = \"right\";\r\n        zoomOutButton.valign = \"top\";\r\n        zoomOutButton.zIndex = Number.MAX_SAFE_INTEGER;\r\n        zoomOutButton.marginTop = 5;\r\n        zoomOutButton.marginRight = 5;\r\n        zoomOutButton.hide(0);\r\n        _this.zoomOutButton = zoomOutButton;\r\n        // Create a container for bullets\r\n        var axisBulletsContainer = _this.plotContainer.createChild(Container);\r\n        axisBulletsContainer.shouldClone = false;\r\n        axisBulletsContainer.width = percent(100);\r\n        axisBulletsContainer.height = percent(100);\r\n        axisBulletsContainer.isMeasured = false;\r\n        axisBulletsContainer.zIndex = 4;\r\n        axisBulletsContainer.layout = \"none\";\r\n        _this.axisBulletsContainer = axisBulletsContainer;\r\n        _this._bulletMask = _this.plotContainer;\r\n        _this.events.on(\"beforedatavalidated\", function () {\r\n            _this.series.each(function (series) {\r\n                series.dataGrouped = false;\r\n                series._baseInterval = {};\r\n            });\r\n        }, _this, false);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    XYChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        this.zoomOutButton.exportable = false;\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"X/Y chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Draws the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        this.seriesContainer.toFront();\r\n        this.bulletsContainer.toFront();\r\n        if (this.maskBullets) {\r\n            this.bulletsContainer.mask = this._bulletMask;\r\n        }\r\n        this.updateSeriesLegend();\r\n    };\r\n    /**\r\n     * Triggers a redrawing of all chart's series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.updatePlotElements = function () {\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Triggers data (re)validation which in turn can cause a redraw of the\r\n     * whole chart or just aprticular series / elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.validateData = function () {\r\n        // tell axes that data changed\r\n        if (this._parseDataFrom == 0) {\r\n            $iter.each(this.xAxes.iterator(), function (axis) {\r\n                axis.dataChangeUpdate();\r\n            });\r\n            $iter.each(this.yAxes.iterator(), function (axis) {\r\n                axis.dataChangeUpdate();\r\n            });\r\n            $iter.each(this.series.iterator(), function (series) {\r\n                series.dataChangeUpdate();\r\n            });\r\n        }\r\n        _super.prototype.validateData.call(this);\r\n    };\r\n    /**\r\n     * Updates margins for horizontal axes based on settings and available space.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.updateXAxesMargins = function () {\r\n        var leftAxesWidth = this.leftAxesContainer.measuredWidth;\r\n        var rightAxesWidth = this.rightAxesContainer.measuredWidth;\r\n        var bottomAxesCont = this.bottomAxesContainer;\r\n        if (bottomAxesCont.paddingLeft != leftAxesWidth || bottomAxesCont.paddingRight != rightAxesWidth) {\r\n            bottomAxesCont.paddingLeft = leftAxesWidth;\r\n            bottomAxesCont.paddingRight = rightAxesWidth;\r\n        }\r\n        var topAxesCont = this.topAxesContainer;\r\n        if (topAxesCont.paddingLeft != leftAxesWidth || topAxesCont.paddingRight != rightAxesWidth) {\r\n            topAxesCont.paddingLeft = leftAxesWidth;\r\n            topAxesCont.paddingRight = rightAxesWidth;\r\n        }\r\n    };\r\n    /**\r\n     * Triggers a re-initialization of this element.\r\n     *\r\n     * Will result in complete redrawing of the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.reinit = function () {\r\n        _super.prototype.reinit.call(this);\r\n        this.series.each(function (series) {\r\n            series.appeared = false;\r\n        });\r\n    };\r\n    /**\r\n     * Triggers an update on the horizontal axis when one of its properties\r\n     * change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event An event object\r\n     */\r\n    XYChart.prototype.handleXAxisChange = function (event) {\r\n        this.updateXAxis(event.target);\r\n    };\r\n    /**\r\n     * Triggers an update on the vertical axis when one of its properties\r\n     * change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event An event object\r\n     */\r\n    XYChart.prototype.handleYAxisChange = function (event) {\r\n        this.updateYAxis(event.target);\r\n    };\r\n    /**\r\n     * Sets up a new horizontal (X) axis when it is added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Axis insert event\r\n     */\r\n    XYChart.prototype.processXAxis = function (event) {\r\n        var axis = event.newValue;\r\n        axis.chart = this;\r\n        if (!axis.renderer) {\r\n            axis.renderer = new this._axisRendererX();\r\n            axis.renderer.observe([\"opposite\", \"inside\", \"inversed\", \"minGridDistance\"], this.handleXAxisChange, this, false);\r\n        }\r\n        axis.axisLetter = \"X\";\r\n        axis.events.on(\"startendchanged\", this.handleXAxisRangeChange, this, false);\r\n        //axis.events.on(\"endchanged\", this.handleXAxisRangeChange, this, false);\r\n        // Although axis does not use data directly, we set dataProvider here\r\n        // (but not add to chart data users) to hold up rendering before data\r\n        // is parsed (system handles this)\r\n        axis.dataProvider = this;\r\n        this.updateXAxis(axis.renderer);\r\n        this.processAxis(axis);\r\n    };\r\n    /**\r\n     * Sets up a new vertical (Y) axis when it is added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Axis insert event\r\n     */\r\n    XYChart.prototype.processYAxis = function (event) {\r\n        var axis = event.newValue;\r\n        axis.chart = this;\r\n        if (!axis.renderer) {\r\n            axis.renderer = new this._axisRendererY();\r\n            axis.renderer.observe([\"opposite\", \"inside\", \"inversed\", \"minGridDistance\"], this.handleYAxisChange, this, false);\r\n        }\r\n        axis.axisLetter = \"Y\";\r\n        axis.events.on(\"startendchanged\", this.handleYAxisRangeChange, this, false);\r\n        //axis.events.on(\"endchanged\", this.handleYAxisRangeChange, this, false);\r\n        // Although axis does not use data directly, we set dataProvider here\r\n        // (but not add to chart data users) to hold up rendering before data\r\n        // is parsed (system handles this)\r\n        axis.dataProvider = this;\r\n        this.updateYAxis(axis.renderer);\r\n        this.processAxis(axis);\r\n    };\r\n    /**\r\n     * Updates horizontal (X) scrollbar and other horizontal axis whenever axis'\r\n     * value range changes.\r\n     */\r\n    XYChart.prototype.handleXAxisRangeChange = function () {\r\n        var range = this.getCommonAxisRange(this.xAxes);\r\n        if (this.scrollbarX) {\r\n            this.zoomAxes(this.xAxes, range, true);\r\n        }\r\n        this.toggleZoomOutButton();\r\n        this.updateScrollbar(this.scrollbarX, range);\r\n    };\r\n    /**\r\n     * Shows or hides the Zoom Out button depending on whether the chart is fully\r\n     * zoomed out or not.\r\n     */\r\n    XYChart.prototype.toggleZoomOutButton = function () {\r\n        if (this.zoomOutButton) {\r\n            var show_1 = false;\r\n            $iter.eachContinue(this.xAxes.iterator(), function (axis) {\r\n                if (axis.toggleZoomOutButton) {\r\n                    if (axis.maxZoomCount > 0) {\r\n                        var minZoomFactor = axis.maxZoomFactor / axis.maxZoomCount;\r\n                        if ($math.round(axis.end - axis.start, 3) < 1 / minZoomFactor) {\r\n                            show_1 = true;\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($math.round(axis.start, 3) != 0 || $math.round(axis.end, 3) != 1) {\r\n                            show_1 = true;\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n            $iter.eachContinue(this.yAxes.iterator(), function (axis) {\r\n                if (axis.toggleZoomOutButton) {\r\n                    if (axis.maxZoomCount > 0) {\r\n                        var minZoomFactor = axis.maxZoomFactor / axis.maxZoomCount;\r\n                        if ($math.round(axis.end - axis.start, 3) < 1 / minZoomFactor) {\r\n                            show_1 = true;\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($math.round(axis.start, 3) != 0 || $math.round(axis.end, 3) != 1) {\r\n                            show_1 = true;\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            });\r\n            if (!this.seriesAppeared) {\r\n                show_1 = false;\r\n            }\r\n            if (show_1) {\r\n                this.zoomOutButton.show();\r\n            }\r\n            else {\r\n                this.zoomOutButton.hide();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * moved this check to a separate method so that we could override it in TreeMapSeries\r\n     */\r\n    XYChart.prototype.seriesAppeared = function () {\r\n        var appeared = false;\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (!series.appeared) {\r\n                appeared = false;\r\n                return false;\r\n            }\r\n        });\r\n        return appeared;\r\n    };\r\n    /**\r\n     * Updates vertical (Y) scrollbar and other horizontal axis whenever axis'\r\n     * value range changes.\r\n     */\r\n    XYChart.prototype.handleYAxisRangeChange = function () {\r\n        var range = this.getCommonAxisRange(this.yAxes);\r\n        if (this.scrollbarY) {\r\n            this.zoomAxes(this.yAxes, range, true);\r\n        }\r\n        this.toggleZoomOutButton();\r\n        this.updateScrollbar(this.scrollbarY, range);\r\n    };\r\n    /**\r\n     * Updates a relative scrollbar whenever data range of the axis changes.\r\n     *\r\n     * @param scrollbar  Scrollbar instance\r\n     * @param range      New data (values) range of the axis\r\n     */\r\n    XYChart.prototype.updateScrollbar = function (scrollbar, range) {\r\n        if (scrollbar) {\r\n            scrollbar.skipRangeEvents();\r\n            scrollbar.start = range.start;\r\n            scrollbar.end = range.end;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a common range of values between a list of axes.\r\n     *\r\n     * This is used to synchronize the zoom between multiple axes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axes  A list of axes\r\n     * @return Common value range\r\n     */\r\n    XYChart.prototype.getCommonAxisRange = function (axes) {\r\n        var start;\r\n        var end;\r\n        $iter.each(axes.iterator(), function (axis) {\r\n            var axisStart = axis.start;\r\n            var axisEnd = axis.end;\r\n            if (axis.renderer.inversed) {\r\n                axisStart = 1 - axis.end;\r\n                axisEnd = 1 - axis.start;\r\n            }\r\n            if (!$type.isNumber(start) || (axisStart < start)) {\r\n                start = axisStart;\r\n            }\r\n            if (!$type.isNumber(end) || (axisEnd > end)) {\r\n                end = axisEnd;\r\n            }\r\n        });\r\n        return { start: start, end: end };\r\n    };\r\n    /**\r\n     * Triggers (re)rendering of the horizontal (X) axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     */\r\n    XYChart.prototype.updateXAxis = function (renderer) {\r\n        var axis = renderer.axis;\r\n        if (renderer.opposite) {\r\n            axis.parent = this.topAxesContainer;\r\n            axis.toFront();\r\n        }\r\n        else {\r\n            axis.parent = this.bottomAxesContainer;\r\n            axis.toBack();\r\n        }\r\n        if (axis.renderer) {\r\n            axis.renderer.processRenderer();\r\n        }\r\n    };\r\n    /**\r\n     * Triggers (re)rendering of the vertical (Y) axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     */\r\n    XYChart.prototype.updateYAxis = function (renderer) {\r\n        var axis = renderer.axis;\r\n        if (renderer.opposite) {\r\n            axis.parent = this.rightAxesContainer;\r\n            axis.toBack();\r\n        }\r\n        else {\r\n            axis.parent = this.leftAxesContainer;\r\n            axis.toFront();\r\n        }\r\n        if (axis.renderer) {\r\n            axis.renderer.processRenderer();\r\n        }\r\n    };\r\n    /**\r\n     * Decorates an Axis for use with this chart, e.g. sets proper renderer\r\n     * and containers for placement.\r\n     *\r\n     * @param axis  Axis\r\n     */\r\n    XYChart.prototype.processAxis = function (axis) {\r\n        var _this = this;\r\n        // Value axis does not use data directly, only category axis does\r\n        if (axis instanceof CategoryAxis) {\r\n            this._dataUsers.moveValue(axis);\r\n        }\r\n        var renderer = axis.renderer;\r\n        renderer.gridContainer.parent = this.plotContainer;\r\n        renderer.gridContainer.toBack();\r\n        renderer.breakContainer.parent = this.plotContainer;\r\n        renderer.breakContainer.toFront();\r\n        renderer.breakContainer.zIndex = 10;\r\n        axis.addDisposer(new Disposer(function () {\r\n            _this.dataUsers.removeValue(axis);\r\n        }));\r\n        renderer.bulletsContainer.parent = this.axisBulletsContainer;\r\n        this._disposers.push(axis.events.on(\"positionchanged\", function () {\r\n            var point = $utils.spritePointToSprite({ x: 0, y: 0 }, axis, _this.axisBulletsContainer);\r\n            if (axis.renderer instanceof AxisRendererY) {\r\n                renderer.bulletsContainer.y = point.y;\r\n            }\r\n            if (axis.renderer instanceof AxisRendererX) {\r\n                renderer.bulletsContainer.x = point.x;\r\n            }\r\n        }, undefined, false));\r\n        this.plotContainer.events.on(\"maxsizechanged\", function () {\r\n            if (_this.inited) {\r\n                axis.invalidateDataItems();\r\n                _this.updateSeriesMasks();\r\n            }\r\n        }, axis, false);\r\n    };\r\n    /**\r\n     * This is done because for some reason IE doesn't change mask if path of a\r\n     * mask changes.\r\n     */\r\n    XYChart.prototype.updateSeriesMasks = function () {\r\n        if ($utils.isIE()) {\r\n            this.series.each(function (series) {\r\n                var mask = series.mainContainer.mask;\r\n                series.mainContainer.mask = undefined;\r\n                series.mainContainer.mask = mask;\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"xAxes\", {\r\n        /**\r\n         * A list of horizontal (X) axes.\r\n         *\r\n         * @return List of axes\r\n         */\r\n        get: function () {\r\n            if (!this._xAxes) {\r\n                this._xAxes = new List();\r\n                this._xAxes.events.on(\"inserted\", this.processXAxis, this, false);\r\n                this._xAxes.events.on(\"removed\", this.handleAxisRemoval, this, false);\r\n            }\r\n            return this._xAxes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.handleAxisRemoval = function (event) {\r\n        var axis = event.oldValue;\r\n        this.dataUsers.removeValue(axis); // need to remove, as it might not be disposed\r\n        if (axis.autoDispose) {\r\n            axis.dispose();\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"yAxes\", {\r\n        /**\r\n         * A list of vertical (Y) axes.\r\n         *\r\n         * @return List of axes\r\n         */\r\n        get: function () {\r\n            if (!this._yAxes) {\r\n                this._yAxes = new List();\r\n                this._yAxes.events.on(\"inserted\", this.processYAxis, this, false);\r\n                this._yAxes.events.on(\"removed\", this.handleAxisRemoval, this, false);\r\n            }\r\n            return this._yAxes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new [[XYSeries]] object with required parameters when it is\r\n     * added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    XYChart.prototype.handleSeriesAdded = function (event) {\r\n        try {\r\n            _super.prototype.handleSeriesAdded.call(this, event);\r\n            var series = event.newValue;\r\n            if (this.xAxes.length == 0 || this.yAxes.length == 0) {\r\n                registry.removeFromInvalidComponents(series);\r\n                series.dataInvalid = false;\r\n            }\r\n            $utils.used(series.xAxis); // this is enough to get axis, handled in getter\r\n            $utils.used(series.yAxis); // this is enough to get axis, handled in getter\r\n            if (series.fill == undefined) {\r\n                if (this.patterns) {\r\n                    if (!$type.hasValue(series.stroke)) {\r\n                        series.stroke = this.colors.next();\r\n                    }\r\n                    series.fill = this.patterns.next();\r\n                    if ($type.hasValue(series.fillOpacity)) {\r\n                        series.fill.backgroundOpacity = series.fillOpacity;\r\n                    }\r\n                    if (series.stroke instanceof Color) {\r\n                        series.fill.stroke = series.stroke;\r\n                        series.fill.fill = series.stroke;\r\n                    }\r\n                }\r\n                else {\r\n                    series.fill = this.colors.next();\r\n                }\r\n            }\r\n            if (!$type.hasValue(series.stroke)) {\r\n                series.stroke = series.fill;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.raiseCriticalError(e);\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"cursor\", {\r\n        /**\r\n         * @return Cursor\r\n         */\r\n        get: function () {\r\n            return this._cursor;\r\n        },\r\n        /**\r\n         * Chart's [[Cursor]].\r\n         *\r\n         * @param cursor  Cursor\r\n         */\r\n        set: function (cursor) {\r\n            if (this._cursor != cursor) {\r\n                if (this._cursor) {\r\n                    this.removeDispose(this._cursor);\r\n                }\r\n                this._cursor = cursor;\r\n                if (cursor) {\r\n                    // TODO this is wrong, fix it\r\n                    this._disposers.push(cursor);\r\n                    cursor.chart = this;\r\n                    cursor.shouldClone = false;\r\n                    cursor.parent = this._cursorContainer;\r\n                    cursor.events.on(\"cursorpositionchanged\", this.handleCursorPositionChange, this, false);\r\n                    cursor.events.on(\"zoomstarted\", this.handleCursorZoomStart, this, false);\r\n                    cursor.events.on(\"zoomended\", this.handleCursorZoomEnd, this, false);\r\n                    cursor.events.on(\"panstarted\", this.handleCursorPanStart, this, false);\r\n                    cursor.events.on(\"panning\", this.handleCursorPanning, this, false);\r\n                    cursor.events.on(\"panended\", this.handleCursorPanEnd, this, false);\r\n                    cursor.events.on(\"behaviorcanceled\", this.handleCursorCanceled, this, false);\r\n                    cursor.events.on(\"hidden\", this.handleHideCursor, this, false);\r\n                    cursor.zIndex = Number.MAX_SAFE_INTEGER - 1;\r\n                    if (this.tapToActivate) {\r\n                        // We need this in order to setup cursor properly\r\n                        this.setTapToActivate(this.tapToActivate);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Performs tasks when the cursor's position changes, e.g. shows proper\r\n     * tooltips on axes and series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.handleCursorPositionChange = function () {\r\n        var cursor = this.cursor;\r\n        if (cursor.visible && !cursor.isHiding) {\r\n            var xPosition_1 = this.cursor.xPosition;\r\n            var yPosition_1 = this.cursor.yPosition;\r\n            this.showSeriesTooltip({\r\n                x: xPosition_1,\r\n                y: yPosition_1\r\n            });\r\n            var exceptAxis = void 0;\r\n            var snapToSeries = cursor.snapToSeries;\r\n            if (snapToSeries) {\r\n                if (snapToSeries.baseAxis == snapToSeries.xAxis) {\r\n                    exceptAxis = snapToSeries.yAxis;\r\n                }\r\n                if (snapToSeries.baseAxis == snapToSeries.yAxis) {\r\n                    exceptAxis = snapToSeries.xAxis;\r\n                }\r\n                var xAxis_1 = snapToSeries.xAxis;\r\n                var yAxis_1 = snapToSeries.yAxis;\r\n                if (xAxis_1 instanceof ValueAxis && !(xAxis_1 instanceof DateAxis) && yAxis_1 instanceof ValueAxis && !(yAxis_1 instanceof DateAxis)) {\r\n                    var closestDataItem_1;\r\n                    var minDistance_1 = Infinity;\r\n                    snapToSeries.dataItems.each(function (dataItem) {\r\n                        //let xxPosition = xAxis.toAxisPosition(xPosition);\r\n                        //let yyPosition = yAxis.toAxisPosition(xPosition);\r\n                        var dxPosition = xAxis_1.toGlobalPosition(xAxis_1.getPositionX(dataItem, \"valueX\")) * xAxis_1.axisFullLength;\r\n                        var dyPosition = yAxis_1.toGlobalPosition(yAxis_1.getPositionY(dataItem, \"valueY\")) * yAxis_1.axisFullLength;\r\n                        var distance = Math.sqrt(Math.pow(xPosition_1 * xAxis_1.axisFullLength - dxPosition, 2) + Math.pow(yPosition_1 * yAxis_1.axisFullLength - dyPosition, 2));\r\n                        if (distance < minDistance_1) {\r\n                            minDistance_1 = distance;\r\n                            closestDataItem_1 = dataItem;\r\n                        }\r\n                    });\r\n                    if (closestDataItem_1) {\r\n                        snapToSeries.showTooltipAtDataItem(closestDataItem_1);\r\n                    }\r\n                }\r\n            }\r\n            this._seriesPoints = [];\r\n            if (this._cursorXPosition != xPosition_1) {\r\n                this.showAxisTooltip(this.xAxes, xPosition_1, exceptAxis);\r\n            }\r\n            if (this._cursorYPosition != yPosition_1) {\r\n                this.showAxisTooltip(this.yAxes, yPosition_1, exceptAxis);\r\n            }\r\n            if (this.arrangeTooltips) {\r\n                this.sortSeriesTooltips(this._seriesPoints);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Hides all cursor-related tooltips when the cursor itself is hidden.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.handleHideCursor = function () {\r\n        this.hideObjectTooltip(this.xAxes);\r\n        this.hideObjectTooltip(this.yAxes);\r\n        this.hideObjectTooltip(this.series);\r\n        this._cursorXPosition = undefined;\r\n        this._cursorYPosition = undefined;\r\n        this.updateSeriesLegend();\r\n    };\r\n    /**\r\n     * Updates values for each series' legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart.prototype.updateSeriesLegend = function () {\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.updateLegendValue();\r\n        });\r\n    };\r\n    /**\r\n     * Hides a tooltip for a list of objects.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param sprites  A list of sprites to hide tooltip for\r\n     */\r\n    XYChart.prototype.hideObjectTooltip = function (sprites) {\r\n        $iter.each(sprites.iterator(), function (sprite) {\r\n            sprite.hideTooltip(0);\r\n        });\r\n    };\r\n    /**\r\n     * Shows a tooltip for all chart's series, using specific coordinates as a\r\n     * reference point.\r\n     *\r\n     * The tooltip might be shown at different coordinates depending on the\r\n     * actual data point's position, overlapping with other tooltips, etc.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Reference point\r\n     */\r\n    XYChart.prototype.showSeriesTooltip = function (position) {\r\n        var _this = this;\r\n        if (!position) {\r\n            this.series.each(function (series) {\r\n                series.hideTooltip();\r\n            });\r\n            return;\r\n        }\r\n        var seriesPoints = [];\r\n        this.series.each(function (series) {\r\n            //if (series.tooltipText || series.tooltipHTML) { // not good, bullets are not hovered then\r\n            if ((series.xAxis instanceof DateAxis && series.xAxis.snapTooltip) || (series.yAxis instanceof DateAxis && series.yAxis.snapTooltip)) {\r\n                // void\r\n            }\r\n            else {\r\n                var point = series.showTooltipAtPosition(position.x, position.y);\r\n                if (point) {\r\n                    series.tooltip.setBounds($utils.spriteRectToSvg({ x: 0, y: 0, width: _this.pixelWidth, height: _this.pixelHeight }, _this));\r\n                    seriesPoints.push({ series: series, point: point });\r\n                }\r\n            }\r\n            //}\r\n        });\r\n        if (this.arrangeTooltips) {\r\n            this.sortSeriesTooltips(seriesPoints);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.sortSeriesTooltips = function (seriesPoints) {\r\n        var topLeft = $utils.spritePointToSvg({ x: -0.5, y: -0.5 }, this.plotContainer);\r\n        var bottomRight = $utils.spritePointToSvg({ x: this.plotContainer.pixelWidth + 0.5, y: this.plotContainer.pixelHeight + 0.5 }, this.plotContainer);\r\n        var sum = 0;\r\n        var filteredSeriesPoints = [];\r\n        $array.each(seriesPoints, function (seriesPoint) {\r\n            var point = seriesPoint.point;\r\n            if (point && $math.isInRectangle(point, { x: topLeft.x, y: topLeft.y, width: bottomRight.x - topLeft.x, height: bottomRight.y - topLeft.y })) {\r\n                filteredSeriesPoints.push({ point: point, series: seriesPoint.series });\r\n                sum += point.y;\r\n            }\r\n        });\r\n        seriesPoints = filteredSeriesPoints;\r\n        var firstSeries = this.series.getIndex(0);\r\n        var inversed = false;\r\n        if (firstSeries && firstSeries.yAxis && firstSeries.yAxis.renderer.inversed) {\r\n            inversed = true;\r\n        }\r\n        if (inversed) {\r\n            seriesPoints.sort(function (a, b) { return $number.order(a.point.y, b.point.y); });\r\n        }\r\n        else {\r\n            seriesPoints.sort(function (a, b) { return $number.order(b.point.y, a.point.y); });\r\n            seriesPoints.reverse();\r\n        }\r\n        var averageY = sum / seriesPoints.length;\r\n        var maxY = $utils.svgPointToDocument({ x: 0, y: 0 }, this.svgContainer.SVGContainer).y;\r\n        if (seriesPoints.length > 0) {\r\n            var top_1 = topLeft.y;\r\n            var bottom = bottomRight.y;\r\n            // TODO is this needed ?\r\n            $utils.spritePointToDocument({ x: 0, y: top_1 }, this);\r\n            var dropped = false;\r\n            if (averageY > top_1 + (bottom - top_1) / 2) {\r\n                var nextHeight = bottom;\r\n                for (var i = seriesPoints.length - 1; i >= 0; i--) {\r\n                    var series = seriesPoints[i].series;\r\n                    var tooltip = series.tooltip;\r\n                    var pointY = seriesPoints[i].point.y;\r\n                    tooltip.setBounds({ x: 0, y: -maxY, width: this.pixelWidth, height: nextHeight + maxY });\r\n                    if (tooltip.invalid) {\r\n                        tooltip.validate();\r\n                    }\r\n                    tooltip.toBack();\r\n                    nextHeight = $utils.spritePointToSvg({ x: 0, y: tooltip.label.pixelY - tooltip.pixelY + pointY - tooltip.pixelMarginTop }, tooltip).y;\r\n                    if (nextHeight < -maxY) {\r\n                        dropped = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (averageY <= top_1 + (bottom - top_1) / 2 || dropped) {\r\n                var nextY = top_1;\r\n                for (var i = 0, len = seriesPoints.length; i < len; i++) {\r\n                    var series = seriesPoints[i].series;\r\n                    var pointY = seriesPoints[i].point.y;\r\n                    var tooltip = series.tooltip;\r\n                    tooltip.setBounds({ x: 0, y: nextY, width: this.pixelWidth, height: bottom });\r\n                    if (tooltip.invalid) {\r\n                        tooltip.validate();\r\n                    }\r\n                    tooltip.toBack();\r\n                    nextY = $utils.spritePointToSvg({ x: 0, y: tooltip.label.pixelY + tooltip.label.measuredHeight - tooltip.pixelY + pointY + tooltip.pixelMarginBottom }, tooltip).y;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Shows tooltips for a list of axes at specific position.\r\n     *\r\n     * Position might be X coordinate for horizontal axes, and Y coordinate for\r\n     * vertical axes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axes      List of axes to show tooltip on\r\n     * @param position  Position (px)\r\n     */\r\n    XYChart.prototype.showAxisTooltip = function (axes, position, except) {\r\n        var _this = this;\r\n        $iter.each(axes.iterator(), function (axis) {\r\n            if (axis != except) {\r\n                if (_this.dataItems.length > 0 || axis.dataItems.length > 0) {\r\n                    axis.showTooltipAtPosition(position);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Recalculates the value range for the axis taking into account zoom level & inversed.\r\n     *\r\n     * @param axis   Axis\r\n     * @param range  Range\r\n     * @return Modified range\r\n     */\r\n    XYChart.prototype.getUpdatedRange = function (axis, range) {\r\n        if (!axis) {\r\n            return;\r\n        }\r\n        var start;\r\n        var end;\r\n        var inversed = axis.renderer.inversed;\r\n        if (inversed) {\r\n            $math.invertRange(range);\r\n            start = 1 - axis.end;\r\n            end = 1 - axis.start;\r\n        }\r\n        else {\r\n            start = axis.start;\r\n            end = axis.end;\r\n        }\r\n        var difference = end - start;\r\n        return {\r\n            start: start + range.start * difference,\r\n            end: start + range.end * difference\r\n        };\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user finishes zooming using chart\r\n     * cursor, e.g. zooms axes.\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorZoomEnd = function (event) {\r\n        var cursor = this.cursor;\r\n        var behavior = cursor.behavior;\r\n        if (behavior == \"zoomX\" || behavior == \"zoomXY\") {\r\n            var xRange = cursor.xRange;\r\n            if (xRange && this.xAxes.length > 0) {\r\n                xRange = this.getUpdatedRange(this.xAxes.getIndex(0), xRange);\r\n                xRange.priority = \"start\";\r\n                this.zoomAxes(this.xAxes, xRange);\r\n            }\r\n        }\r\n        if (behavior == \"zoomY\" || behavior == \"zoomXY\") {\r\n            var yRange = cursor.yRange;\r\n            if (yRange && this.yAxes.length > 0) {\r\n                yRange = this.getUpdatedRange(this.yAxes.getIndex(0), yRange);\r\n                yRange.priority = \"start\";\r\n                this.zoomAxes(this.yAxes, yRange);\r\n            }\r\n        }\r\n        this.handleHideCursor();\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user is panning chart plot using chart cursor.\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorPanStart = function (event) {\r\n        var xAxis = this.xAxes.getIndex(0);\r\n        if (xAxis) {\r\n            this._panStartXRange = { start: xAxis.start, end: xAxis.end };\r\n        }\r\n        var yAxis = this.yAxes.getIndex(0);\r\n        if (yAxis) {\r\n            this._panStartYRange = { start: yAxis.start, end: yAxis.end };\r\n        }\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user ends panning\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorPanEnd = function (event) {\r\n        var cursor = this.cursor;\r\n        var behavior = cursor.behavior;\r\n        if (this._panEndXRange && (behavior == \"panX\" || behavior == \"panXY\")) {\r\n            var panEndRange = this._panEndXRange;\r\n            var delta = 0;\r\n            if (panEndRange.start < 0) {\r\n                delta = panEndRange.start;\r\n            }\r\n            if (panEndRange.end > 1) {\r\n                delta = panEndRange.end - 1;\r\n            }\r\n            this.zoomAxes(this.xAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, true);\r\n            this._panEndXRange = undefined;\r\n            this._panStartXRange = undefined;\r\n        }\r\n        if (this._panEndYRange && (behavior == \"panY\" || behavior == \"panXY\")) {\r\n            var panEndRange = this._panEndYRange;\r\n            var delta = 0;\r\n            if (panEndRange.start < 0) {\r\n                delta = panEndRange.start;\r\n            }\r\n            if (panEndRange.end > 1) {\r\n                delta = panEndRange.end - 1;\r\n            }\r\n            this.zoomAxes(this.yAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, true);\r\n            this._panEndYRange = undefined;\r\n            this._panStartYRange = undefined;\r\n        }\r\n    };\r\n    XYChart.prototype.handleCursorCanceled = function () {\r\n        this._panEndXRange = undefined;\r\n        this._panStartXRange = undefined;\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user is panning chart plot using chart cursor.\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorPanning = function (event) {\r\n        var cursor = this.cursor;\r\n        var behavior = cursor.behavior;\r\n        var maxPanOut = cursor.maxPanOut;\r\n        if (this._panStartXRange && (behavior == \"panX\" || behavior == \"panXY\")) {\r\n            var panStartRange = this._panStartXRange;\r\n            var range = cursor.xRange;\r\n            var axisRange = this.getCommonAxisRange(this.xAxes);\r\n            var difference = (panStartRange.end - panStartRange.start);\r\n            var delta = range.start * (axisRange.end - axisRange.start);\r\n            var newStart = Math.max(-maxPanOut, delta + panStartRange.start);\r\n            var newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);\r\n            if (newStart <= 0) {\r\n                newEnd = newStart + difference;\r\n            }\r\n            if (newEnd >= 1) {\r\n                newStart = newEnd - difference;\r\n            }\r\n            var newRange = {\r\n                start: newStart,\r\n                end: newEnd\r\n            };\r\n            this._panEndXRange = newRange;\r\n            this.zoomAxes(this.xAxes, newRange, false, false, cursor.maxPanOut);\r\n        }\r\n        if (this._panStartYRange && (behavior == \"panY\" || behavior == \"panXY\")) {\r\n            var panStartRange = this._panStartYRange;\r\n            var range = cursor.yRange;\r\n            var axisRange = this.getCommonAxisRange(this.yAxes);\r\n            var difference = panStartRange.end - panStartRange.start;\r\n            var delta = range.start * (axisRange.end - axisRange.start);\r\n            var newStart = Math.max(-maxPanOut, delta + panStartRange.start);\r\n            var newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);\r\n            if (newStart <= 0) {\r\n                newEnd = newStart + difference;\r\n            }\r\n            if (newEnd >= 1) {\r\n                newStart = newEnd - difference;\r\n            }\r\n            var newRange = {\r\n                start: newStart,\r\n                end: newEnd\r\n            };\r\n            this._panEndYRange = newRange;\r\n            this.zoomAxes(this.yAxes, newRange, false, false, cursor.maxPanOut);\r\n        }\r\n        this.handleHideCursor();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.handleYAxisSet = function (series) {\r\n    };\r\n    /**\r\n     * Performs zoom and other operations when user starts zooming using chart\r\n     * cursor, e.g. zooms axes.\r\n     *\r\n     * @param event Cursor's event\r\n     */\r\n    XYChart.prototype.handleCursorZoomStart = function (event) {\r\n        // Nothing here\r\n        // This method is here only as a \"placeholder\" for extending classes to\r\n        // override if necessary\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"scrollbarX\", {\r\n        /**\r\n         * @return Scrollbar\r\n         */\r\n        get: function () {\r\n            return this._scrollbarX;\r\n        },\r\n        /**\r\n         * Horizontal (X) scrollbar.\r\n         *\r\n         * @param scrollbar Scrollbar\r\n         */\r\n        set: function (scrollbar) {\r\n            var _this = this;\r\n            if (this._scrollbarX) {\r\n                this.removeDispose(this._scrollbarX);\r\n            }\r\n            this._scrollbarX = scrollbar;\r\n            if (scrollbar) {\r\n                this._disposers.push(scrollbar);\r\n                scrollbar.parent = this.topAxesContainer;\r\n                scrollbar.shouldClone = false;\r\n                scrollbar.startGrip.exportable = false;\r\n                scrollbar.endGrip.exportable = false;\r\n                scrollbar.toBack();\r\n                scrollbar.orientation = \"horizontal\";\r\n                scrollbar.events.on(\"rangechanged\", this.handleXScrollbarChange, this, false);\r\n                // accessibility related\r\n                scrollbar.adapter.add(\"positionValue\", function (arg) {\r\n                    var xAxis = _this.xAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        arg.value = xAxis.getPositionLabel(xAxis.renderer.inversed\r\n                            ? 1 - arg.position\r\n                            : arg.position);\r\n                    }\r\n                    return arg;\r\n                });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"scrollbarY\", {\r\n        /**\r\n         * @return Scrollbar\r\n         */\r\n        get: function () {\r\n            return this._scrollbarY;\r\n        },\r\n        /**\r\n         * Vertical (Y) scrollbar.\r\n         *\r\n         * @param scrollbar Scrollbar\r\n         */\r\n        set: function (scrollbar) {\r\n            var _this = this;\r\n            if (this._scrollbarY) {\r\n                this.removeDispose(this._scrollbarY);\r\n            }\r\n            this._scrollbarY = scrollbar;\r\n            if (scrollbar) {\r\n                this._disposers.push(scrollbar);\r\n                scrollbar.parent = this.rightAxesContainer;\r\n                scrollbar.startGrip.exportable = false;\r\n                scrollbar.shouldClone = false;\r\n                scrollbar.endGrip.exportable = false;\r\n                scrollbar.toFront();\r\n                scrollbar.orientation = \"vertical\";\r\n                scrollbar.events.on(\"rangechanged\", this.handleYScrollbarChange, this, false);\r\n                // accessibility related\r\n                scrollbar.adapter.add(\"positionValue\", function (arg) {\r\n                    var yAxis = _this.yAxes.getIndex(0);\r\n                    if (yAxis) {\r\n                        arg.value = yAxis.getPositionLabel(arg.position);\r\n                    }\r\n                    return arg;\r\n                });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Zooms axes affected by the horizontal (X) scrollbar when the selection\r\n     * on it changes.\r\n     *\r\n     * @param event Scrollbar range change event\r\n     */\r\n    XYChart.prototype.handleXScrollbarChange = function (event) {\r\n        if (this.inited) {\r\n            var scrollbar = event.target;\r\n            var range = scrollbar.range;\r\n            if (range.start == 0) {\r\n                range.priority = \"start\";\r\n            }\r\n            if (range.end == 1) {\r\n                range.priority = \"end\";\r\n            }\r\n            range = this.zoomAxes(this.xAxes, range);\r\n            scrollbar.fixRange(range);\r\n        }\r\n    };\r\n    /**\r\n     * Zooms axes affected by the vertical (Y) scrollbar when the selection\r\n     * on it changes.\r\n     *\r\n     * @param event Scrollbar range change event\r\n     */\r\n    XYChart.prototype.handleYScrollbarChange = function (event) {\r\n        if (this.inited) {\r\n            var scrollbar = event.target;\r\n            var range = scrollbar.range;\r\n            if (range.end == 1) {\r\n                range.priority = \"end\";\r\n            }\r\n            if (range.start == 0) {\r\n                range.priority = \"start\";\r\n            }\r\n            range = this.zoomAxes(this.yAxes, range);\r\n            scrollbar.fixRange(range);\r\n        }\r\n    };\r\n    /**\r\n     * Zooms axes that are affected by to specific relative range.\r\n     *\r\n     * @param axes       List of axes to zoom\r\n     * @param range      Range of values to zoom to (0-1)\r\n     * @param instantly  If set to `true` will skip zooming animation\r\n     * @return Recalculated range that is common to all involved axes\r\n     */\r\n    XYChart.prototype.zoomAxes = function (axes, range, instantly, round, declination) {\r\n        var realRange = { start: 0, end: 1 };\r\n        this.showSeriesTooltip(); // hides\r\n        if (!this.dataInvalid) {\r\n            $iter.each(axes.iterator(), function (axis) {\r\n                if (axis.renderer.inversed) {\r\n                    range = $math.invertRange(range);\r\n                }\r\n                axis.hideTooltip(0);\r\n                if (round) {\r\n                    //let diff = range.end - range.start;\r\n                    if (axis instanceof CategoryAxis) {\r\n                        var cellWidth = axis.getCellEndPosition(0) - axis.getCellStartPosition(0);\r\n                        range.start = axis.roundPosition(range.start + cellWidth / 2 - (axis.startLocation) * cellWidth, axis.startLocation);\r\n                        range.end = axis.roundPosition(range.end - cellWidth / 2 + (1 - axis.endLocation) * cellWidth, axis.endLocation);\r\n                    }\r\n                    else {\r\n                        range.start = axis.roundPosition(range.start + 0.0001, 0, axis.startLocation);\r\n                        range.end = axis.roundPosition(range.end + 0.0001, 0, axis.endLocation);\r\n                    }\r\n                }\r\n                var axisRange = axis.zoom(range, instantly, instantly, declination);\r\n                if (axis.renderer.inversed) {\r\n                    axisRange = $math.invertRange(axisRange);\r\n                }\r\n                realRange = axisRange;\r\n            });\r\n        }\r\n        return realRange;\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"maskBullets\", {\r\n        /**\r\n         * @return Mask bullet container?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maskBullets\");\r\n        },\r\n        /**\r\n         * Indicates if bullet container is masked.\r\n         *\r\n         * If it is set to `true`, any bullets that do not fit into bullet container\r\n         * will be clipped off. Settting to `false` will allow bullets to \"spill out\"\r\n         * of the plot area so they are not cut off.\r\n         *\r\n         * @param value Mask bullet container?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"maskBullets\", value, true) && this.bulletsContainer) {\r\n                if (value) {\r\n                    this.bulletsContainer.mask = this._bulletMask;\r\n                }\r\n                else {\r\n                    this.bulletsContainer.mask = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"arrangeTooltips\", {\r\n        /**\r\n         * @return Arrange tooltips?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"arrangeTooltips\");\r\n        },\r\n        /**\r\n         * Indicates if chart should arrange series tooltips so that they would not\r\n         * overlap.\r\n         *\r\n         * If set to `true` (default), the chart will adjust vertical positions of\r\n         * all simultaneously shown tooltips to avoid overlapping.\r\n         *\r\n         * However, if you have a vertically-arranged chart, it might not make sense,\r\n         * because tooltips would most probably not be aligned horizontally. In this\r\n         * case it would probably be a good idea to set this setting to `false`.\r\n         *\r\n         * @default true\r\n         * @param value Arrange tooltips?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"arrangeTooltips\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles mouse wheel event.\r\n     *\r\n     * @param event  Original event\r\n     */\r\n    XYChart.prototype.handleWheel = function (event) {\r\n        var plotContainer = this.plotContainer;\r\n        var svgPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n        var plotPoint = $utils.svgPointToSprite(svgPoint, plotContainer);\r\n        var shift = event.shift.y;\r\n        this.handleWheelReal(shift, this.mouseWheelBehavior, plotPoint);\r\n    };\r\n    /**\r\n     * Handles mouse wheel event.\r\n     *\r\n     * @param event  Original event\r\n     */\r\n    XYChart.prototype.handleHorizontalWheel = function (event) {\r\n        var plotContainer = this.plotContainer;\r\n        var svgPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n        var plotPoint = $utils.svgPointToSprite(svgPoint, plotContainer);\r\n        this.handleWheelReal(event.shift.x, this.horizontalMouseWheelBehavior, plotPoint);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.handleWheelReal = function (shift, mouseWheelBehavior, plotPoint) {\r\n        if (shift != 0) {\r\n            var plotContainer = this.plotContainer;\r\n            var rangeX = this.getCommonAxisRange(this.xAxes);\r\n            var rangeY = this.getCommonAxisRange(this.yAxes);\r\n            var shiftStep = 0.05;\r\n            var maxPanOut = 0;\r\n            if (mouseWheelBehavior == \"panX\" || mouseWheelBehavior == \"panXY\") {\r\n                var differenceX = rangeX.end - rangeX.start;\r\n                var newStartX = Math.max(-maxPanOut, rangeX.start + shiftStep * shift / 100);\r\n                var newEndX = Math.min(rangeX.end + shiftStep * shift / 100, 1 + maxPanOut);\r\n                if (newStartX <= 0) {\r\n                    newEndX = newStartX + differenceX;\r\n                }\r\n                if (newEndX >= 1) {\r\n                    newStartX = newEndX - differenceX;\r\n                }\r\n                this.zoomAxes(this.xAxes, { start: newStartX, end: newEndX });\r\n            }\r\n            if (mouseWheelBehavior == \"panY\" || mouseWheelBehavior == \"panXY\") {\r\n                shift *= -1;\r\n                var differenceY = rangeY.end - rangeY.start;\r\n                var newStartY = Math.max(-maxPanOut, rangeY.start + shiftStep * shift / 100);\r\n                var newEndY = Math.min(rangeY.end + shiftStep * shift / 100, 1 + maxPanOut);\r\n                if (newStartY <= 0) {\r\n                    newEndY = newStartY + differenceY;\r\n                }\r\n                if (newEndY >= 1) {\r\n                    newStartY = newEndY - differenceY;\r\n                }\r\n                this.zoomAxes(this.yAxes, { start: newStartY, end: newEndY });\r\n            }\r\n            if (mouseWheelBehavior == \"zoomX\" || mouseWheelBehavior == \"zoomXY\") {\r\n                var locationX = plotPoint.x / plotContainer.maxWidth;\r\n                var newStartX = Math.max(-maxPanOut, rangeX.start - shiftStep * shift / 100 * locationX);\r\n                newStartX = Math.min(newStartX, rangeX.start + (rangeX.end - rangeX.start) * locationX - shiftStep * 0.05);\r\n                var newEndX = Math.min(rangeX.end + shiftStep * shift / 100 * (1 - locationX), 1 + maxPanOut);\r\n                newEndX = Math.max(newEndX, rangeX.start + (rangeX.end - rangeX.start) * locationX + shiftStep * 0.05);\r\n                this.zoomAxes(this.xAxes, { start: newStartX, end: newEndX });\r\n            }\r\n            if (mouseWheelBehavior == \"zoomY\" || mouseWheelBehavior == \"zoomXY\") {\r\n                var locationY = plotPoint.y / plotContainer.maxHeight;\r\n                var newStartY = Math.max(-maxPanOut, rangeY.start - shiftStep * shift / 100 * (1 - locationY));\r\n                newStartY = Math.min(newStartY, rangeY.start + (rangeY.end - rangeY.start) * locationY - shiftStep * 0.05);\r\n                var newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * locationY, 1 + maxPanOut);\r\n                newEndY = Math.max(newEndY, rangeY.start + (rangeY.end - rangeY.start) * locationY + shiftStep * 0.05);\r\n                this.zoomAxes(this.yAxes, { start: newStartY, end: newEndY });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"mouseWheelBehavior\", {\r\n        /**\r\n         * @return Mouse wheel behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"mouseWheelBehavior\");\r\n        },\r\n        /**\r\n         * Specifies action for when mouse wheel is used when over the chart.\r\n         *\r\n         * Options: Options: `\"zoomX\"`, `\"zoomY\"`, `\"zoomXY\"`, `\"panX\"`, `\"panY\"`, `\"panXY\"`, `\"none\"` (default).\r\n         *\r\n         * @default \"none\"\r\n         * @param mouse wheel behavior\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n                if (value != \"none\") {\r\n                    this._mouseWheelDisposer = this.plotContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer);\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer) {\r\n                        this.plotContainer.wheelable = false;\r\n                        this.plotContainer.hoverable = false;\r\n                        this._mouseWheelDisposer.dispose();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart.prototype, \"horizontalMouseWheelBehavior\", {\r\n        /**\r\n         * @return Horizontal mouse wheel behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"horizontalMouseWheelBehavior\");\r\n        },\r\n        /**\r\n         * Specifies action for when horizontal mouse wheel is used when over the chart.\r\n         *\r\n         * Options: Options: `\"zoomX\"`, `\"zoomY\"`, `\"zoomXY\"`, `\"panX\"`, `\"panY\"`, `\"panXY\"`, `\"none\"` (default).\r\n         *\r\n         * @default \"none\"\r\n         * @param mouse wheel behavior\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"horizontalMouseWheelBehavior\", value)) {\r\n                if (value != \"none\") {\r\n                    this._mouseWheelDisposer2 = this.plotContainer.events.on(\"wheel\", this.handleHorizontalWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer2);\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer2) {\r\n                        this.plotContainer.wheelable = false;\r\n                        this.plotContainer.hoverable = false;\r\n                        this._mouseWheelDisposer2.dispose();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * This function is called by the [[DataSource]]'s `dateFields` adapater\r\n     * so that particular chart types can popuplate this setting with their\r\n     * own type-specific data fields so they are parsed properly.\r\n     *\r\n     * @param fields  Array of date fields\r\n     * @return Array of date fields populated with chart's date fields\r\n     */\r\n    XYChart.prototype.dataSourceDateFields = function (fields) {\r\n        var _this = this;\r\n        // Process parent\r\n        fields = _super.prototype.dataSourceDateFields.call(this, fields);\r\n        // Check if we have any series with date-fields\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            fields = _this.populateDataSourceFields(fields, series.dataFields, [\"dateX\", \"dateY\", \"openDateX\", \"openDateY\"]);\r\n        });\r\n        return fields;\r\n    };\r\n    /**\r\n     * This function is called by the [[DataSource]]'s `numberFields` adapater\r\n     * so that particular chart types can popuplate this setting with their\r\n     * own type-specific data fields so they are parsed properly.\r\n     *\r\n     * @param value  Array of number fields\r\n     * @return Array of number fields populated with chart's number fields\r\n     */\r\n    XYChart.prototype.dataSourceNumberFields = function (fields) {\r\n        var _this = this;\r\n        fields = _super.prototype.dataSourceDateFields.call(this, fields);\r\n        // Check if we have any series with date-fields\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            fields = _this.populateDataSourceFields(fields, series.dataFields, [\"valueX\", \"valueY\", \"openValueX\", \"openValueY\"]);\r\n        });\r\n        return fields;\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYChart.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Save axis ranges for later processing\r\n            var xAxes = [];\r\n            var yAxes = [];\r\n            // Set up axes\r\n            if ($type.hasValue(config.xAxes) && $type.isArray(config.xAxes)) {\r\n                for (var i = 0, len = config.xAxes.length; i < len; i++) {\r\n                    if (!config.xAxes[i].type) {\r\n                        throw Error(\"[XYChart error] No type set for xAxes[\" + i + \"].\");\r\n                    }\r\n                    else if ($type.hasValue(config.xAxes[i][\"axisRanges\"])) {\r\n                        // Maybe convert string dates?\r\n                        for (var x = 0, len_1 = config.xAxes[i][\"axisRanges\"].length; x < len_1; x++) {\r\n                            var range = config.xAxes[i][\"axisRanges\"][x];\r\n                            if ($type.hasValue(range.date) && $type.isString(range.date)) {\r\n                                range.date = this.dateFormatter.parse(range.date);\r\n                            }\r\n                            if ($type.hasValue(range.endDate) && $type.isString(range.endDate)) {\r\n                                range.endDate = this.dateFormatter.parse(range.endDate);\r\n                            }\r\n                        }\r\n                        xAxes.push({\r\n                            axisRanges: config.xAxes[i][\"axisRanges\"],\r\n                            index: i\r\n                        });\r\n                        delete (config.xAxes[i][\"axisRanges\"]);\r\n                    }\r\n                }\r\n            }\r\n            if ($type.hasValue(config.yAxes) && $type.isArray(config.yAxes)) {\r\n                for (var i = 0, len = config.yAxes.length; i < len; i++) {\r\n                    if (!config.yAxes[i].type) {\r\n                        throw Error(\"[XYChart error] No type set for yAxes[\" + i + \"].\");\r\n                    }\r\n                    else if ($type.hasValue(config.yAxes[i][\"axisRanges\"])) {\r\n                        // Maybe convert string dates?\r\n                        for (var x = 0, len_2 = config.yAxes[i][\"axisRanges\"].length; x < len_2; x++) {\r\n                            var range = config.yAxes[i][\"axisRanges\"][x];\r\n                            if ($type.hasValue(range.date) && $type.isString(range.date)) {\r\n                                range.date = this.dateFormatter.parse(range.date);\r\n                            }\r\n                            if ($type.hasValue(range.endDate) && $type.isString(range.endDate)) {\r\n                                range.endDate = this.dateFormatter.parse(range.endDate);\r\n                            }\r\n                        }\r\n                        yAxes.push({\r\n                            axisRanges: config.yAxes[i][\"axisRanges\"],\r\n                            index: i\r\n                        });\r\n                        delete (config.yAxes[i][\"axisRanges\"]);\r\n                    }\r\n                }\r\n            }\r\n            // Set up series\r\n            if ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    config.series[i].type = config.series[i].type || \"LineSeries\";\r\n                }\r\n            }\r\n            // Set up cursor\r\n            if ($type.hasValue(config.cursor) && !$type.hasValue(config.cursor.type)) {\r\n                config.cursor.type = \"XYCursor\";\r\n            }\r\n            // Set up scrollbars\r\n            if ($type.hasValue(config.scrollbarX) && !$type.hasValue(config.scrollbarX.type)) {\r\n                config.scrollbarX.type = \"Scrollbar\";\r\n            }\r\n            if ($type.hasValue(config.scrollbarY) && !$type.hasValue(config.scrollbarY.type)) {\r\n                config.scrollbarY.type = \"Scrollbar\";\r\n            }\r\n            _super.prototype.processConfig.call(this, config);\r\n            // Finish up with ranges.\r\n            // We need to do this here because series are processed last in JSON\r\n            // config. Therefore their respective objects are not yet are available\r\n            // when axis (and respectively their ranges) are being processed.\r\n            if (yAxes.length) {\r\n                for (var i = 0, len = yAxes.length; i < len; i++) {\r\n                    this.yAxes.getIndex(yAxes[i].index).config = {\r\n                        axisRanges: yAxes[i].axisRanges\r\n                    };\r\n                }\r\n            }\r\n            if (xAxes.length) {\r\n                for (var i = 0, len = xAxes.length; i < len; i++) {\r\n                    this.xAxes.getIndex(xAxes[i].index).config = {\r\n                        axisRanges: xAxes[i].axisRanges\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    XYChart.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"scrollbarX\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"scrollbarX\") {\r\n            return -1;\r\n        }\r\n        else if (a == \"scrollbarY\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"scrollbarY\") {\r\n            return -1;\r\n        }\r\n        else if (a == \"cursor\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"cursor\") {\r\n            return -1;\r\n        }\r\n        else if (a == \"series\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"series\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    /**\r\n     * Creates a new Series of type suitable for this chart.\r\n     *\r\n     * @return New series\r\n     */\r\n    XYChart.prototype.createSeries = function () {\r\n        return new XYSeries();\r\n    };\r\n    Object.defineProperty(XYChart.prototype, \"zoomOutButton\", {\r\n        /**\r\n         * @return Zoom out button\r\n         */\r\n        get: function () {\r\n            return this._zoomOutButton;\r\n        },\r\n        /**\r\n         * A [[Button]] element that is used for zooming out the chart.\r\n         *\r\n         * This button appears only when chart is zoomed in, and disappears\r\n         * autoamatically when it is zoome dout.\r\n         *\r\n         * @param button  Zoom out button\r\n         */\r\n        set: function (button) {\r\n            var _this = this;\r\n            this._zoomOutButton = button;\r\n            if (button) {\r\n                button.events.on(\"hit\", function () {\r\n                    _this.zoomAxes(_this.xAxes, { start: 0, end: 1 });\r\n                    _this.zoomAxes(_this.yAxes, { start: 0, end: 1 });\r\n                }, undefined, false);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all parameters from another [[XYChart]].\r\n     *\r\n     * @param source Source XYChart\r\n     */\r\n    XYChart.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        source.xAxes.each(function (axis) {\r\n            _this.xAxes.push(axis.clone());\r\n        });\r\n        source.yAxes.each(function (axis) {\r\n            _this.yAxes.push(axis.clone());\r\n        });\r\n        //this.xAxes.copyFrom(source.xAxes);\r\n        //this.yAxes.copyFrom(source.yAxes);\r\n        _super.prototype.copyFrom.call(this, source);\r\n        //this.zoomOutButton.copyFrom(source.zoomOutButton);\r\n        if (source.cursor) {\r\n            this.cursor = source.cursor.clone();\r\n        }\r\n        if (source.scrollbarX) {\r\n            this.scrollbarX = source.scrollbarX.clone();\r\n        }\r\n        if (source.scrollbarY) {\r\n            this.scrollbarY = source.scrollbarY.clone();\r\n        }\r\n        //@todo copy all container properties\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        var scrollbarX = this.scrollbarX;\r\n        if (scrollbarX && scrollbarX instanceof XYChartScrollbar) {\r\n            scrollbarX.scrollbarChart.disposeData();\r\n        }\r\n        var scrollbarY = this.scrollbarY;\r\n        if (scrollbarY && scrollbarY instanceof XYChartScrollbar) {\r\n            scrollbarY.scrollbarChart.disposeData();\r\n        }\r\n        this.xAxes.each(function (axis) {\r\n            axis.disposeData();\r\n        });\r\n        this.yAxes.each(function (axis) {\r\n            axis.disposeData();\r\n        });\r\n    };\r\n    /**\r\n     * Adds one or several (array) of data items to the existing data.\r\n     *\r\n     * @param rawDataItem One or many raw data item objects\r\n     */\r\n    XYChart.prototype.addData = function (rawDataItem, removeCount) {\r\n        if (this.scrollbarX instanceof XYChartScrollbar) {\r\n            this.addScrollbarData(this.scrollbarX, removeCount);\r\n        }\r\n        if (this.scrollbarY instanceof XYChartScrollbar) {\r\n            this.addScrollbarData(this.scrollbarY, removeCount);\r\n        }\r\n        _super.prototype.addData.call(this, rawDataItem, removeCount);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.addScrollbarData = function (scrollbar, removeCount) {\r\n        var chart = scrollbar.scrollbarChart;\r\n        chart._parseDataFrom = chart.data.length;\r\n        chart.invalidateData();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChart.prototype.removeScrollbarData = function (scrollbar, removeCount) {\r\n        var chart = scrollbar.scrollbarChart;\r\n        if ($type.isNumber(removeCount)) {\r\n            while (removeCount > 0) {\r\n                var dataItem = this.dataItems.getIndex(0);\r\n                if (dataItem) {\r\n                    chart.dataItems.remove(dataItem);\r\n                }\r\n                chart.dataUsers.each(function (dataUser) {\r\n                    var dataItem = dataUser.dataItems.getIndex(0);\r\n                    if (dataItem) {\r\n                        dataUser.dataItems.remove(dataItem);\r\n                    }\r\n                });\r\n                chart._parseDataFrom--;\r\n                removeCount--;\r\n            }\r\n            chart.invalidateData();\r\n        }\r\n    };\r\n    /**\r\n     * Removes elements from the beginning of data\r\n     *\r\n     * @param count number of elements to remove\r\n     */\r\n    XYChart.prototype.removeData = function (count) {\r\n        if (this.scrollbarX instanceof XYChartScrollbar) {\r\n            this.removeScrollbarData(this.scrollbarX, count);\r\n        }\r\n        if (this.scrollbarY instanceof XYChartScrollbar) {\r\n            this.removeScrollbarData(this.scrollbarY, count);\r\n        }\r\n        _super.prototype.removeData.call(this, count);\r\n    };\r\n    /**\r\n     * @param  value  Tap to activate?\r\n     */\r\n    XYChart.prototype.setTapToActivate = function (value) {\r\n        _super.prototype.setTapToActivate.call(this, value);\r\n        if (this.cursor) {\r\n            this.cursor.interactions.isTouchProtected = value;\r\n            this.plotContainer.interactions.isTouchProtected = value;\r\n        }\r\n    };\r\n    XYChart.prototype.handleTapToActivate = function () {\r\n        _super.prototype.handleTapToActivate.call(this);\r\n        if (this.cursor) {\r\n            this.cursor.interactions.isTouchProtected = false;\r\n            this.plotContainer.interactions.isTouchProtected = false;\r\n        }\r\n    };\r\n    XYChart.prototype.handleTapToActivateDeactivation = function () {\r\n        _super.prototype.handleTapToActivateDeactivation.call(this);\r\n        if (this.cursor) {\r\n            this.cursor.interactions.isTouchProtected = true;\r\n            this.plotContainer.interactions.isTouchProtected = true;\r\n        }\r\n    };\r\n    return XYChart;\r\n}(SerialChart));\r\nexport { XYChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChart\"] = XYChart;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Remove horizontal scrollbar on narrow charts.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof XYChart && target.scrollbarX) {\r\n            var state = target.states.create(stateId);\r\n            var sbstate = target.scrollbarX.states.create(stateId);\r\n            sbstate.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove vertical scrollbar on short charts.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof XYChart && target.scrollbarY) {\r\n            var state = target.states.create(stateId);\r\n            var sbstate = target.scrollbarY.states.create(stateId);\r\n            sbstate.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=XYChart.js.map","/**\r\n * Line series segment module.\r\n * @todo Add description about what this is\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a line series segment.\r\n *\r\n * A line segment can be used to apply different properties to a part of the\r\n * line series, between two data points.\r\n *\r\n * @see {@link ILineSeriesSegmentEvents} for a list of available events\r\n * @see {@link ILineSeriesSegmentAdapters} for a list of available Adapters\r\n * @todo Example\r\n */\r\nvar LineSeriesSegment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LineSeriesSegment, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LineSeriesSegment() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"LineSeriesSegment\";\r\n        // Set defaults\r\n        _this.isMeasured = false;\r\n        _this.interactionsEnabled = false;\r\n        _this.layout = \"none\";\r\n        // Create fill element\r\n        var fillSprite = _this.createChild(Sprite);\r\n        _this.fillSprite = fillSprite;\r\n        fillSprite.shouldClone = false;\r\n        fillSprite.setElement(_this.paper.add(\"path\"));\r\n        fillSprite.isMeasured = false;\r\n        _this._disposers.push(fillSprite);\r\n        // Create line element\r\n        var strokeSprite = _this.createChild(Sprite);\r\n        _this.strokeSprite = strokeSprite;\r\n        strokeSprite.shouldClone = false;\r\n        strokeSprite.fill = color();\r\n        strokeSprite.setElement(_this.paper.add(\"path\"));\r\n        strokeSprite.isMeasured = false;\r\n        _this._disposers.push(strokeSprite);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the series segment.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param points       Points to connect\r\n     * @param closePoints  ?\r\n     * @param smoothnessX  Horizontal bezier setting (?)\r\n     * @param smoothnessY  Vertical bezier setting (?)\r\n     */\r\n    LineSeriesSegment.prototype.drawSegment = function (points, closePoints, smoothnessX, smoothnessY) {\r\n        if (!this.disabled) {\r\n            if (points.length > 0 && closePoints.length > 0) {\r\n                // first moveTo helps to avoid Chrome straight line in the mask bug.\r\n                var path = $path.moveTo({ x: points[0].x - 0.2, y: points[0].y - 0.2 }) + $path.moveTo(points[0]) + new $smoothing.Tension(smoothnessX, smoothnessY).smooth(points);\r\n                if (this.strokeOpacity == 0 || this.strokeSprite.strokeOpacity == 0) {\r\n                    // like this and not if != 0, otherwise ranges stroke won't be drawn.\r\n                }\r\n                else {\r\n                    this.strokeSprite.path = path;\r\n                }\r\n                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n                    path += $path.lineTo(closePoints[0]) + new $smoothing.Tension(smoothnessX, smoothnessY).smooth(closePoints);\r\n                    path += $path.lineTo(points[0]);\r\n                    path += $path.closePath();\r\n                    this.fillSprite.path = path;\r\n                }\r\n            }\r\n            else {\r\n                this.fillSprite.path = \"\";\r\n                this.strokeSprite.path = \"\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies properties from a [[Sprite]] to both line and fill elements.\r\n     *\r\n     * @param source Source [[Sprite]] to copy properties from\r\n     */\r\n    LineSeriesSegment.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        var lineElement = this.strokeSprite;\r\n        $object.copyProperties(source, lineElement.properties, visualProperties);\r\n        lineElement.events.copyFrom(source.strokeSprite.events);\r\n        lineElement.fillOpacity = 0;\r\n        var fillElement = this.fillSprite;\r\n        $object.copyProperties(source, fillElement.properties, visualProperties);\r\n        fillElement.events.copyFrom(source.fillSprite.events);\r\n        fillElement.strokeOpacity = 0;\r\n    };\r\n    return LineSeriesSegment;\r\n}(Container));\r\nexport { LineSeriesSegment };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LineSeriesSegment\"] = LineSeriesSegment;\r\n//# sourceMappingURL=LineSeriesSegment.js.map","/**\r\n * Line series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYSeries, XYSeriesDataItem } from \"./XYSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { LineSeriesSegment } from \"./LineSeriesSegment\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[LineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar LineSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LineSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LineSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"LineSeriesDataItem\";\r\n        return _this;\r\n    }\r\n    return LineSeriesDataItem;\r\n}(XYSeriesDataItem));\r\nexport { LineSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a line graph.\r\n *\r\n * @see {@link ILineSeriesEvents} for a list of available Events\r\n * @see {@link ILineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar LineSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LineSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LineSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Minimum distance in pixels between two adjacent points.\r\n         *\r\n         * If the distance is less than this setting, a point is skipped.\r\n         *\r\n         * This allows acceptable performance with huge amounts of data points.\r\n         *\r\n         * @default 0.5\r\n         */\r\n        _this.minDistance = 0.5;\r\n        _this.segments = new ListTemplate(_this.createSegment());\r\n        _this.segments.template.applyOnClones = true;\r\n        _this._disposers.push(new ListDisposer(_this.segments));\r\n        _this._disposers.push(_this.segments.template);\r\n        _this._segmentsIterator = new $iter.ListIterator(_this.segments, function () { return _this.segments.create(); });\r\n        _this._segmentsIterator.createNewItems = true;\r\n        _this.className = \"LineSeries\";\r\n        _this.strokeOpacity = 1;\r\n        _this.fillOpacity = 0;\r\n        _this.connect = true;\r\n        _this.tensionX = 1;\r\n        _this.tensionY = 1;\r\n        _this.autoGapCount = 1.1;\r\n        _this.segmentsContainer = _this.mainContainer.createChild(Container);\r\n        _this.segmentsContainer.isMeasured = false;\r\n        // line series might have multiple segments and it has a separate sprite for fill and stroke for each segment. So we need to observe all the changes on series and set them on the segments\r\n        // todo: we need list here, otherwise everything will be redrawn event on change of properties like tooltipX or similar.\r\n        // this.addEventListener(SpriteEvent.PROPERTY_CHANGED, this.validateDataElements, false, this);\r\n        _this.bulletsContainer.toFront();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    LineSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Line Series\");\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    LineSeries.prototype.createSegment = function () {\r\n        return new LineSeriesSegment();\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    LineSeries.prototype.createDataItem = function () {\r\n        return new LineSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits data item's working values.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @param index     Data item's index\r\n     */\r\n    LineSeries.prototype.setInitialWorkingValues = function (dataItem) {\r\n        // this makes data items animate when added\r\n        var yAxis = this._yAxis.get();\r\n        var xAxis = this._xAxis.get();\r\n        if (this.appeared && this.visible) {\r\n            var previousDataItem = this.dataItems.getIndex(dataItem.index - 1);\r\n            dataItem.component = this; // as these values are set before, we don't know component yet\r\n            if (this.baseAxis == xAxis) {\r\n                if (yAxis instanceof ValueAxis) {\r\n                    var initialY = yAxis.minZoomed;\r\n                    if (previousDataItem) {\r\n                        initialY = previousDataItem.values[\"valueY\"].workingValue;\r\n                    }\r\n                    // this makes line animate from previous point to newly added point\r\n                    dataItem.setWorkingValue(\"valueY\", initialY, 0);\r\n                    dataItem.setWorkingValue(\"valueY\", dataItem.values.valueY.value);\r\n                    if (xAxis instanceof DateAxis) {\r\n                        dataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX - 1, 0); // instantly move it to previous\r\n                        dataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX); // animate to it's location\r\n                    }\r\n                }\r\n            }\r\n            if (this.baseAxis == yAxis) {\r\n                if (xAxis instanceof ValueAxis) {\r\n                    var initialX = xAxis.minZoomed;\r\n                    if (previousDataItem) {\r\n                        initialX = previousDataItem.values[\"valueX\"].workingValue;\r\n                    }\r\n                    dataItem.setWorkingValue(\"valueX\", initialX, 0);\r\n                    dataItem.setWorkingValue(\"valueX\", dataItem.values.valueX.value);\r\n                    if (yAxis instanceof DateAxis) {\r\n                        dataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateX - 1, 0); // instantly move it to previous\r\n                        dataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateY); // animate to it's location\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.baseAxis == xAxis) {\r\n                if (yAxis instanceof ValueAxis) {\r\n                    if (xAxis instanceof DateAxis) {\r\n                        dataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX);\r\n                    }\r\n                    if (xAxis instanceof CategoryAxis) {\r\n                        dataItem.setWorkingLocation(\"categoryX\", dataItem.locations.categoryX);\r\n                    }\r\n                }\r\n            }\r\n            if (this.baseAxis == yAxis) {\r\n                if (xAxis instanceof ValueAxis) {\r\n                    if (yAxis instanceof DateAxis) {\r\n                        dataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateY);\r\n                    }\r\n                    if (yAxis instanceof CategoryAxis) {\r\n                        dataItem.setWorkingLocation(\"categoryY\", dataItem.locations.categoryY);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    LineSeries.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        _super.prototype.updateLegendValue.call(this, dataItem, notRange);\r\n        //This is hack to save some methos, used to set tooltip color source only\r\n        if (dataItem && dataItem.segment) {\r\n            this.tooltipColorSource = dataItem.segment;\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    LineSeries.prototype.validate = function () {\r\n        var _this = this;\r\n        _super.prototype.validate.call(this);\r\n        if (this.xAxis && this.yAxis) {\r\n            this._segmentsIterator.reset();\r\n            this.openSegmentWrapper(this._adjustedStartIndex);\r\n            $iter.each(this.axisRanges.iterator(), function (range) {\r\n                _this.openSegmentWrapper(_this._adjustedStartIndex, range);\r\n            });\r\n            $iter.each(this._segmentsIterator.iterator(), function (segment) {\r\n                segment.__disabled = true;\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * [sliceData description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    LineSeries.prototype.sliceData = function () {\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        // we need extra one item to both sides with values for line series, otherwise the line will not continue out of bounds of the chart while scrolling\r\n        // find first to the left\r\n        // TODO use iterator instead\r\n        for (var i = this.startIndex - 1; i >= 0; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            if (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n                startIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        this._adjustedStartIndex = this.findAdjustedIndex(startIndex, [\"stroke\", \"strokeWidth\", \"strokeDasharray\", \"strokeOpacity\", \"fill\", \"fillOpacity\", \"opacity\"]);\r\n        // find first to the right\r\n        // TODO use iterator instead\r\n        for (var i = this.endIndex, len = this.dataItems.length; i < len; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            if (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n                endIndex = i + 1;\r\n                break;\r\n            }\r\n        }\r\n        this._workingStartIndex = startIndex;\r\n        this._workingEndIndex = endIndex;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    LineSeries.prototype.findAdjustedIndex = function (adjustedIndex, properties) {\r\n        var _this = this;\r\n        var propertyFields = this.propertyFields;\r\n        var startIndex = adjustedIndex;\r\n        $array.each(properties, function (property) {\r\n            if ($type.hasValue(propertyFields[property])) {\r\n                for (var i = startIndex; i >= 0; i--) {\r\n                    var dataItem = _this.dataItems.getIndex(i);\r\n                    if (dataItem) {\r\n                        if ($type.hasValue(dataItem.properties[property])) {\r\n                            if (adjustedIndex > i) {\r\n                                adjustedIndex = i;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return adjustedIndex;\r\n    };\r\n    /**\r\n     * Wraps openSegment call with iterative solution to prevent stack overflow\r\n     *\r\n     * @param openIndex  Index\r\n     * @param axisRange  Range\r\n     */\r\n    LineSeries.prototype.openSegmentWrapper = function (openIndex, axisRange) {\r\n        var params = {\r\n            \"index\": openIndex,\r\n            \"axisRange\": axisRange\r\n        };\r\n        do {\r\n            params = this.openSegment(params.index, params.axisRange);\r\n        } while (params);\r\n    };\r\n    /**\r\n     * [openSegment description]\r\n     *\r\n     * @todo Description\r\n     * @param openIndex  [description]\r\n     * @param axisRange  [description]\r\n     */\r\n    LineSeries.prototype.openSegment = function (openIndex, axisRange) {\r\n        var addToClose = false;\r\n        var points = [];\r\n        openIndex = Math.min(openIndex, this.dataItems.length);\r\n        var endIndex = Math.min(this._workingEndIndex, this.dataItems.length);\r\n        this._workingEndIndex = Math.min(this._workingEndIndex, this.dataItems.length);\r\n        var closeIndex;\r\n        var propertiesChanged = false;\r\n        var segment = this._segmentsIterator.getFirst();\r\n        segment.__disabled = false;\r\n        if (axisRange) {\r\n            segment.parent = axisRange.contents;\r\n            $object.copyProperties(axisRange.contents, segment, visualProperties);\r\n        }\r\n        else {\r\n            $object.copyProperties(this, segment, visualProperties);\r\n            segment.filters.clear();\r\n            segment.parent = this.segmentsContainer;\r\n        }\r\n        var connect = this.connect;\r\n        var valuesFound = false; // some flag to avoid multiple closes if no values found\r\n        for (var i = openIndex; i < endIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            dataItem.segment = segment;\r\n            if (dataItem.hasProperties) {\r\n                // if this is first item of segment\r\n                if (i == openIndex) {\r\n                    this.updateSegmentProperties(dataItem.properties, segment);\r\n                }\r\n                else {\r\n                    // this time we only need to know if properties changed, so we don't pass segment\r\n                    propertiesChanged = this.updateSegmentProperties(dataItem.properties, segment, true);\r\n                }\r\n            }\r\n            if (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n                this.addPoints(points, dataItem, this.xField, this.yField);\r\n                valuesFound = true;\r\n            }\r\n            else {\r\n                // if no values in first data item, go to next\r\n                if (i == openIndex) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    // stop cycle\r\n                    if (!connect && valuesFound) {\r\n                        closeIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            closeIndex = i;\r\n            if (this.baseAxis instanceof DateAxis) {\r\n                var next = this.dataItems.getIndex(i + 1);\r\n                if (next && this.baseAxis.makeGap(next, dataItem)) {\r\n                    addToClose = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (propertiesChanged) {\r\n                break;\r\n            }\r\n        }\r\n        return this.closeSegment(segment, points, openIndex, closeIndex, axisRange, addToClose);\r\n    };\r\n    /**\r\n     * [addPoints description]\r\n     *\r\n     * @todo Description\r\n     * @param points    [description]\r\n     * @param dataItem  [description]\r\n     * @param xField    [description]\r\n     * @param yField    [description]\r\n     * @param backwards [description]\r\n     */\r\n    LineSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {\r\n        var point = this.getPoint(dataItem, xField, yField, dataItem.workingLocations[xField], dataItem.workingLocations[yField]);\r\n        if (!backwards) {\r\n            dataItem.point = point;\r\n        }\r\n        points.push(point);\r\n    };\r\n    /**\r\n     * [closeSegment description]\r\n     *\r\n     * @todo Description\r\n     * @param segment    [description]\r\n     * @param points     [description]\r\n     * @param openIndex  [description]\r\n     * @param closeIndex [description]\r\n     * @param axisRange  [description]\r\n     */\r\n    LineSeries.prototype.closeSegment = function (segment, points, openIndex, closeIndex, axisRange, add) {\r\n        var closePoints = [];\r\n        if (this.dataFields[this._xOpenField] ||\r\n            this.dataFields[this._yOpenField] ||\r\n            this.stacked) {\r\n            for (var i = closeIndex; i >= openIndex; i--) {\r\n                var dataItem = this.dataItems.getIndex(i);\r\n                if (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) { // not sure, this means that open point will only be added if value is also set for this point, but maybe it's ok.\r\n                    this.addPoints(closePoints, dataItem, this.xOpenField, this.yOpenField, true);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var baseAxis = this.baseAxis;\r\n            var count = points.length;\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (count > 0) {\r\n                if (baseAxis == xAxis) {\r\n                    closePoints.push({ x: points[count - 1].x, y: yAxis.basePoint.y }); // last x\r\n                    closePoints.push({ x: points[0].x, y: yAxis.basePoint.y }); // first x\r\n                }\r\n                else {\r\n                    closePoints.push({ x: xAxis.basePoint.x, y: points[count - 1].y }); // last y\r\n                    closePoints.push({ x: xAxis.basePoint.x, y: points[0].y }); // first y\r\n                }\r\n            }\r\n        }\r\n        this.drawSegment(segment, points, closePoints);\r\n        if (add) {\r\n            closeIndex++;\r\n        }\r\n        if (closeIndex < this._workingEndIndex - 1) {\r\n            return { \"index\": closeIndex, \"axisRange\": axisRange };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Draws the line segment.\r\n     *\r\n     * @param segment     Segment\r\n     * @param points      Segment points\r\n     * @param closePoints Segment close points\r\n     */\r\n    LineSeries.prototype.drawSegment = function (segment, points, closePoints) {\r\n        segment.drawSegment(points, closePoints, this.tensionX, this.tensionY);\r\n    };\r\n    /**\r\n     * Segement will get its colors from `this.dataItem`, as thats how\r\n     * `getPropertyValue()` method works.\r\n     *\r\n     * We pass `lineSeriesDataItem.properties` as item here each time when a flag\r\n     * `hasProperties` is set to `true` on data item (this means it can contain\r\n     * some properties set).\r\n     *\r\n     * @param itemProperties  Item properties\r\n     * @param segment         Segment\r\n     * @return Properties changed?\r\n     */\r\n    LineSeries.prototype.updateSegmentProperties = function (itemProperties, segment, checkOnly) {\r\n        var changed = false;\r\n        $object.each(itemProperties, function (propertyName, value) {\r\n            // some value must be defined\r\n            if ($type.hasValue(value)) {\r\n                var currentValue = segment[propertyName];\r\n                var currentValueStr = void 0;\r\n                // current value can be Color, number, anything. So we check if it has toString, otherwise just do String().\r\n                // toString() will return hex if it's color. The only problem is that it will return lowercased hex and if we have uppercase in data, it will think that it changed\r\n                if (currentValue) {\r\n                    if (currentValue.toString) {\r\n                        currentValueStr = currentValue.toString();\r\n                    }\r\n                    else {\r\n                        currentValueStr = currentValue; // not doing String(currentValue) as this will make all Objects the same\r\n                    }\r\n                }\r\n                var valueStr = void 0;\r\n                if (value) {\r\n                    if (value.toString) {\r\n                        valueStr = value.toString();\r\n                    }\r\n                    else {\r\n                        valueStr = value; // not doing String(currentValue) as this will make all Objects the same\r\n                    }\r\n                }\r\n                if (currentValue == value || (currentValueStr != undefined && valueStr != undefined && currentValueStr == valueStr)) {\r\n                    // void\r\n                }\r\n                else {\r\n                    if (!checkOnly) {\r\n                        segment[propertyName] = value;\r\n                    }\r\n                    changed = true;\r\n                }\r\n            }\r\n        });\r\n        return changed;\r\n    };\r\n    Object.defineProperty(LineSeries.prototype, \"connect\", {\r\n        /**\r\n         * @return Connect?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"connect\");\r\n        },\r\n        /**\r\n         * Connect the lines over empty data points?\r\n         *\r\n         * If set to `true` the line will connect two adjacent data points by a\r\n         * straight line. Even if there are data points with missing values\r\n         * in-between.\r\n         *\r\n         * If you set this to `false`, the line will break when there are missing\r\n         * values.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#Line_series_with_gaps} for more information about this feature\r\n         * @default true\r\n         * @param value  Connect?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"connect\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"tensionX\", {\r\n        /**\r\n         * @return Horizontal tension (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tensionX\");\r\n        },\r\n        /**\r\n         * Horizontal tension setting of the line (0-1).\r\n         *\r\n         * Can be used to create smoothed lines. It works like this:\r\n         *\r\n         * Accepted values are in the range between 0 and 1. The biggest value (1)\r\n         * will mean that the \"tension\" is very high, so the line is maximally\r\n         * attracted to the points it connects, hence the straight line.\r\n         *\r\n         * Using smaller numbers will \"relax\" the tension, creating some curving.\r\n         *\r\n         * The smaller the tension setting, the more relaxed the line and the more\r\n         * wide the curve.\r\n         *\r\n         * This setting is for horizontal tension, meaning the curve will bend in\r\n         * such way that it never goes below or above connecting points. To enable\r\n         * vertical bending as well, use `tensionY`.\r\n         *\r\n         * @default 1\r\n         * @param value  Horizontal tension (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tensionX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSeries.prototype, \"tensionY\", {\r\n        /**\r\n         * @return Vertical tension (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tensionY\");\r\n        },\r\n        /**\r\n         * Can be used to create smoothed lines. It works like this:\r\n         *\r\n         * Accepted values are in the range between 0 and 1. The biggest value (1)\r\n         * will mean that the \"tension\" is very high, so the line is maximally\r\n         * attracted to the points it connects, hence the straight line.\r\n         *\r\n         * Using smaller numbers will \"relax\" the tension, creating some curving.\r\n         *\r\n         * The smaller the tension setting, the more relaxed the line and the more\r\n         * wide the curve.\r\n         *\r\n         * This setting is for vertical tension, meaning the curve might bend in\r\n         * such way that it will go below or above connected points.\r\n         *\r\n         * Combine this setting with `tensionX` to create beautifully looking\r\n         * smoothed line series.\r\n         *\r\n         * @default 1\r\n         * @param value  Vertical tension (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tensionY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    LineSeries.prototype.createLegendMarker = function (marker) {\r\n        var _this = this;\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.disposeChildren();\r\n        var line = marker.createChild(Line);\r\n        line.shouldClone = false;\r\n        //line.copyFrom(<any>this); coppies events which is not good\r\n        $object.copyProperties(this, line, visualProperties);\r\n        line.x2 = w;\r\n        line.y = h / 2;\r\n        line.visible = true;\r\n        if (this.fillOpacity > 0) {\r\n            var fill = marker.createChild(Rectangle);\r\n            //fill.copyFrom(<any>this); coppies events which is not good\r\n            $object.copyProperties(this, fill, visualProperties);\r\n            fill.width = w;\r\n            fill.height = h;\r\n            fill.y = 0;\r\n            fill.strokeOpacity = 0;\r\n            fill.visible = true;\r\n            line.y = 0;\r\n        }\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = this.stroke;\r\n        legendDataItem.colorOrig = this.fill;\r\n        $iter.eachContinue(this.bullets.iterator(), function (bullet) {\r\n            if ((bullet instanceof Bullet) && !bullet.copyToLegendMarker) {\r\n                return false;\r\n            }\r\n            var hasLabels = false;\r\n            if (bullet instanceof Container) {\r\n                // do not copy bullets with labels\r\n                $iter.each(bullet.children.iterator(), function (child) {\r\n                    if (child instanceof Label) {\r\n                        hasLabels = true;\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n            if (!hasLabels) {\r\n                var clone = bullet.clone();\r\n                clone.parent = marker;\r\n                clone.isMeasured = true;\r\n                clone.tooltipText = undefined;\r\n                clone.x = w / 2;\r\n                if (_this.fillOpacity > 0) {\r\n                    clone.y = 0;\r\n                }\r\n                else {\r\n                    clone.y = h / 2;\r\n                }\r\n                clone.visible = true;\r\n                // otherwise will not transit to color after hiding\r\n                if (!$type.hasValue(clone.fill)) {\r\n                    clone.fill = _this.fill;\r\n                }\r\n                if (!$type.hasValue(clone.stroke)) {\r\n                    clone.stroke = _this.stroke;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    LineSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this.segments.clear();\r\n    };\r\n    Object.defineProperty(LineSeries.prototype, \"autoGapCount\", {\r\n        /**\r\n         * @return Gap count\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"autoGapCount\");\r\n        },\r\n        /**\r\n         * If `connect = false` and distance between two data points is bigger\r\n         * than `baseInterval * autoGapCount`, a line will break automatically.\r\n         *\r\n         * @since 4.2.4\r\n         * @param  value  Gap count\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"autoGapCount\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LineSeries;\r\n}(XYSeries));\r\nexport { LineSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LineSeries\"] = LineSeries;\r\nregistry.registeredClasses[\"LineSeriesDataItem\"] = LineSeriesDataItem;\r\n//# sourceMappingURL=LineSeries.js.map","/**\r\n * Radar series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { LineSeries, LineSeriesDataItem } from \"./LineSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n//import { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\n//import { Sprite } from \"../../core/Sprite\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[RadarSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar RadarSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadarSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarSeriesDataItem\";\r\n        _this.setLocation(\"dateX\", 0, 0);\r\n        _this.setLocation(\"dateY\", 0, 0);\r\n        _this.setLocation(\"categoryX\", 0, 0);\r\n        _this.setLocation(\"categoryY\", 0, 0);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return RadarSeriesDataItem;\r\n}(LineSeriesDataItem));\r\nexport { RadarSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a radar graph.\r\n *\r\n * @see {@link IRadarSeriesEvents} for a list of available Events\r\n * @see {@link IRadarSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar RadarSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadarSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarSeries\";\r\n        _this.connectEnds = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarSeries.prototype.validate = function () {\r\n        // so that radius would be updated\r\n        if (this.chart.invalid) {\r\n            this.chart.validate();\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    RadarSeries.prototype.createDataItem = function () {\r\n        return new RadarSeriesDataItem();\r\n    };\r\n    /**\r\n     * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n     *\r\n     * @param    dataItem   Data item\r\n     * @param    xKey       Name of X data field\r\n     * @param    yKey       Name of Y data field\r\n     * @param    locationX  X location\r\n     * @param    locationY  Y location\r\n     * @param    stackKeyX  ?\r\n     * @param    stackKeyY  ?\r\n     * @returns             Coordinates\r\n     */\r\n    RadarSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\r\n        if (!stackKeyX) {\r\n            stackKeyX = \"valueX\";\r\n        }\r\n        if (!stackKeyY) {\r\n            stackKeyY = \"valueY\";\r\n        }\r\n        var x = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);\r\n        var y = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);\r\n        var radius = $math.getDistance({ x: x, y: y });\r\n        // hack to be able to determine angle later\r\n        if (radius == 0) {\r\n            radius = 0.00001;\r\n        }\r\n        var angle = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);\r\n        var startAngle = this.chart.startAngle;\r\n        var endAngle = this.chart.endAngle;\r\n        //\t\tangle = $math.fitToRange(angle, startAngle, endAngle);\r\n        if (angle < startAngle || angle > endAngle) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n        }\r\n    };\r\n    /**\r\n     * [addPoints description]\r\n     *\r\n     * @todo Description\r\n     * @param points    [description]\r\n     * @param dataItem  [description]\r\n     * @param xField    [description]\r\n     * @param yField    [description]\r\n     * @param backwards [description]\r\n     */\r\n    RadarSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {\r\n        var point = this.getPoint(dataItem, xField, yField, dataItem.locations[xField], dataItem.locations[yField]);\r\n        if (point) {\r\n            points.push(point);\r\n        }\r\n    };\r\n    /**\r\n     * Returns an SVG path to be used as a mask for the series.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    RadarSeries.prototype.getMaskPath = function () {\r\n        var renderer = this.yAxis.renderer;\r\n        return $path.arc(renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);\r\n    };\r\n    /**\r\n     * [drawSegment description]\r\n     *\r\n     * @todo Description\r\n     * @param segment      [description]\r\n     * @param points       [description]\r\n     * @param closePoints  [description]\r\n     */\r\n    RadarSeries.prototype.drawSegment = function (segment, points, closePoints) {\r\n        var axis = this.yAxis;\r\n        var renderer = axis.renderer;\r\n        if (this.connectEnds && Math.abs(renderer.endAngle - renderer.startAngle) == 360) {\r\n            // adds one point to the beginning of closePoints array, if needed\r\n            if (this.dataFields[this._xOpenField] ||\r\n                this.dataFields[this._yOpenField] ||\r\n                this.stacked) {\r\n                points.push(points[0]);\r\n                if (closePoints.length > 0) {\r\n                    closePoints.unshift(closePoints[closePoints.length - 1]);\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.drawSegment.call(this, segment, points, closePoints);\r\n    };\r\n    Object.defineProperty(RadarSeries.prototype, \"connectEnds\", {\r\n        /**\r\n         * @return Connect?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"connectEnds\");\r\n        },\r\n        /**\r\n         * Should the last and and first data points be connected, forming a complete\r\n         * closed circle?\r\n         *\r\n         * @default true\r\n         * @param value  Connect?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"connectEnds\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RadarSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end) {\r\n            bullet.visible = false;\r\n        }\r\n        bullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));\r\n    };\r\n    RadarSeries.prototype.setXAxis = function (axis) {\r\n        _super.prototype.setXAxis.call(this, axis);\r\n        this.updateRendererRefs();\r\n    };\r\n    RadarSeries.prototype.setYAxis = function (axis) {\r\n        _super.prototype.setYAxis.call(this, axis);\r\n        this.updateRendererRefs();\r\n    };\r\n    RadarSeries.prototype.updateRendererRefs = function () {\r\n        var rendererX = this.xAxis.renderer;\r\n        var rendererY = this.yAxis.renderer;\r\n        rendererX.axisRendererY = rendererY;\r\n    };\r\n    return RadarSeries;\r\n}(LineSeries));\r\nexport { RadarSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarSeries\"] = RadarSeries;\r\nregistry.registeredClasses[\"RadarSeriesDataItem\"] = RadarSeriesDataItem;\r\n//# sourceMappingURL=RadarSeries.js.map","import * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Provides fill element functionality for circular Axes.\r\n *\r\n * @see {@link IAxisFillCircularEvents} for a list of available events\r\n * @see {@link IAxisFillCircularAdapters} for a list of available Adapters\r\n * @todo Needs description\r\n */\r\nvar AxisFillCircular = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisFillCircular, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Axis\r\n     */\r\n    function AxisFillCircular(axis) {\r\n        var _this = _super.call(this, axis) || this;\r\n        _this.className = \"AxisFillCircular\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.radius = percent(100);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the fill element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisFillCircular.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this.__disabled || this.disabled) {\r\n            return;\r\n        }\r\n        if (this.axis) {\r\n            var renderer = this.axis.renderer;\r\n            this.fillPath = renderer.getPositionRangePath(this.startPosition, this.endPosition, this.radius, $type.hasValue(this.innerRadius) ? this.innerRadius : renderer.innerRadius, this.cornerRadius);\r\n            this.path = this.fillPath;\r\n        }\r\n    };\r\n    Object.defineProperty(AxisFillCircular.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the fill. Relative ([[Percent]]) or absolute (pixels).\r\n         *\r\n         * @param value  Inner radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisFillCircular.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the fill. Relative ([[Percent]]) or absolute (pixels).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisFillCircular.prototype, \"cornerRadius\", {\r\n        /**\r\n         * @return Corner radius (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cornerRadius\");\r\n        },\r\n        /**\r\n         * Corner radius for the fill. In pixels.\r\n         *\r\n         * @param value  Corner radius (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cornerRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AxisFillCircular;\r\n}(AxisFill));\r\nexport { AxisFillCircular };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFillCircular\"] = AxisFillCircular;\r\n//# sourceMappingURL=AxisFillCircular.js.map","/**\r\n * A module defining functionality for circular axis grid elements.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Grid } from \"./Grid\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a circular grid element for circular-type axis.\r\n *\r\n * @see {@link IGridCircularEvents} for a list of available events\r\n * @see {@link IGridCircularAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the GridCircular, also with 3d charts we might need some additional elements\r\n */\r\nvar GridCircular = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GridCircular, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GridCircular() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"GridCircular\";\r\n        _this.pixelPerfect = false;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(GridCircular.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the circular grid. (absolute or relative)\r\n         *\r\n         * @param value Inner radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GridCircular.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the circular grid. (absolute or relative)\r\n         *\r\n         * @param value Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GridCircular;\r\n}(Grid));\r\nexport { GridCircular };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GridCircular\"] = GridCircular;\r\n//# sourceMappingURL=GridCircular.js.map","/**\r\n * Axis Label module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Use to create labels on circular axis.\r\n *\r\n * @see {@link IAxisLabelCircularEvents} for a list of available events\r\n * @see {@link IAxisLabelCircularAdapters} for a list of available Adapters\r\n */\r\nvar AxisLabelCircular = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisLabelCircular, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisLabelCircular() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         *\r\n         * @ignore\r\n         */\r\n        _this.fdx = 0;\r\n        /**\r\n         *\r\n         * @ignore\r\n         */\r\n        _this.fdy = 0;\r\n        _this.className = \"AxisLabelCircular\";\r\n        _this.padding(0, 0, 0, 0);\r\n        _this.location = 0.5;\r\n        _this.radius = 0;\r\n        _this.isMeasured = false;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisLabelCircular.prototype, \"relativeRotation\", {\r\n        /**\r\n         * @return Rotation angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"relativeRotation\");\r\n        },\r\n        /**\r\n         * Relative rotation of the label.\r\n         *\r\n         * It is an angle to circle. In case 90, labels will be positioned like rays\r\n         * of light, if 0 - positioned along the circle.\r\n         *\r\n         * @param value Rotation angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"relativeRotation\", value, true);\r\n            if (!$type.hasValue(value)) {\r\n                this.rotation = undefined;\r\n                var dataItem = this.dataItem;\r\n                if (dataItem && dataItem.component) {\r\n                    dataItem.component.invalidateDataItems();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisLabelCircular.prototype, \"radius\", {\r\n        /**\r\n         * @return Distance (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Distance from axis circle to label in pixels or percent.\r\n         *\r\n         * @param value Distance (px or percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisLabelCircular.prototype, \"bent\", {\r\n        /**\r\n         * @return Bent?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bent\");\r\n        },\r\n        /**\r\n         * Specifies if label should be bent along the circle.\r\n         *\r\n         * IMPORTANT: Use this with caution, since it is quite CPU-greedy.\r\n         *\r\n         * @since 4.1.2\r\n         * @default false\r\n         * @param  value  Bent?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"bent\", value, true);\r\n            this.setPropertyValue(\"wrap\", false);\r\n            this.setPropertyValue(\"horizontalCenter\", \"none\");\r\n            this.setPropertyValue(\"verticalCenter\", \"none\");\r\n            if (value) {\r\n                this.textAlign = \"middle\";\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns label radius in pixels.\r\n     *\r\n     * @param   axisRadius  Radius\r\n     * @return              Pixel radius\r\n     */\r\n    AxisLabelCircular.prototype.pixelRadius = function (axisRadius) {\r\n        var sign = 1;\r\n        if (this.inside) {\r\n            sign = -1;\r\n        }\r\n        return $utils.relativeToValue(this.radius, axisRadius) * sign;\r\n    };\r\n    /**\r\n     * Returns label horizontal radius in pixels.\r\n     *\r\n     * @param   axisRadius   Radius\r\n     * @param   axisRadiusY  Vertical radius\r\n     * @return               Radius\r\n     */\r\n    AxisLabelCircular.prototype.pixelRadiusY = function (axisRadius, axisRadiusY) {\r\n        var sign = 1;\r\n        if (this.inside) {\r\n            sign = -1;\r\n        }\r\n        var radius = this.radius;\r\n        if ($type.isNumber(radius)) {\r\n            radius *= axisRadiusY / axisRadius;\r\n            return $utils.relativeToValue(radius, axisRadius) * sign;\r\n        }\r\n        else {\r\n            return $utils.relativeToValue(radius, axisRadiusY) * sign;\r\n        }\r\n    };\r\n    /**\r\n     * [fixPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param point       Label affixation point\r\n     * @param axisRadius  Distance from point (px)\r\n     */\r\n    AxisLabelCircular.prototype.fixPosition = function (angle, axisRadius, axisRadiusY, dx, dy) {\r\n        if (!$type.isNumber(axisRadiusY)) {\r\n            axisRadiusY = axisRadius;\r\n        }\r\n        if (!$type.isNumber(dx)) {\r\n            dx = 0;\r\n        }\r\n        if (!$type.isNumber(dy)) {\r\n            dy = 0;\r\n        }\r\n        var point = { x: axisRadius * $math.cos(angle), y: axisRadiusY * $math.sin(angle) };\r\n        if (this.invalid) {\r\n            this.validate(); //@todo\" check if we need this\r\n        }\r\n        var isNegative = false;\r\n        var realRadius = this.radius;\r\n        if (realRadius instanceof Percent && realRadius.value < 0) {\r\n            isNegative = true;\r\n        }\r\n        else if (realRadius < 0) {\r\n            isNegative = true;\r\n        }\r\n        var relativeRotation = this.relativeRotation;\r\n        var labelRadius = this.pixelRadius(axisRadius);\r\n        if (this.bent) {\r\n            var point_1 = { x: axisRadius * $math.cos(angle + 180), y: axisRadiusY * $math.sin(angle + 180) };\r\n            this.path = $path.moveTo(point_1) + $path.arcTo(angle + 180, 360, axisRadius + labelRadius, axisRadiusY + labelRadius * axisRadiusY / axisRadius);\r\n            this.locationOnPath = 0.5;\r\n            return;\r\n        }\r\n        // WHEN ROTATED\r\n        if ($type.isNumber(relativeRotation)) {\r\n            this.horizontalCenter = \"none\";\r\n            this.verticalCenter = \"none\";\r\n            angle = $math.fitAngleToRange(angle, -180, 180);\r\n            var pixelWidth = this.bbox.width;\r\n            var pixelHeight = this.bbox.height;\r\n            var pixelPaddingBottom = this.pixelPaddingBottom;\r\n            var pixelPaddingTop = this.pixelPaddingTop;\r\n            var pixelPaddingLeft = this.pixelPaddingLeft;\r\n            var pixelPaddingRight = this.pixelPaddingRight;\r\n            if (angle > 90 || angle < -90) {\r\n                if (relativeRotation == -90) {\r\n                    relativeRotation = 90;\r\n                    pixelWidth = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (relativeRotation == -90) {\r\n                    pixelHeight = -pixelHeight;\r\n                }\r\n                if (relativeRotation == 90) {\r\n                    relativeRotation = -90;\r\n                    pixelWidth = -pixelPaddingLeft - pixelPaddingRight;\r\n                    pixelHeight = -pixelHeight - pixelPaddingTop - pixelPaddingBottom;\r\n                }\r\n            }\r\n            this.rotation = relativeRotation + angle + 90;\r\n            var dH = $math.sin(relativeRotation) / 2;\r\n            var dW = $math.cos(relativeRotation) / 2;\r\n            var rotation = this.rotation;\r\n            this.dx = pixelHeight * dH * $math.sin(rotation) - pixelWidth * dW * $math.cos(rotation);\r\n            this.dy = -pixelHeight * dH * $math.cos(rotation) - pixelWidth * dW * $math.sin(rotation);\r\n            if (!this.inside) {\r\n                labelRadius += (pixelHeight + pixelPaddingBottom + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelWidth + pixelPaddingLeft + pixelPaddingRight) * $math.sin(relativeRotation);\r\n            }\r\n            else {\r\n                if (angle > 90 || angle < -90) {\r\n                    labelRadius -= (pixelPaddingBottom + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelPaddingLeft + pixelPaddingRight) * $math.sin(relativeRotation);\r\n                }\r\n                else {\r\n                    labelRadius += (pixelPaddingBottom + this.bbox.height + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelPaddingLeft + pixelPaddingRight + this.bbox.width) * $math.sin(relativeRotation);\r\n                }\r\n            }\r\n            point.x += $math.cos(angle) * labelRadius;\r\n            point.y += $math.sin(angle) * labelRadius * axisRadiusY / axisRadius;\r\n        }\r\n        else {\r\n            // END OF ROTATED\r\n            this.horizontalCenter = \"middle\";\r\n            this.verticalCenter = \"middle\";\r\n            if (isNegative) {\r\n                this.dx = 0;\r\n                this.dy = 0;\r\n                point.x = (axisRadius + labelRadius) * $math.cos(angle);\r\n                point.y = (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * $math.sin(angle);\r\n            }\r\n            else {\r\n                // we don't use valign for labels because then they would jump while animating. instead we modify dy depending on a y position\r\n                // this math makes dy to be 1 at the top of the circle, 0.5 at the middle and 1 at the bottom\r\n                // @todo with this math doesn't work well with inside = true\r\n                this.dy = this._measuredHeight / 2 * $math.sin(angle); //(1 - (point.y + axisRadiusY) / (2 * axisRadiusY));\r\n                // simmilar with dx\r\n                this.dx = this._measuredWidth / 2 * $math.cos(angle); //(1 - (point.x + axisRadius) / (2 * axisRadius));\r\n                point.x += $math.cos(angle) * labelRadius;\r\n                point.y += $math.sin(angle) * labelRadius * axisRadiusY / axisRadius;\r\n            }\r\n        }\r\n        point.x += dx;\r\n        point.y += dy;\r\n        this.fdx = this.dx;\r\n        this.fdy = this.dy;\r\n        this.moveTo(point);\r\n    };\r\n    return AxisLabelCircular;\r\n}(AxisLabel));\r\nexport { AxisLabelCircular };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabelCircular\"] = AxisLabelCircular;\r\n//# sourceMappingURL=AxisLabelCircular.js.map","/**\r\n * Module, defining Axis Renderer for circular axes.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisFillCircular } from \"./AxisFillCircular\";\r\nimport { GridCircular } from \"./GridCircular\";\r\nimport { AxisLabelCircular } from \"./AxisLabelCircular\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A renderer for circular axis.\r\n */\r\nvar AxisRendererCircular = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisRendererCircular, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererCircular() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.pixelRadiusReal = 0;\r\n        // axis.layout = \"none\"; // does not trigger redraw when size changes\r\n        _this.layout = \"none\";\r\n        _this.className = \"AxisRendererCircular\";\r\n        _this.isMeasured = false;\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        _this.useChartAngles = true;\r\n        _this.radius = percent(100);\r\n        _this.isMeasured = false;\r\n        _this.grid.template.location = 0;\r\n        _this.labels.template.location = 0;\r\n        _this.labels.template.radius = 15;\r\n        _this.ticks.template.location = 0;\r\n        _this.ticks.template.pixelPerfect = false;\r\n        _this.tooltipLocation = 0;\r\n        _this.line.strokeOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n    * @ignore\r\n    */\r\n    AxisRendererCircular.prototype.setAxis = function (axis) {\r\n        var _this = this;\r\n        _super.prototype.setAxis.call(this, axis);\r\n        axis.isMeasured = false;\r\n        // modify x and y so that tooltip would always be on circle\r\n        var tooltip = axis.tooltip;\r\n        tooltip.adapter.add(\"dx\", function (x, target) {\r\n            var point = $utils.svgPointToSprite({ x: target.pixelX, y: target.pixelY }, _this);\r\n            return _this.pixelRadius * Math.cos(Math.atan2(point.y, point.x)) - point.x;\r\n        });\r\n        tooltip.adapter.add(\"dy\", function (y, target) {\r\n            var point = $utils.svgPointToSprite({ x: target.pixelX, y: target.pixelY }, _this);\r\n            return _this.pixelRadius * Math.sin(Math.atan2(point.y, point.x)) - point.y;\r\n        });\r\n    };\r\n    /**\r\n     * Validates Axis renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererCircular.prototype.validate = function () {\r\n        // so that radius would be updated\r\n        if (this.chart && this.chart.invalid) {\r\n            this.chart.validate();\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            return 2 * Math.PI * this.pixelRadius;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the axis.\r\n         *\r\n         * Can be absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"radius\", value, false, false, 10, false)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"pixelRadius\", {\r\n        /**\r\n         * Outer radius in pixels.\r\n         *\r\n         * @return Outer radius (px)\r\n         */\r\n        get: function () {\r\n            return $utils.relativeRadiusToValue(this.radius, this.pixelRadiusReal) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the axis.\r\n         *\r\n         * Can be absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Inner radius\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"innerRadius\", value, false, false, 10, false)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"useChartAngles\", {\r\n        /**\r\n         * @return Use chart angles\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"useChartAngles\");\r\n        },\r\n        /**\r\n         * Specifies if axis should use its own `startAngle` and `endAngle` or\r\n         * inherit them from relative properties from chart.\r\n         *\r\n         * @default false\r\n         * @param value  Use chart's angles\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"useChartAngles\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * Inner radius in pixels.\r\n         *\r\n         * @return Inner radius (px)\r\n         */\r\n        get: function () {\r\n            return $utils.relativeRadiusToValue(this.innerRadius, this.pixelRadiusReal) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @param position2  Position (0-1) Position on the second axis\r\n     * @return Point\r\n     */\r\n    AxisRendererCircular.prototype.positionToPoint = function (position, position2) {\r\n        if (!$type.isNumber(position2)) {\r\n            position2 = 1;\r\n        }\r\n        var coordinate = this.positionToCoordinate(position);\r\n        var angle = this.startAngle + (this.endAngle - this.startAngle) * coordinate / this.axisLength;\r\n        var radius = this.pixelRadius;\r\n        var innerRadius = this.pixelInnerRadius;\r\n        if (this.axisRendererY) {\r\n            var realRadius = $math.fitToRange(this.axisRendererY.positionToCoordinate(position2), 0, Infinity);\r\n            return { x: realRadius * $math.cos(angle), y: realRadius * $math.sin(angle) };\r\n        }\r\n        return { x: $math.cos(angle) * innerRadius + (radius - innerRadius) * $math.cos(angle) * position2, y: $math.sin(angle) * innerRadius + (radius - innerRadius) * $math.sin(angle) * position2 };\r\n    };\r\n    /**\r\n     * Converts relative position (0-1) on axis to angle in degrees (0-360).\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Angle (0-360)\r\n     */\r\n    AxisRendererCircular.prototype.positionToAngle = function (position) {\r\n        var axis = this.axis;\r\n        var arc = (this.endAngle - this.startAngle) / (axis.end - axis.start);\r\n        var angle;\r\n        if (axis.renderer.inversed) {\r\n            angle = this.startAngle + (axis.end - position) * arc;\r\n        }\r\n        else {\r\n            angle = this.startAngle + (position - axis.start) * arc;\r\n        }\r\n        return $math.round(angle, 3);\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererCircular.prototype.updateAxisLine = function () {\r\n        var radius = this.pixelRadius;\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        var arc = endAngle - startAngle;\r\n        this.line.path = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, arc, radius, radius);\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererCircular.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        if ($type.isNumber(point.x) && $type.isNumber(point.y) && grid.element) {\r\n            var angle = $math.DEGREES * Math.atan2(point.y, point.x);\r\n            var radius = $utils.relativeRadiusToValue($type.hasValue(grid.radius) ? grid.radius : percent(100), this.pixelRadius);\r\n            var gridInnerRadius = $utils.relativeRadiusToValue(grid.innerRadius, this.pixelRadius);\r\n            grid.zIndex = 0;\r\n            var innerRadius = $utils.relativeRadiusToValue($type.isNumber(gridInnerRadius) ? gridInnerRadius : this.innerRadius, this.pixelRadius, true);\r\n            grid.path = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) }) + $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n        }\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick         Tick element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererCircular.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        position = position + (endPosition - position) * tick.location;\r\n        var point = this.positionToPoint(position);\r\n        if (tick.element) {\r\n            var radius = this.pixelRadius;\r\n            var angle = $math.DEGREES * Math.atan2(point.y, point.x);\r\n            var tickLength = tick.length;\r\n            if (tick.inside) {\r\n                tickLength = -tickLength;\r\n            }\r\n            tick.zIndex = 1;\r\n            tick.path = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) }) + $path.lineTo({ x: (radius + tickLength) * $math.cos(angle), y: (radius + tickLength) * $math.sin(angle) });\r\n        }\r\n        this.toggleVisibility(tick, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions axis bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererCircular.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        var location = 0.5;\r\n        if (bullet instanceof AxisBullet) {\r\n            location = bullet.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        var radius = this.pixelRadius;\r\n        var angle = $math.DEGREES * Math.atan2(point.y, point.x);\r\n        point = { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n        this.positionItem(bullet, point);\r\n        this.toggleVisibility(bullet, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRendererCircular.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        if (!$type.hasValue(location)) {\r\n            location = label.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        label.fixPosition(this.positionToAngle(position), this.pixelRadius);\r\n        label.zIndex = 2;\r\n        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n    };\r\n    /**\r\n     * Checks if point is within bounds of a container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point Point coordinates\r\n     * @return Fits?\r\n     */\r\n    AxisRendererCircular.prototype.fitsToBounds = function (point) {\r\n        return true;\r\n    };\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Start angle of the axis in degrees (0-360).\r\n         *\r\n         * @param value  Start angle\r\n         */\r\n        set: function (value) {\r\n            // do not normalize angel here!\r\n            if (this.setPropertyValue(\"startAngle\", value)) {\r\n                this.invalidateAxisItems();\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererCircular.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * End angle of the axis in degrees (0-360).\r\n         *\r\n         * @param value  End angle\r\n         */\r\n        set: function (value) {\r\n            // do not normalize angel here!\r\n            if (this.setPropertyValue(\"endAngle\", value)) {\r\n                this.invalidateAxisItems();\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRendererCircular.prototype.getPositionRangePath = function (startPosition, endPosition, radius, innerRadius, cornerRadius) {\r\n        var path = \"\";\r\n        if ($type.isNumber(startPosition) && $type.isNumber(endPosition)) {\r\n            if (!$type.hasValue(radius)) {\r\n                radius = this.radius;\r\n            }\r\n            startPosition = $math.max(startPosition, this.axis.start);\r\n            endPosition = $math.min(endPosition, this.axis.end);\r\n            if (endPosition < startPosition) {\r\n                endPosition = startPosition;\r\n            }\r\n            var pixelRadius = $utils.relativeRadiusToValue(radius, this.pixelRadius);\r\n            var pixelInnerRadius = $utils.relativeRadiusToValue(innerRadius, this.pixelRadius, true);\r\n            var startAngle = this.positionToAngle(startPosition);\r\n            var endAngle = this.positionToAngle(endPosition);\r\n            var arc = endAngle - startAngle;\r\n            path = $path.arc(startAngle, arc, pixelRadius, pixelInnerRadius, pixelRadius, cornerRadius);\r\n        }\r\n        return path;\r\n    };\r\n    /**\r\n     * Returns a new grid element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Grid element\r\n     */\r\n    AxisRendererCircular.prototype.createGrid = function () {\r\n        return new GridCircular();\r\n    };\r\n    /**\r\n     * Returns a new fill element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Fill element\r\n     */\r\n    AxisRendererCircular.prototype.createFill = function (axis) {\r\n        return new AxisFillCircular(axis);\r\n    };\r\n    /**\r\n     * Returns a new label element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Label element\r\n     */\r\n    AxisRendererCircular.prototype.createLabel = function () {\r\n        return new AxisLabelCircular();\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRendererCircular.prototype.pointToPosition = function (point) {\r\n        var angle = $math.fitAngleToRange($math.getAngle(point), this.startAngle, this.endAngle);\r\n        return this.coordinateToPosition((angle - this.startAngle) / 360 * this.axisLength);\r\n    };\r\n    return AxisRendererCircular;\r\n}(AxisRenderer));\r\nexport { AxisRendererCircular };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererCircular\"] = AxisRendererCircular;\r\n//# sourceMappingURL=AxisRendererCircular.js.map","/**\r\n * Module, defining Axis Renderer for radial axes.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport { WavedCircle } from \"../../core/elements/WavedCircle\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A renderer for radial axis.\r\n */\r\nvar AxisRendererRadial = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisRendererRadial, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererRadial() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.pixelRadiusReal = 0;\r\n        _this.className = \"AxisRendererRadial\";\r\n        _this.isMeasured = false;\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        _this.minGridDistance = 30;\r\n        _this.gridType = \"circles\";\r\n        _this.axisAngle = -90;\r\n        _this.isMeasured = false;\r\n        _this.layout = \"none\";\r\n        _this.radius = percent(100);\r\n        _this.line.strokeOpacity = 0;\r\n        _this.labels.template.horizontalCenter = \"middle\";\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Validates Axis renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererRadial.prototype.validate = function () {\r\n        // so that radius would be updated\r\n        if (this.chart && this.chart.invalid) {\r\n            this.chart.validate();\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            return this.pixelRadius - this.pixelInnerRadius;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the axis.\r\n         *\r\n         * Can be absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, false, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"pixelRadius\", {\r\n        /**\r\n         * Outer radius in pixels.\r\n         *\r\n         * @return Outer radius (px)\r\n         */\r\n        get: function () {\r\n            return $utils.relativeRadiusToValue(this.radius, this.pixelRadiusReal) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the axis.\r\n         *\r\n         * Can be absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, false, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * Inner radius in pixels.\r\n         *\r\n         * @return Inner radius (px)\r\n         */\r\n        get: function () {\r\n            return $utils.relativeRadiusToValue(this.innerRadius, this.pixelRadiusReal) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * Chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Chart\r\n         */\r\n        set: function (chart) {\r\n            this._chart.set(chart, null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @param position2  Position (0-1) Position on the second axis\r\n     * @return Point\r\n     */\r\n    AxisRendererRadial.prototype.positionToPoint = function (position, position2) {\r\n        var radius = $math.fitToRange(this.positionToCoordinate(position), 0, Infinity);\r\n        return { x: radius * $math.cos(this.axisAngle), y: radius * $math.sin(this.axisAngle) };\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererRadial.prototype.updateAxisLine = function () {\r\n        this.line.path = $path.moveTo({ x: this.pixelInnerRadius * $math.cos(this.axisAngle), y: this.pixelInnerRadius * $math.sin(this.axisAngle) }) + $path.lineTo({ x: this.pixelRadius * $math.cos(this.axisAngle), y: this.pixelRadius * $math.sin(this.axisAngle) });\r\n        var title = this.axis.title;\r\n        title.valign = \"none\";\r\n        title.horizontalCenter = \"middle\";\r\n        title.verticalCenter = \"bottom\";\r\n        title.y = -this.axisLength / 2;\r\n        var rotation = 90;\r\n        if (this.opposite) {\r\n            if (!this.inside) {\r\n                rotation = -90;\r\n            }\r\n        }\r\n        else {\r\n            if (this.inside) {\r\n                rotation = -90;\r\n            }\r\n        }\r\n        title.rotation = rotation;\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererRadial.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        var path;\r\n        var radius = $math.getDistance(point);\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        if ($type.isNumber(radius) && grid.element) {\r\n            var chart = this.chart;\r\n            var xAxis = chart.xAxes.getIndex(0);\r\n            var count = 0;\r\n            var series = chart.series.getIndex(0);\r\n            if (series) {\r\n                count = series.dataItems.length;\r\n            }\r\n            // polygons are only possible if x axis is present\r\n            // @todo: review this\r\n            if (this.gridType == \"polygons\" && count > 0 && series && xAxis && xAxis instanceof CategoryAxis) {\r\n                var gridLocation = xAxis.renderer.grid.template.location;\r\n                var angle = xAxis.getAngle(series.dataItems.getIndex(0), \"categoryX\", gridLocation);\r\n                path = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n                for (var i = 1; i < count; i++) {\r\n                    angle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n                    path += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n                }\r\n                angle = xAxis.getAngle(series.dataItems.getIndex(count - 1), \"categoryX\", xAxis.renderer.cellEndLocation);\r\n                path += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n            }\r\n            else {\r\n                path = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, radius, radius);\r\n            }\r\n            grid.path = path;\r\n        }\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRendererRadial.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        if (!$type.hasValue(location)) {\r\n            location = label.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        this.positionItem(label, point);\r\n        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererRadial.prototype.updateBaseGridElement = function () {\r\n        // @todo? zero grid for radar chart, is it needed?\r\n    };\r\n    /**\r\n     * Checks if point is within bounds of a container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point Point coordinates\r\n     * @return Fits?\r\n     */\r\n    AxisRendererRadial.prototype.fitsToBounds = function (point) {\r\n        return true;\r\n    };\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Start angle of the axis in degrees. (0-360)\r\n         *\r\n         * @param value  Start angle\r\n         */\r\n        set: function (value) {\r\n            // do not normalize angle here!\r\n            if (this.setPropertyValue(\"startAngle\", value)) {\r\n                this.invalidateAxisItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * End angle of the axis in degrees. (0-360)\r\n         *\r\n         * @param value  End angle\r\n         */\r\n        set: function (value) {\r\n            // do not normalize angel here!\r\n            if (this.setPropertyValue(\"endAngle\", value)) {\r\n                this.invalidateAxisItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"axisAngle\", {\r\n        /**\r\n         * @return Axis angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"axisAngle\");\r\n            //return $math.fitToRange(this.getPropertyValue(\"axisAngle\"), this.startAngle, this.endAngle); // no good, as less flexible\r\n        },\r\n        /**\r\n         * Angle of the radial axis in degrees. (0-360)\r\n         *\r\n         * @param value  Axis angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"axisAngle\", $math.normalizeAngle(value));\r\n            this.invalidateAxisItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRendererRadial.prototype, \"gridType\", {\r\n        /**\r\n         * Grid type\r\n         */\r\n        get: function () {\r\n            var axis = this.chart.xAxes.getIndex(0);\r\n            if (axis instanceof CategoryAxis) {\r\n                return this.getPropertyValue(\"gridType\");\r\n            }\r\n            else {\r\n                return \"circles\";\r\n            }\r\n        },\r\n        // polygons grid type is only possible under these conditions: xAxis is available and it is CategoryAxis, also at least one series should be added to a chart\r\n        /**\r\n         * Grid type for radial axis.\r\n         *\r\n         * A grid on radia axis can either be perfect circles (\"circles\"), or\r\n         * straight lines (\"polygons\").\r\n         *\r\n         * @default \"circles\"\r\n         * @param value  Grid type\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"gridType\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRendererRadial.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        var pixelInnerRadius = this.pixelInnerRadius;\r\n        var pixelRadius = this.axisLength + pixelInnerRadius;\r\n        var innerRadius = $math.fitToRange(this.positionToCoordinate(startPosition), pixelInnerRadius, pixelRadius);\r\n        var radius = $math.fitToRange(this.positionToCoordinate(endPosition), pixelInnerRadius, pixelRadius);\r\n        //let angleCount: number = this.angleCount;\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        var arc = endAngle - startAngle;\r\n        var path;\r\n        var chart = this.chart;\r\n        var xAxis = chart.xAxes.getIndex(0);\r\n        var series = chart.series.getIndex(0);\r\n        var count = 0;\r\n        if (series) {\r\n            count = series.dataItems.length;\r\n        }\r\n        // polygons are only possible if x axis is present\r\n        // @todo: review this\r\n        if (this.gridType == \"polygons\" && count > 0 && series && xAxis && xAxis instanceof CategoryAxis) {\r\n            var gridLocation = xAxis.renderer.grid.template.location;\r\n            var angle = xAxis.getAngle(series.dataItems.getIndex(0), \"categoryX\", gridLocation);\r\n            path = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n            for (var i = 1; i < count; i++) {\r\n                angle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n                path += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n            }\r\n            angle = xAxis.getAngle(series.dataItems.getIndex(count - 1), \"categoryX\", xAxis.renderer.cellEndLocation);\r\n            path += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n            path += $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) });\r\n            for (var i = count - 1; i >= 0; i--) {\r\n                angle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n                path += $path.lineTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) });\r\n            }\r\n        }\r\n        else {\r\n            path = $path.arc(startAngle, arc, radius, innerRadius);\r\n        }\r\n        return path;\r\n    };\r\n    /**\r\n     * Updates and positions an axis break element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Break element\r\n     */\r\n    AxisRendererRadial.prototype.updateBreakElement = function (axisBreak) {\r\n        // @todo: someday we might need axis break when gridType is polygons\r\n        var startLine = axisBreak.startLine;\r\n        var endLine = axisBreak.endLine;\r\n        var fillShape = axisBreak.fillShape;\r\n        var startPoint = axisBreak.startPoint;\r\n        var endPoint = axisBreak.endPoint;\r\n        startLine.radius = Math.abs(startPoint.y);\r\n        endLine.radius = Math.abs(endPoint.y);\r\n        fillShape.radius = Math.abs(endPoint.y);\r\n        fillShape.innerRadius = Math.abs(startPoint.y);\r\n    };\r\n    /**\r\n     * Creates visual elements for and axis break.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Axis break\r\n     */\r\n    AxisRendererRadial.prototype.createBreakSprites = function (axisBreak) {\r\n        axisBreak.startLine = new WavedCircle();\r\n        axisBreak.endLine = new WavedCircle();\r\n        axisBreak.fillShape = new WavedCircle();\r\n    };\r\n    /**\r\n     * Updates some of the Axis tooltip's visual properties, related to\r\n     * rendering of the Axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererRadial.prototype.updateTooltip = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            var bigNum = 4000;\r\n            var bbx = -4000;\r\n            var bby = -4000;\r\n            var bbw = bigNum * 2;\r\n            var bbh = bigNum * 2;\r\n            var axisAngle = this.axisAngle;\r\n            if (axisAngle < 0) {\r\n                axisAngle += 360;\r\n            }\r\n            var tooltipOrientation = \"vertical\";\r\n            if ((axisAngle > 45 && axisAngle < 135) || (axisAngle > 225 && axisAngle < 315)) {\r\n                tooltipOrientation = \"horizontal\";\r\n            }\r\n            this.axis.updateTooltip(tooltipOrientation, { x: bbx, y: bby, width: bbw, height: bbh });\r\n        }\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick      Tick element\r\n     * @param position  Position\r\n     */\r\n    AxisRendererRadial.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        position = position + (endPosition - position) * tick.location;\r\n        var point = this.positionToPoint(position);\r\n        if (tick.element) {\r\n            var angle = $math.normalizeAngle(this.axisAngle + 90);\r\n            if (angle / 90 != Math.round(angle / 90)) {\r\n                tick.pixelPerfect = false;\r\n            }\r\n            else {\r\n                tick.pixelPerfect = true;\r\n            }\r\n            var tickLength = -tick.length;\r\n            if (tick.inside) {\r\n                tickLength *= -1;\r\n            }\r\n            tick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength * $math.cos(angle), y: tickLength * $math.sin(angle) });\r\n        }\r\n        this.positionItem(tick, point);\r\n        this.toggleVisibility(tick, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions axis bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererRadial.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        var location = 0.5;\r\n        if (bullet instanceof AxisBullet) {\r\n            location = bullet.location;\r\n        }\r\n        position = position + (endPosition - position) * location;\r\n        var point = this.positionToPoint(position);\r\n        this.positionItem(bullet, point);\r\n        this.toggleVisibility(bullet, position, 0, 1);\r\n    };\r\n    /**\r\n     * Converts a position on the axis to a coordinate in pixels.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    AxisRendererRadial.prototype.positionToCoordinate = function (position) {\r\n        var coordinate;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        var innerRadius = this.pixelInnerRadius;\r\n        if (axis.renderer.inversed) {\r\n            coordinate = (axis.end - position) * axisFullLength + innerRadius;\r\n        }\r\n        else {\r\n            coordinate = (position - axis.start) * axisFullLength + innerRadius;\r\n        }\r\n        return $math.round(coordinate, 1);\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRendererRadial.prototype.pointToPosition = function (point) {\r\n        var coordinate = ($math.getDistance(point) - this.pixelInnerRadius);\r\n        return this.coordinateToPosition(coordinate);\r\n    };\r\n    return AxisRendererRadial;\r\n}(AxisRendererY));\r\nexport { AxisRendererRadial };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererRadial\"] = AxisRendererRadial;\r\n//# sourceMappingURL=AxisRendererRadial.js.map","/**\r\n * Radar chart module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, XYChartDataItem } from \"./XYChart\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { RadarSeries } from \"../series/RadarSeries\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { AxisRendererRadial } from \"../axes/AxisRendererRadial\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[RadarChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar RadarChartDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadarChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return RadarChartDataItem;\r\n}(XYChartDataItem));\r\nexport { RadarChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Radar chart.\r\n *\r\n * @see {@link IRadarChartEvents} for a list of available Events\r\n * @see {@link IRadarChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/radar-chart/} for documentation\r\n * @important\r\n */\r\nvar RadarChart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadarChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Defines X axis renderer type.\r\n         */\r\n        _this._axisRendererX = AxisRendererCircular;\r\n        /**\r\n         * Defines Y axis renderer type.\r\n         */\r\n        _this._axisRendererY = AxisRendererRadial;\r\n        /**\r\n         * used by cursor. We adjust innerradius if start and end angle are close to each other\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.innerRadiusModifyer = 1;\r\n        _this.className = \"RadarChart\";\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        _this.radius = percent(80);\r\n        _this.innerRadius = 0;\r\n        var radarContainer = _this.plotContainer.createChild(Container);\r\n        radarContainer.shouldClone = false;\r\n        radarContainer.layout = \"absolute\";\r\n        radarContainer.align = \"center\";\r\n        radarContainer.valign = \"middle\";\r\n        _this.seriesContainer.parent = radarContainer;\r\n        _this.radarContainer = radarContainer;\r\n        _this.bulletsContainer.parent = radarContainer;\r\n        _this.axisBulletsContainer = radarContainer;\r\n        _this._cursorContainer = radarContainer;\r\n        _this._bulletMask = radarContainer.createChild(Circle);\r\n        _this._bulletMask.shouldClone = false;\r\n        _this._bulletMask.element = _this.paper.add(\"path\");\r\n        _this._bulletMask.opacity = 0;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    RadarChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Radar chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Decorates Axis with required properties for this chart.\r\n     *\r\n     * @param axis  Axis\r\n     */\r\n    RadarChart.prototype.processAxis = function (axis) {\r\n        _super.prototype.processAxis.call(this, axis);\r\n        var renderer = axis.renderer;\r\n        renderer.gridContainer.parent = renderer;\r\n        renderer.breakContainer.parent = renderer;\r\n        axis.parent = this.radarContainer;\r\n        renderer.toBack();\r\n    };\r\n    /**\r\n     * Updates all X axes after range change event.\r\n     */\r\n    RadarChart.prototype.handleXAxisRangeChange = function () {\r\n        _super.prototype.handleXAxisRangeChange.call(this);\r\n        $iter.each(this.yAxes.iterator(), function (axis) {\r\n            axis.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Updates all Y axes after range change event.\r\n     */\r\n    RadarChart.prototype.handleYAxisRangeChange = function () {\r\n        _super.prototype.handleYAxisRangeChange.call(this);\r\n        $iter.each(this.xAxes.iterator(), function (axis) {\r\n            axis.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    RadarChart.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up cursor\r\n            if ($type.hasValue(config.cursor) && !$type.hasValue(config.cursor.type)) {\r\n                config.cursor.type = \"RadarCursor\";\r\n            }\r\n            // Set up series\r\n            if ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    config.series[i].type = config.series[i].type || \"RadarSeries\";\r\n                }\r\n            }\r\n            // Set up axes\r\n            /*if ($type.hasValue(config.xAxes) && $type.isArray(config.xAxes)) {\r\n                for (let i = 0, len = config.xAxes.length; i < len; i++) {\r\n                    config.xAxes[i].type = config.xAxes[i].type || \"AxisRendererCircular\";\r\n                }\r\n            }\r\n            if ($type.hasValue(config.yAxes) && $type.isArray(config.yAxes)) {\r\n                for (let i = 0, len = config.yAxes.length; i < len; i++) {\r\n                    config.yAxes[i].type = config.yAxes[i].type || \"AxisRendererRadial\";\r\n                }\r\n            }*/\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Does calculations before drawing the chart.\r\n     */\r\n    RadarChart.prototype.beforeDraw = function () {\r\n        _super.prototype.beforeDraw.call(this);\r\n        var plotContainer = this.plotContainer;\r\n        var rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n        var innerRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        var wr = plotContainer.innerWidth / rect.width;\r\n        var hr = plotContainer.innerHeight / rect.height;\r\n        var innerRadius = this.innerRadius;\r\n        if (innerRadius instanceof Percent) {\r\n            var value = innerRadius.value;\r\n            var mr = Math.min(wr, hr);\r\n            value = Math.max(mr * value, mr - Math.min(plotContainer.innerHeight, plotContainer.innerWidth)) / mr;\r\n            innerRect = $math.getArcRect(this.startAngle, this.endAngle, value);\r\n            this.innerRadiusModifyer = value / innerRadius.value;\r\n            innerRadius = percent(value * 100);\r\n        }\r\n        // @todo handle this when innerRadius set in pixels (do it for pie also)\r\n        rect = $math.getCommonRectangle([rect, innerRect]);\r\n        var maxRadius = Math.min(plotContainer.innerWidth / rect.width, plotContainer.innerHeight / rect.height);\r\n        var diameter = $utils.relativeRadiusToValue(this.radius, maxRadius) * 2 || 0;\r\n        var radius = diameter / 2;\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        this._pixelInnerRadius = $utils.relativeRadiusToValue(innerRadius, radius);\r\n        this._bulletMask.path = $path.arc(startAngle, endAngle - startAngle, radius, this._pixelInnerRadius);\r\n        $iter.each(this.xAxes.iterator(), function (axis) {\r\n            if (axis.renderer.useChartAngles) {\r\n                axis.renderer.startAngle = startAngle;\r\n                axis.renderer.endAngle = endAngle;\r\n            }\r\n            axis.width = diameter;\r\n            axis.height = diameter;\r\n            //axis.renderer.width = diameter;\r\n            //axis.renderer.height = diameter;\r\n            axis.renderer.pixelRadiusReal = radius;\r\n            axis.renderer.innerRadius = innerRadius;\r\n        });\r\n        $iter.each(this.yAxes.iterator(), function (axis) {\r\n            axis.renderer.startAngle = startAngle;\r\n            axis.renderer.endAngle = endAngle;\r\n            axis.width = diameter;\r\n            axis.height = diameter;\r\n            //axis.renderer.width = diameter;\r\n            //axis.renderer.height = diameter;\r\n            axis.renderer.pixelRadiusReal = radius;\r\n            axis.renderer.innerRadius = innerRadius;\r\n        });\r\n        var cursor = this.cursor;\r\n        if (cursor) {\r\n            cursor.width = diameter;\r\n            cursor.height = diameter;\r\n            cursor.startAngle = startAngle;\r\n            cursor.endAngle = endAngle;\r\n        }\r\n        this.radarContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };\r\n        this.radarContainer.validatePosition();\r\n    };\r\n    /**\r\n     * Creates and returns a new Series, suitable for RadarChart.\r\n     *\r\n     * @return New Series\r\n     */\r\n    RadarChart.prototype.createSeries = function () {\r\n        return new RadarSeries();\r\n    };\r\n    Object.defineProperty(RadarChart.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Radar face. (degrees)\r\n         *\r\n         * Normally, a circular radar face begins (the radial axis is drawn) at the\r\n         * top center. (at -90 degrees)\r\n         *\r\n         * You can use `startAngle` to change this setting.\r\n         *\r\n         * E.g. setting this to 0 will make the radial axis start horizontally to\r\n         * the right, as opposed to vertical.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set those to lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * @default -90\r\n         * @param value  Start angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarChart.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Radar face. (degrees)\r\n         *\r\n         * Normally, a circular radar face ends (the radial axis is drawn) exactly\r\n         * where it has started, forming a full 360 circle. (at 270 degrees)\r\n         *\r\n         * You can use `endAngle` to end the circle somewhere else.\r\n         *\r\n         * E.g. setting this to 180 will make the radar face end at horizontal line\r\n         * to the left off the center.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set those to lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * @default -90\r\n         * @param value  End angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarChart.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the Radar face.\r\n         *\r\n         * This can either be in absolute pixel value, or relative [[Percent]].\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarChart.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * @return Inner radius in pixels\r\n         */\r\n        get: function () {\r\n            return this._pixelInnerRadius;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarChart.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the radar face.\r\n         *\r\n         * This can either be in absolute pixel value, or relative [[Percent]].\r\n         *\r\n         * If set in Percent, it will be relative to `radius`. (outer radius)\r\n         *\r\n         * @param value Inner radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Triggers (re)rendering of the horizontal (X) axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis Axis\r\n     */\r\n    RadarChart.prototype.updateXAxis = function (renderer) {\r\n        //do not call super!\r\n        if (renderer) {\r\n            renderer.processRenderer();\r\n        }\r\n    };\r\n    /**\r\n     * Triggers (re)rendering of the vertical (Y) axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis Axis\r\n     */\r\n    RadarChart.prototype.updateYAxis = function (renderer) {\r\n        // do not call super!\r\n        if (renderer) {\r\n            renderer.processRenderer();\r\n        }\r\n    };\r\n    return RadarChart;\r\n}(XYChart));\r\nexport { RadarChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarChart\"] = RadarChart;\r\n//# sourceMappingURL=RadarChart.js.map","/**\r\n * Functionality for drawing simple ClockHands\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Trapezoid } from \"../../core/elements/Trapezoid\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * ClockHand class is capable of drawing a simple pointy shape with optionally\r\n * rounderd corners and an icon.\r\n *\r\n * @see {@link IClockHandEvents} for a list of available events\r\n * @see {@link IClockHandAdapters} for a list of available Adapters\r\n * @todo Improve\r\n * @important\r\n */\r\nvar ClockHand = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClockHand, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ClockHand() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * An Axis hand is related to.\r\n         */\r\n        _this._axis = new MutableValueDisposer();\r\n        _this.className = \"ClockHand\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.stroke = _this.fill;\r\n        var pin = new Circle();\r\n        pin.radius = 5;\r\n        _this.pin = pin;\r\n        _this.isMeasured = false;\r\n        _this.startWidth = 5;\r\n        _this.endWidth = 1;\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.radius = percent(100);\r\n        _this.innerRadius = percent(0);\r\n        var hand = new Trapezoid();\r\n        _this.hand = hand;\r\n        _this._disposers.push(_this._axis);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Re(validates) the clock hand, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ClockHand.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        var hand = this.hand;\r\n        hand.width = this.pixelWidth;\r\n        var h = Math.max(this.startWidth, this.endWidth);\r\n        hand.height = h;\r\n        hand.leftSide = percent(this.startWidth / h * 100);\r\n        hand.rightSide = percent(this.endWidth / h * 100);\r\n        if (this.axis) {\r\n            var renderer = this.axis.renderer;\r\n            var x0 = $utils.relativeRadiusToValue(this.innerRadius, renderer.pixelRadius);\r\n            var x1 = $utils.relativeRadiusToValue(this.radius, renderer.pixelRadius);\r\n            hand.x = x0;\r\n            hand.y = -h / 2;\r\n            hand.width = x1 - x0;\r\n        }\r\n    };\r\n    Object.defineProperty(ClockHand.prototype, \"pin\", {\r\n        /**\r\n         * @return Pin element\r\n         */\r\n        get: function () {\r\n            return this._pin;\r\n        },\r\n        /**\r\n         * A circle element used as hand's base. (pin)\r\n         *\r\n         * @param pin  Pin element\r\n         */\r\n        set: function (pin) {\r\n            if (this._pin) {\r\n                this.removeDispose(this._pin);\r\n            }\r\n            if (pin) {\r\n                this._pin = pin;\r\n                pin.parent = this;\r\n                this._disposers.push(pin);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"hand\", {\r\n        /**\r\n         * @return Hand element\r\n         */\r\n        get: function () {\r\n            return this._hand;\r\n        },\r\n        /**\r\n         * A trapezoid shape used for hand itself.\r\n         *\r\n         * The shape of the trapezoid is controlled by ClockHand's `startWidth` and\r\n         * `endWidth` properties.\r\n         *\r\n         * Set `endWidth` to 1 (px) to make it pointy.\r\n         *\r\n         * @param hand  Hand element\r\n         */\r\n        set: function (hand) {\r\n            if (this._hand) {\r\n                this.removeDispose(this._hand);\r\n            }\r\n            if (hand) {\r\n                this._hand = hand;\r\n                hand.parent = this;\r\n                this._disposers.push(hand);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Radius of the hand's outer end. (tip)\r\n         *\r\n         * Absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @default Percent(0)\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Radius of the hand's inner end. (base)\r\n         *\r\n         * Absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @default Percent(0)\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"startWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startWidth\");\r\n        },\r\n        /**\r\n         * Width, in pixels, of the clock hand's inner end. (base)\r\n         *\r\n         * @default 5\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"endWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endWidth\");\r\n        },\r\n        /**\r\n         * Width, in pixels, of the clock hand's outer end. (tip)\r\n         *\r\n         * @default 1\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"rotationDirection\", {\r\n        /**\r\n         * @return rotationDirection\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"rotationDirection\");\r\n        },\r\n        /**\r\n         * Rotation direction\r\n         *\r\n         * @default any\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"rotationDirection\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Moves clock hand to particular value.\r\n     *\r\n     * If `duration` is set to a number in milliseconds, the hand will move\r\n     * to the new position gracefully, rather than jumping rigth to it.\r\n     *\r\n     * Alternatively, you can also set `value` directly.\r\n     *\r\n     * @param value     New value\r\n     * @param duration  Animation duration (ms)\r\n     * @param easing  Animation easing function\r\n     */\r\n    ClockHand.prototype.showValue = function (value, duration, easing) {\r\n        this._value = value;\r\n        if (value != undefined) {\r\n            if (!$type.isNumber(duration)) {\r\n                duration = 0;\r\n            }\r\n            if (this.axis) {\r\n                var renderer = this.axis.renderer;\r\n                var newAngle = renderer.positionToAngle(this.axis.anyToPosition(value));\r\n                var currentAngle = this.rotation;\r\n                if (this.rotationDirection == \"clockWise\") {\r\n                    if (newAngle < currentAngle) {\r\n                        this.rotation = currentAngle - 360;\r\n                    }\r\n                }\r\n                if (this.rotationDirection == \"counterClockWise\") {\r\n                    if (newAngle > currentAngle) {\r\n                        this.rotation = currentAngle + 360;\r\n                    }\r\n                }\r\n                this.animate({ property: \"rotation\", to: newAngle }, duration, easing);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ClockHand.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        /**\r\n         * A current value clock hand is pointing to.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.showValue(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClockHand.prototype, \"axis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            return this._axis.get();\r\n        },\r\n        /**\r\n         * An Axis clock hand is associated with.\r\n         *\r\n         * Hand's `value` relates to values on the Axis.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            if (this.axis != axis) {\r\n                this._axis.set(axis, new MultiDisposer([\r\n                    axis.events.on(\"datavalidated\", this.updateValue, this, false),\r\n                    axis.events.on(\"datarangechanged\", this.updateValue, this, false),\r\n                    axis.events.on(\"dataitemsvalidated\", this.updateValue, this, false),\r\n                    axis.events.on(\"propertychanged\", this.invalidate, this, false)\r\n                ]));\r\n            }\r\n            if (axis) {\r\n                var chart = axis.chart;\r\n                if (chart) {\r\n                    this.rotation = chart.startAngle;\r\n                }\r\n            }\r\n            this.parent = axis.renderer;\r\n            this.zIndex = 5;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Triggers `value` accessor, so that Hand animates to new position, in case\r\n     * value has changed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ClockHand.prototype.updateValue = function () {\r\n        this.value = this.value;\r\n    };\r\n    /**\r\n * Processes JSON-based config before it is applied to the object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param config  Config\r\n */\r\n    ClockHand.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Connect clock hands with axes\r\n            if ($type.hasValue(config.axis) && $type.isString(config.axis) && this.map.hasKey(config.axis)) {\r\n                config.axis = this.map.getKey(config.axis);\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return ClockHand;\r\n}(Container));\r\nexport { ClockHand };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ClockHand\"] = ClockHand;\r\n//# sourceMappingURL=ClockHand.js.map","/**\r\n * Module for building Gauge charts.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadarChart, RadarChartDataItem } from \"./RadarChart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { ClockHand } from \"../elements/ClockHand\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[GaugeChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar GaugeChartDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GaugeChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GaugeChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"GaugeChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return GaugeChartDataItem;\r\n}(RadarChartDataItem));\r\nexport { GaugeChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Gauge chart.\r\n *\r\n * @see {@link IGaugeChartEvents} for a list of available Events\r\n * @see {@link IGaugeChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation\r\n * @important\r\n */\r\nvar GaugeChart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GaugeChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GaugeChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"GaugeChart\";\r\n        _this.startAngle = 180;\r\n        _this.endAngle = 360;\r\n        _this.hands = new ListTemplate(new ClockHand());\r\n        _this.hands.events.on(\"inserted\", _this.processHand, _this, false);\r\n        _this._disposers.push(new ListDisposer(_this.hands));\r\n        _this._disposers.push(_this.hands.template);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    GaugeChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Gauge chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Decorates a [[ClockHand]] when it is added to the chart.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    GaugeChart.prototype.processHand = function (event) {\r\n        var hand = event.newValue;\r\n        if (!hand.axis) {\r\n            hand.axis = this.xAxes.getIndex(0);\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    GaugeChart.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"hands\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"hands\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    return GaugeChart;\r\n}(RadarChart));\r\nexport { GaugeChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GaugeChart\"] = GaugeChart;\r\n//# sourceMappingURL=GaugeChart.js.map","/**\r\n * Defines Percent Chart Series.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem } from \"./Series\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PercentSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PercentSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds an `id` attribute the the slice element and returns its id.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeriesDataItem.prototype.uidAttr = function () {\r\n        return this.slice.uidAttr();\r\n    };\r\n    /**\r\n     * Hide the data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param toValue   Target value for animation\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PercentSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        if (!fields) {\r\n            fields = [\"value\"];\r\n        }\r\n        return _super.prototype.hide.call(this, duration, delay, 0, fields);\r\n    };\r\n    /**\r\n     * Sets visibility of the Data Item.\r\n     *\r\n     * @param value Data Item\r\n     */\r\n    PercentSeriesDataItem.prototype.setVisibility = function (value, noChangeValues) {\r\n        if (!noChangeValues) {\r\n            if (value) {\r\n                this.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n            }\r\n            else {\r\n                this.setWorkingValue(\"value\", 0, 0, 0);\r\n            }\r\n        }\r\n        _super.prototype.setVisibility.call(this, value, noChangeValues);\r\n    };\r\n    /**\r\n     * Show hidden data item (and corresponding cisual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PercentSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        if (!fields) {\r\n            fields = [\"value\"];\r\n        }\r\n        return _super.prototype.show.call(this, duration, delay, fields);\r\n    };\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"category\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.properties.category;\r\n        },\r\n        /**\r\n         * Category.\r\n         *\r\n         * @param value  Category\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"category\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a marker used in the legend for this slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Marker container\r\n     */\r\n    PercentSeriesDataItem.prototype.createLegendMarker = function (marker) {\r\n        this.component.createLegendMarker(marker, this);\r\n    };\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"tick\", {\r\n        /**\r\n         * A Tick element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Tick element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._tick) {\r\n                var tick_1 = this.component.ticks.create();\r\n                this._tick = tick_1;\r\n                this.addSprite(tick_1);\r\n                this._disposers.push(tick_1);\r\n                tick_1.parent = this.component.ticksContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.ticks.removeValue(tick_1);\r\n                    }\r\n                }));\r\n                tick_1.visible = this.visible;\r\n            }\r\n            return this._tick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"label\", {\r\n        /**\r\n         * A Label element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this.addSprite(label_1);\r\n                this._label = label_1;\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.component.labelsContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n                label_1.visible = this.visible;\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"slice\", {\r\n        /**\r\n         * An element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Slice element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._slice) {\r\n                var component_1 = this.component;\r\n                var slice_1 = component_1.slices.create();\r\n                this.addSprite(slice_1);\r\n                this._slice = slice_1;\r\n                this._disposers.push(slice_1);\r\n                slice_1.parent = component_1.slicesContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    component_1.slices.removeValue(slice_1);\r\n                }));\r\n                slice_1.visible = this.visible;\r\n                // Apply accessibility\r\n                if (component_1.itemsFocusable()) {\r\n                    this.component.role = \"menu\";\r\n                    slice_1.role = \"menuitem\";\r\n                    slice_1.focusable = true;\r\n                }\r\n                else {\r\n                    this.component.role = \"list\";\r\n                    slice_1.role = \"listitem\";\r\n                    slice_1.focusable = false;\r\n                }\r\n                // Apply screen reader label\r\n                if (slice_1.focusable) {\r\n                    slice_1.events.on(\"focus\", function (ev) {\r\n                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    slice_1.events.on(\"blur\", function (ev) {\r\n                        slice_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (slice_1.hoverable) {\r\n                    slice_1.events.on(\"over\", function (ev) {\r\n                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    slice_1.events.on(\"out\", function (ev) {\r\n                        slice_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n            }\r\n            return this._slice;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Disabled in legend?\r\n         */\r\n        get: function () {\r\n            return this.properties.hiddenInLegend;\r\n        },\r\n        /**\r\n         * Should dataItem (slice) be hidden in legend?\r\n         *\r\n         * @param value Visible in legend?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"hiddenInLegend\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PercentSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { PercentSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\r\nvar PercentSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PercentSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentSeries\";\r\n        _this._addAllDataItems = false;\r\n        _this.colors = new ColorSet();\r\n        _this.colors.step = 1;\r\n        _this.isMeasured = true;\r\n        _this.calculatePercent = true;\r\n        var slicesContainer = _this.createChild(Container);\r\n        slicesContainer.shouldClone = false;\r\n        slicesContainer.isMeasured = false;\r\n        _this.slicesContainer = slicesContainer;\r\n        var ticksContainer = _this.createChild(Container);\r\n        ticksContainer.shouldClone = false;\r\n        ticksContainer.isMeasured = false;\r\n        ticksContainer.layout = \"none\";\r\n        _this.ticksContainer = ticksContainer;\r\n        var labelsContainer = _this.createChild(Container);\r\n        labelsContainer.shouldClone = false;\r\n        labelsContainer.isMeasured = false;\r\n        labelsContainer.layout = \"none\";\r\n        _this.labelsContainer = labelsContainer;\r\n        _this.alignLabels = false;\r\n        _this.bulletsContainer.toFront();\r\n        // Make all slices focusable\r\n        _this.skipFocusThreshold = 50;\r\n        var defaultState = _this.defaultState;\r\n        defaultState.transitionEasing = $ease.sinOut;\r\n        // Accessibility\r\n        _this.itemReaderText = \"{category}: {value.percent.formatNumber('#.#')}%\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a slice element.\r\n     *\r\n     * @return Slice\r\n     */\r\n    PercentSeries.prototype.createSlice = function () {\r\n        return new Sprite();\r\n    };\r\n    /**\r\n     * Creates a tick element.\r\n     *\r\n     * @return Tick\r\n     */\r\n    PercentSeries.prototype.createTick = function () {\r\n        return new Tick();\r\n    };\r\n    /**\r\n     * Sreates label element.\r\n     *\r\n     * @return label\r\n     */\r\n    PercentSeries.prototype.createLabel = function () {\r\n        return new Label();\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"slices\", {\r\n        /**\r\n         * A list of slice elements for the series.\r\n         *\r\n         * Use its `template` to configure look and behavior of the slices. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.slices.template.stroke = am4core.color(\"#fff\");\r\n         * series.slices.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.slices.template.stroke = am4core.color(\"#fff\");\r\n         * series.slices.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"slices\": {\r\n         *       \"stroke\": \"#fff\",\r\n         *       \"strokeWidth\": 2\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Slices\r\n         */\r\n        get: function () {\r\n            if (!this._slices) {\r\n                var slice = this.createSlice();\r\n                slice.applyOnClones = true;\r\n                this._disposers.push(slice);\r\n                this.initSlice(slice);\r\n                this._slices = new ListTemplate(slice);\r\n                this._disposers.push(new ListDisposer(this._slices));\r\n            }\r\n            return this._slices;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"ticks\", {\r\n        /**\r\n         * A list of tick elements for the series. Ticks connect slice to its label.\r\n         *\r\n         * Use its `template` to configure look and behavior of the ticks. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.ticks.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.ticks.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"ticks\": {\r\n         *       \"strokeWidth\": 2\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Slices\r\n         */\r\n        get: function () {\r\n            if (!this._ticks) {\r\n                var tick = this.createTick();\r\n                tick.applyOnClones = true;\r\n                this._disposers.push(tick);\r\n                this.initTick(tick);\r\n                this._ticks = new ListTemplate(tick);\r\n                this._disposers.push(new ListDisposer(this._ticks));\r\n            }\r\n            return this._ticks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"labels\", {\r\n        /**\r\n         * A list of slice label elements for the series.\r\n         *\r\n         * Use its `template` to configure look and behavior of the labels. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.labels.template.fill = am4core.color(\"#c00\");\r\n         * series.labels.template.fontSize = 20;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.labels.template.fill = am4core.color(\"#c00\");\r\n         * series.labels.template.fontSize = 20;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"stroke\": \"#c00\",\r\n         *       \"fontSize\": 20\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Slices\r\n         */\r\n        get: function () {\r\n            if (!this._labels) {\r\n                var label = this.createLabel();\r\n                label.applyOnClones = true;\r\n                this._disposers.push(label);\r\n                this.initLabel(label);\r\n                this._labels = new ListTemplate(label);\r\n                this._disposers.push(new ListDisposer(this._labels));\r\n            }\r\n            return this._labels;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PercentSeries.prototype.createDataItem = function () {\r\n        return new PercentSeriesDataItem();\r\n    };\r\n    /**\r\n     * Creates and returns a new slice element.\r\n     *\r\n     * @param sliceType  Type of the slice element\r\n     * @return Slice\r\n     */\r\n    PercentSeries.prototype.initSlice = function (slice) {\r\n    };\r\n    PercentSeries.prototype.initLabel = function (label) {\r\n        label.text = \"{category}: {value.percent.formatNumber('#.0')}%\";\r\n        label.isMeasured = false;\r\n        label.padding(5, 5, 5, 5);\r\n    };\r\n    PercentSeries.prototype.initTick = function (label) {\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeries.prototype.validateDataItems = function () {\r\n        this.colors.reset();\r\n        if (this.patterns) {\r\n            this.patterns.reset();\r\n        }\r\n        _super.prototype.validateDataItems.call(this);\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.validateDataElement = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        if (slice) {\r\n            if (slice.fill == undefined) {\r\n                if (this.patterns) {\r\n                    if (!$type.hasValue(slice.stroke)) {\r\n                        slice.stroke = this.colors.next();\r\n                    }\r\n                    slice.fill = this.patterns.next();\r\n                    if ($type.hasValue(slice.fillOpacity)) {\r\n                        slice.fill.backgroundOpacity = slice.fillOpacity;\r\n                    }\r\n                    if (slice.stroke instanceof Color) {\r\n                        slice.fill.stroke = slice.stroke;\r\n                        slice.fill.fill = slice.stroke;\r\n                    }\r\n                }\r\n                else {\r\n                    slice.fill = this.colors.next();\r\n                }\r\n            }\r\n            else {\r\n                this.colors.currentStep += this.colors.step;\r\n            }\r\n            if (slice.stroke == undefined) {\r\n                slice.stroke = slice.fill;\r\n            }\r\n        }\r\n        // do this at the end, otherwise bullets won't be positioned properly\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        if (slice) {\r\n            dataItem.bullets.each(function (key, bullet) {\r\n                if (bullet.fill == undefined) {\r\n                    bullet.fill = slice.fill;\r\n                }\r\n                if (bullet.stroke == undefined) {\r\n                    bullet.stroke = slice.stroke;\r\n                }\r\n            });\r\n        }\r\n        this.updateLegendValue(dataItem);\r\n    };\r\n    /**\r\n     * Validates (processes) data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeries.prototype.validateData = function () {\r\n        _super.prototype.validateData.call(this);\r\n        if (this.chart) {\r\n            this.chart.feedLegend();\r\n        }\r\n    };\r\n    /**\r\n     * Arranges slice labels according to position settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItems  Data items\r\n     */\r\n    PercentSeries.prototype.arrangeLabels = function (dataItems) {\r\n        for (var i = 0, len = dataItems.length; i < len; i++) {\r\n            var dataItem = dataItems[i];\r\n            var label = dataItem.label;\r\n            if (label) {\r\n                if (label.invalid) {\r\n                    label.validate();\r\n                }\r\n                var lh = label.measuredHeight;\r\n                if (!label.visible) {\r\n                    lh = 0;\r\n                }\r\n                if (label.pixelY - lh / 2 < -this.maxHeight / 2) {\r\n                    label.y = -this.maxHeight / 2 + lh / 2;\r\n                }\r\n                var nextLabel = this.getNextLabel(i + 1, dataItems);\r\n                var bottom = label.pixelY + lh;\r\n                if (nextLabel) {\r\n                    if (nextLabel.y < bottom) {\r\n                        nextLabel.y = bottom;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PercentSeries.prototype.arrangeLabels2 = function (dataItems) {\r\n        var previousTop = this.maxHeight / 2;\r\n        for (var i = dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = dataItems[i];\r\n            var label = dataItem.label;\r\n            if (label) {\r\n                if (label.invalid) {\r\n                    label.validate();\r\n                }\r\n                var lh = label.measuredHeight;\r\n                if (!label.visible) {\r\n                    lh = 0;\r\n                }\r\n                if (i == dataItems.length - 1) {\r\n                    previousTop += lh / 2;\r\n                }\r\n                if (label.pixelY + lh > previousTop) {\r\n                    label.y = previousTop - lh;\r\n                    previousTop = label.y;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the next label according to `index`.\r\n     *\r\n     * @param index      Current index\r\n     * @param dataItems  Data items\r\n     * @return Label element\r\n     */\r\n    PercentSeries.prototype.getNextLabel = function (index, dataItems) {\r\n        if (dataItems.length >= index) {\r\n            var nextDataItem = dataItems[index];\r\n            if (nextDataItem) {\r\n                if (nextDataItem.label) {\r\n                    if (nextDataItem.visible) {\r\n                        return nextDataItem.label;\r\n                    }\r\n                    else {\r\n                        return this.getNextLabel(index + 1, dataItems);\r\n                    }\r\n                }\r\n                else {\r\n                    return this.getNextLabel(index + 1, dataItems);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"colors\", {\r\n        /**\r\n         * @return Color set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * A color set to be used for slices.\r\n         *\r\n         * For each new subsequent slice, the chart will assign the next color in\r\n         * this set.\r\n         *\r\n         * @param value  Color set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"patterns\", {\r\n        /**\r\n         * @return Pattern set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"patterns\");\r\n        },\r\n        /**\r\n         * A [[PatternSet]] to use when creating patterned fills for slices.\r\n         *\r\n         * @since 4.7.5\r\n         * @param value  Pattern set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"patterns\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker    Container\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.createLegendMarker = function (marker, dataItem) {\r\n        $iter.each(marker.children.iterator(), function (child) {\r\n            var slice = dataItem.slice;\r\n            child.defaultState.properties.fill = slice.fill;\r\n            child.defaultState.properties.stroke = slice.stroke;\r\n            child.defaultState.properties.fillOpacity = slice.fillOpacity;\r\n            child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n            child.fill = slice.fill;\r\n            child.stroke = slice.stroke;\r\n            child.fillOpacity = slice.fillOpacity;\r\n            child.strokeOpacity = slice.strokeOpacity;\r\n            if (child.fill == undefined) {\r\n                child.__disabled = true;\r\n            }\r\n            var legendDataItem = marker.dataItem;\r\n            legendDataItem.color = slice.fill;\r\n            legendDataItem.colorOrig = slice.fill;\r\n            child.addDisposer(slice.events.on(\"propertychanged\", function (ev) {\r\n                if (ev.property == \"fill\") {\r\n                    child.__disabled = false;\r\n                    if (!child.isActive) {\r\n                        child.fill = slice.fill;\r\n                    }\r\n                    child.defaultState.properties.fill = slice.fill;\r\n                    legendDataItem.color = slice.fill;\r\n                    legendDataItem.colorOrig = slice.fill;\r\n                }\r\n                if (ev.property == \"stroke\") {\r\n                    if (!child.isActive) {\r\n                        child.stroke = slice.stroke;\r\n                    }\r\n                    child.defaultState.properties.stroke = slice.stroke;\r\n                }\r\n            }, undefined, false));\r\n        });\r\n    };\r\n    /**\r\n     * Repositions bullets when slice's size changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PercentSeries.prototype.handleSliceScale = function (event) {\r\n        var _this = this;\r\n        var slice = event.target;\r\n        var dataItem = slice.dataItem;\r\n        $iter.each(dataItem.bullets.iterator(), function (a) {\r\n            var value = a[1];\r\n            _this.positionBullet(value);\r\n        });\r\n    };\r\n    /**\r\n     * Repositions bullet and labels when slice moves.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PercentSeries.prototype.handleSliceMove = function (event) {\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[PercentSeries]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    PercentSeries.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.slices.template.copyFrom(source.slices.template);\r\n        this.labels.template.copyFrom(source.labels.template);\r\n        this.ticks.template.copyFrom(source.ticks.template);\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"alignLabels\", {\r\n        /**\r\n         * @return Align labels?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"alignLabels\");\r\n        },\r\n        /**\r\n         * Align labels into nice vertical columns?\r\n         *\r\n         * This will ensure that labels never overlap with each other.\r\n         *\r\n         * Arranging labels into columns makes them more readble, and better user\r\n         * experience.\r\n         *\r\n         * If set to `false` labels will be positioned at `label.radius` distance,\r\n         * and may, in some cases, overlap.\r\n         *\r\n         * @default true\r\n         * @param value  Align labels?\r\n         */\r\n        set: function (value) {\r\n            this.setAlignLabels(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    PercentSeries.prototype.setAlignLabels = function (value) {\r\n        this.setPropertyValue(\"alignLabels\", value, true);\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"ignoreZeroValues\", {\r\n        /**\r\n         * @return Ignore zero values\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"ignoreZeroValues\");\r\n        },\r\n        /**\r\n         * If set to `true` the chart will not show slices with zero values.\r\n         *\r\n         * @default false\r\n         * @since 4.7.9\r\n         * @param  value  Ignore zero values\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"ignoreZeroValues\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.updateLegendValue = function (dataItem) {\r\n        if (dataItem) {\r\n            var legendDataItem = dataItem.legendDataItem;\r\n            var legendSettings = dataItem.legendSettings;\r\n            if (legendDataItem && legendSettings) {\r\n                if (legendSettings) {\r\n                    if (legendSettings.labelText) {\r\n                        legendDataItem.label.text = legendSettings.labelText;\r\n                    }\r\n                    if (legendSettings.itemLabelText) {\r\n                        legendDataItem.label.text = legendSettings.itemLabelText;\r\n                    }\r\n                    if (legendSettings.valueText) {\r\n                        legendDataItem.valueLabel.text = legendSettings.valueText;\r\n                    }\r\n                    if (legendSettings.itemValueText) {\r\n                        legendDataItem.valueLabel.text = legendSettings.itemValueText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return PercentSeries;\r\n}(Series));\r\nexport { PercentSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PercentSeries\"] = PercentSeries;\r\nregistry.registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Disable labels and ticks.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof PercentSeries) {\r\n            var state = target.states.create(stateId);\r\n            var labelState = target.labels.template.states.create(stateId);\r\n            labelState.properties.disabled = true;\r\n            var tickState = target.ticks.template.states.create(stateId);\r\n            tickState.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=PercentSeries.js.map","/**\r\n * Percent chart module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, SerialChartDataItem } from \"./SerialChart\";\r\nimport { PercentSeries } from \"../series/PercentSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PercentChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PercentChartDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PercentChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PercentChartDataItem;\r\n}(SerialChartDataItem));\r\nexport { PercentChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This is a base class for \"percent-based\" chart types like Pie and Funnel.\r\n *\r\n * @see {@link IPercentChartEvents} for a list of available Events\r\n * @see {@link IPercentChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for Pie chart documentation\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for Sliced chart documentation\r\n */\r\nvar PercentChart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PercentChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PercentChart\";\r\n        _this.align = \"none\";\r\n        _this.valign = \"none\";\r\n        // so that the chart is always drawn, even the legend wants all the space\r\n        _this.chartContainer.minHeight = 50;\r\n        _this.chartContainer.minWidth = 50;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates chart data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentChart.prototype.validateData = function () {\r\n        _super.prototype.validateData.call(this);\r\n        this.feedLegend();\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    PercentChart.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            $iter.each(this.series.iterator(), function (series) {\r\n                if (!series.hiddenInLegend) {\r\n                    $iter.each(series.dataItems.iterator(), function (dataItem) {\r\n                        if (!dataItem.hiddenInLegend) {\r\n                            legendData_1.push(dataItem);\r\n                            if (!dataItem.legendSettings) {\r\n                                dataItem.legendSettings = series.legendSettings;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            legend.data = legendData_1;\r\n            legend.dataFields.name = \"category\";\r\n        }\r\n    };\r\n    /**\r\n     * Creates a new [[PercentSeries]].\r\n     *\r\n     * @return New series\r\n     */\r\n    PercentChart.prototype.createSeries = function () {\r\n        return new PercentSeries();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    PercentChart.prototype.setLegend = function (legend) {\r\n        _super.prototype.setLegend.call(this, legend);\r\n        if (legend) {\r\n            legend.labels.template.text = \"{category}\";\r\n            legend.valueLabels.template.text = \"{value.percent.formatNumber('#.0')}%\";\r\n            legend.itemContainers.template.events.on(\"over\", function (event) {\r\n                var PercentSeriesDataItem = event.target.dataItem.dataContext;\r\n                if (PercentSeriesDataItem.visible && !PercentSeriesDataItem.isHiding) {\r\n                    PercentSeriesDataItem.slice.isHover = true;\r\n                }\r\n            });\r\n            legend.itemContainers.template.events.on(\"out\", function (event) {\r\n                var PercentSeriesDataItem = event.target.dataItem.dataContext;\r\n                PercentSeriesDataItem.slice.isHover = false;\r\n            });\r\n        }\r\n    };\r\n    return PercentChart;\r\n}(SerialChart));\r\nexport { PercentChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @hidden\r\n */\r\nregistry.registeredClasses[\"PercentChart\"] = PercentChart;\r\nregistry.registeredClasses[\"PercentChartDataItem\"] = PercentChartDataItem;\r\n//# sourceMappingURL=PercentChart.js.map","/**\r\n * Pie tick module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws an tick line for a pie slice connecting it to a related label.\r\n *\r\n * @see {@link IPieTickEvents} for a list of available events\r\n * @see {@link IPieTickAdapters} for a list of available Adapters\r\n */\r\nvar PieTick = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieTick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieTick() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A label element this tick is attached to.\r\n         */\r\n        _this._label = new MutableValueDisposer();\r\n        /**\r\n         * A slice element this tick is attached to.\r\n         */\r\n        _this._slice = new MutableValueDisposer();\r\n        _this.className = \"PieTick\";\r\n        _this.element = _this.paper.add(\"polyline\");\r\n        _this._disposers.push(_this._label);\r\n        _this._disposers.push(_this._slice);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieTick.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var slice = this.slice;\r\n        var label = this.label;\r\n        var series = slice.dataItem.component;\r\n        if (slice && slice.radius > 0 && label && label.text) {\r\n            var x0 = slice.dx + slice.slice.dx + slice.pixelX + slice.ix * slice.radius * slice.scale;\r\n            var y0 = slice.dy + slice.slice.dy + slice.pixelY + slice.iy * slice.radiusY * slice.scale;\r\n            var x1 = void 0;\r\n            var y1 = void 0;\r\n            var x2 = void 0;\r\n            var y2 = void 0;\r\n            if (series.alignLabels) {\r\n                x1 = label.pixelX - this.length;\r\n                y1 = label.pixelY;\r\n                x2 = label.pixelX;\r\n                y2 = y1;\r\n                if (label.horizontalCenter == \"right\") {\r\n                    x1 += 2 * this.length;\r\n                    x2 = x1 - this.length;\r\n                }\r\n            }\r\n            else {\r\n                var r = label.pixelRadius(slice.radius);\r\n                x1 = x0 + r * slice.ix;\r\n                y1 = y0 + r * slice.iy;\r\n                x2 = x1;\r\n                y2 = y1;\r\n            }\r\n            this.element.attr({ \"points\": [x0, y0, x1, y1, x2, y2] });\r\n        }\r\n    };\r\n    Object.defineProperty(PieTick.prototype, \"slice\", {\r\n        /**\r\n         * @return Slice\r\n         */\r\n        get: function () {\r\n            return this._slice.get();\r\n        },\r\n        /**\r\n         * Slice element tick is attached to.\r\n         *\r\n         * @param slice  Slice\r\n         */\r\n        set: function (slice) {\r\n            this._slice.set(slice, new MultiDisposer([\r\n                slice.events.on(\"transformed\", this.invalidate, this),\r\n                slice.events.on(\"validated\", this.invalidate, this)\r\n            ]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieTick.prototype, \"label\", {\r\n        /**\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            return this._label.get();\r\n        },\r\n        /**\r\n         * Label element tick is attached to.\r\n         *\r\n         * @param label  Label\r\n         */\r\n        set: function (label) {\r\n            this._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieTick;\r\n}(Tick));\r\nexport { PieTick };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieTick\"] = PieTick;\r\n//# sourceMappingURL=PieTick.js.map","/**\r\n * Defines Pie Chart Series.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\n//import { Slice3D } from \"../../core/elements/3D/Slice3D\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { PieTick } from \"../elements/PieTick\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeriesDataItem\";\r\n        _this.values.radiusValue = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieSeriesDataItem.prototype, \"radiusValue\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.values.radiusValue.value;\r\n        },\r\n        /**\r\n         * Slice's radius, if other than default.\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"radiusValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hide the data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param toValue   Target value for animation\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PieSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        return _super.prototype.hide.call(this, duration, delay, 0, [\"value\", \"radiusValue\"]);\r\n    };\r\n    /**\r\n     * Show hidden data item (and corresponding cisual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PieSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        return _super.prototype.show.call(this, duration, delay, [\"value\", \"radiusValue\"]);\r\n    };\r\n    return PieSeriesDataItem;\r\n}(PercentSeriesDataItem));\r\nexport { PieSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a slice series on a Pie chart.\r\n *\r\n * @see {@link IPieSeriesEvents} for a list of available Events\r\n * @see {@link IPieSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar PieSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeries\";\r\n        _this.alignLabels = true;\r\n        //this.startAngle = -90;\r\n        //this.endAngle = 270;\r\n        _this.layout = \"none\";\r\n        _this.labels.template.radius = percent(5);\r\n        _this.addDisposer(_this.labels.template.events.on(\"enabled\", _this.invalidate, _this, false));\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * creates slice\r\n     */\r\n    PieSeries.prototype.createSlice = function () {\r\n        return new Slice();\r\n    };\r\n    /**\r\n     * creates tick\r\n     */\r\n    PieSeries.prototype.createTick = function () {\r\n        return new PieTick();\r\n    };\r\n    /**\r\n     * creates label\r\n     */\r\n    PieSeries.prototype.createLabel = function () {\r\n        return new AxisLabelCircular();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PieSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pie Slice Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PieSeries.prototype.createDataItem = function () {\r\n        return new PieSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits slice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    PieSeries.prototype.initSlice = function (slice) {\r\n        slice.isMeasured = false;\r\n        slice.defaultState.properties.scale = 1;\r\n        slice.observe(\"scale\", this.handleSliceScale, this);\r\n        slice.observe([\"dx\", \"dy\", \"x\", \"y\", \"shiftRadius\"], this.handleSliceMove, this);\r\n        slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n        var hoverState = slice.states.create(\"hover\");\r\n        hoverState.properties.scale = 1.05;\r\n        var defaultState = slice.defaultState;\r\n        defaultState.properties.shiftRadius = 0;\r\n        slice.togglable = true;\r\n        slice.events.on(\"toggled\", function (event) {\r\n            event.target.hideTooltip();\r\n        });\r\n        var activeState = slice.states.create(\"active\");\r\n        activeState.properties.shiftRadius = 0.10;\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieSeries.prototype.validate = function () {\r\n        this._leftItems = [];\r\n        this._rightItems = [];\r\n        this._currentStartAngle = this.startAngle;\r\n        this._arcRect = $math.getArcRect(this.startAngle, this.endAngle);\r\n        this._maxRadiusPercent = 0;\r\n        for (var i = this.startIndex; i < this.endIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var radiusValuePercent = dataItem.values.radiusValue.percent;\r\n            if (radiusValuePercent > this._maxRadiusPercent) {\r\n                this._maxRadiusPercent = radiusValuePercent;\r\n            }\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        if (this.alignLabels) {\r\n            if (this.startAngle > this.endAngle) {\r\n                this._rightItems.reverse();\r\n            }\r\n            else {\r\n                this._leftItems.reverse();\r\n            }\r\n            this._rightItems.sort(function (a, b) {\r\n                var aAngle = (a.slice.middleAngle + 360) % 360;\r\n                var bAngle = (b.slice.middleAngle + 360) % 360;\r\n                if (aAngle > 270) {\r\n                    aAngle -= 360;\r\n                }\r\n                if (bAngle > 270) {\r\n                    bAngle -= 360;\r\n                }\r\n                if (aAngle < bAngle) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            });\r\n            this._leftItems.sort(function (a, b) {\r\n                var aAngle = (a.slice.middleAngle + 360) % 360;\r\n                var bAngle = (b.slice.middleAngle + 360) % 360;\r\n                if (aAngle < bAngle) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            });\r\n            this.arrangeLabels(this._rightItems);\r\n            this.arrangeLabels2(this._rightItems);\r\n            this.arrangeLabels(this._leftItems);\r\n            this.arrangeLabels2(this._leftItems);\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PieSeries.prototype.validateDataElement = function (dataItem) {\r\n        if (this.pixelRadius > 0) {\r\n            if (this.ignoreZeroValues && dataItem.value == 0) {\r\n                dataItem.__disabled = true;\r\n            }\r\n            else {\r\n                dataItem.__disabled = false;\r\n            }\r\n            // SLICE\r\n            var slice = dataItem.slice;\r\n            slice.radius = this.pixelRadius;\r\n            if ($type.isNumber(dataItem.radiusValue)) {\r\n                slice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;\r\n            }\r\n            if (!(slice.innerRadius instanceof Percent)) {\r\n                slice.innerRadius = this.pixelInnerRadius;\r\n            }\r\n            slice.startAngle = this._currentStartAngle;\r\n            slice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100;\r\n            // LABEL\r\n            if (!this.labels.template.disabled) {\r\n                var label = dataItem.label;\r\n                var tick = dataItem.tick;\r\n                tick.slice = slice;\r\n                tick.label = label;\r\n                var normalizedMiddleAngle = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;\r\n                var point = void 0;\r\n                if (this.alignLabels) {\r\n                    var labelRadius = label.pixelRadius(slice.radius);\r\n                    var x = tick.length + labelRadius;\r\n                    label.dx = 0;\r\n                    label.dy = 0;\r\n                    label.verticalCenter = \"middle\";\r\n                    var arcRect = this._arcRect;\r\n                    // right half\r\n                    if (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {\r\n                        x += (arcRect.width + arcRect.x) * this.pixelRadius;\r\n                        label.horizontalCenter = \"left\";\r\n                        this._rightItems.push(dataItem);\r\n                    }\r\n                    // left half\r\n                    else {\r\n                        x -= arcRect.x * this.pixelRadius;\r\n                        label.horizontalCenter = \"right\";\r\n                        this._leftItems.push(dataItem);\r\n                        x *= -1;\r\n                    }\r\n                    var distance = slice.radius + tick.length + labelRadius;\r\n                    point = { x: x, y: slice.iy * distance };\r\n                    label.moveTo(point);\r\n                }\r\n                else {\r\n                    var depth = slice[\"depth\"];\r\n                    if (!$type.isNumber(depth)) {\r\n                        depth = 0;\r\n                    }\r\n                    label.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);\r\n                }\r\n            }\r\n            this._currentStartAngle += slice.arc;\r\n            // do this at the end, otherwise bullets won't be positioned properly\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius for the series' slices in pixels or [[Percent]].\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"pixelRadius\", {\r\n        /**\r\n         * @return Radius\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._pixelRadius;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._pixelRadius != value) {\r\n                this._pixelRadius = value;\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * @return Pixel inner radius\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._pixelInnerRadius;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._pixelInnerRadius != value) {\r\n                this._pixelInnerRadius = value;\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"innerRadius\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius for the series' slices in pixels.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Redo so that users can set it\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            var startAngle = this.getPropertyValue(\"startAngle\");\r\n            if ($type.isNumber(startAngle)) {\r\n                return startAngle;\r\n            }\r\n            else {\r\n                return this._startAngleInternal;\r\n            }\r\n        },\r\n        /**\r\n         * Start angle for the series' slices in degrees. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"endAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            var endAngle = this.getPropertyValue(\"endAngle\");\r\n            if ($type.isNumber(endAngle)) {\r\n                return endAngle;\r\n            }\r\n            else {\r\n                return this._endAngleInternal;\r\n            }\r\n        },\r\n        /**\r\n         * End angle for the series' slices in degrees. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    PieSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        var locationX = bullet.locationX;\r\n        if (!$type.isNumber(locationX)) {\r\n            locationX = 0.5;\r\n        }\r\n        var locationY = bullet.locationY;\r\n        if (!$type.isNumber(locationY)) {\r\n            locationY = 1;\r\n        }\r\n        var angle = slice.startAngle + slice.arc * locationX;\r\n        bullet.x = locationY * slice.radius * $math.cos(angle);\r\n        bullet.y = locationY * slice.radiusY * $math.sin(angle);\r\n    };\r\n    /**\r\n     * Repositions bullet and labels when slice moves.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PieSeries.prototype.handleSliceMove = function (event) {\r\n        if (!this.alignLabels) {\r\n            var slice = event.target;\r\n            var dataItem = slice.dataItem;\r\n            // moving textelement, as label dx and dy are already employed for aligning\r\n            //@labeltodo\r\n            if (dataItem) {\r\n                var label = dataItem.label;\r\n                if (label) {\r\n                    label.dx = label.fdx + slice.dx + slice.pixelX;\r\n                    label.dy = label.fdy + slice.dy + slice.pixelY;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                return $math.getArcRect(chart.startAngle, chart.endAngle, this.pixelRadius);\r\n            }\r\n            return $math.getArcRect(this.startAngle, this.endAngle, this.pixelRadius);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieSeries;\r\n}(PercentSeries));\r\nexport { PieSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieSeries\"] = PieSeries;\r\nregistry.registeredClasses[\"PieSeriesDataItem\"] = PieSeriesDataItem;\r\n//# sourceMappingURL=PieSeries.js.map","/**\r\n * Pie chart module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, PercentChartDataItem } from \"./PercentChart\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { PieSeries } from \"../series/PieSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieChartDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PieChartDataItem;\r\n}(PercentChartDataItem));\r\nexport { PieChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Pie chart.\r\n *\r\n * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"PieSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChartEvents} for a list of available Events\r\n * @see {@link IPieChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nvar PieChart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PieChart\";\r\n        // Set defaults\r\n        _this.innerRadius = 0;\r\n        _this.radius = percent(80);\r\n        _this.align = \"none\";\r\n        _this.valign = \"none\";\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        var seriesContainer = _this.seriesContainer;\r\n        seriesContainer.isMeasured = true;\r\n        seriesContainer.valign = \"middle\";\r\n        seriesContainer.align = \"center\";\r\n        seriesContainer.layout = \"absolute\";\r\n        seriesContainer.width = undefined;\r\n        seriesContainer.height = undefined;\r\n        // so that the pie is always drawn, even the legend wants all the space\r\n        _this.chartContainer.minHeight = 50;\r\n        _this.chartContainer.minWidth = 50;\r\n        _this.chartContainer.events.on(\"maxsizechanged\", _this.updateRadius, _this, false); // need this for the chart to change radius if legend is removed/disabled\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PieChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pie chart\");\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the chart, causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieChart.prototype.validateLayout = function () {\r\n        _super.prototype.validateLayout.call(this);\r\n        this.updateRadius();\r\n    };\r\n    /**\r\n     * Decorates a new [[Series]] object with required parameters when it is\r\n     * added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PieChart.prototype.handleSeriesAdded = function (event) {\r\n        _super.prototype.handleSeriesAdded.call(this, event);\r\n        this._chartPixelRadius = undefined;\r\n        this.updateSeriesAngles();\r\n    };\r\n    PieChart.prototype.updateSeriesAngles = function () {\r\n        var _this = this;\r\n        this.series.each(function (series) {\r\n            series._startAngleInternal = _this.startAngle;\r\n            series._endAngleInternal = _this.endAngle;\r\n            //series.defaultState.properties.startAngle = this.startAngle;\r\n            //series.defaultState.properties.endAngle = this.endAngle;\r\n        });\r\n    };\r\n    /**\r\n     * Recalculates pie's radius, based on a number of criteria.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieChart.prototype.updateRadius = function () {\r\n        var chartCont = this.chartContainer;\r\n        var rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n        var innerRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        var innerRadius = this.innerRadius;\r\n        if (innerRadius instanceof Percent) {\r\n            innerRect = $math.getArcRect(this.startAngle, this.endAngle, innerRadius.value);\r\n        }\r\n        // @todo handle this when innerRadius set in pixels (do it for radar also)\r\n        rect = $math.getCommonRectangle([rect, innerRect]);\r\n        var maxRadius = Math.min(chartCont.innerWidth / rect.width, chartCont.innerHeight / rect.height);\r\n        if (!$type.isNumber(maxRadius)) {\r\n            maxRadius = 0;\r\n        }\r\n        var chartRadius = $utils.relativeRadiusToValue(this.radius, maxRadius);\r\n        var chartPixelInnerRadius = $utils.relativeRadiusToValue(this.innerRadius, maxRadius);\r\n        var seriesRadius = (chartRadius - chartPixelInnerRadius) / this.series.length;\r\n        if (chartRadius != this._chartPixelRadius || chartPixelInnerRadius != this._chartPixelInnerRadius) {\r\n            this._chartPixelRadius = chartRadius;\r\n            this._chartPixelInnerRadius = chartPixelInnerRadius;\r\n            //@todo: make it possible to set series radius in percent\r\n            $iter.each($iter.indexed(this.series.iterator()), function (a) {\r\n                var i = a[0];\r\n                var series = a[1];\r\n                var radius = chartPixelInnerRadius + $utils.relativeRadiusToValue(series.radius, chartRadius - chartPixelInnerRadius);\r\n                var innerRadius = chartPixelInnerRadius + $utils.relativeRadiusToValue(series.innerRadius, chartRadius - chartPixelInnerRadius);\r\n                if (!$type.isNumber(radius)) {\r\n                    radius = chartPixelInnerRadius + seriesRadius * (i + 1);\r\n                }\r\n                if (!$type.isNumber(innerRadius)) {\r\n                    innerRadius = chartPixelInnerRadius + seriesRadius * i;\r\n                }\r\n                series.pixelRadius = radius;\r\n                series.pixelInnerRadius = innerRadius;\r\n            });\r\n            this.seriesContainer.definedBBox = { x: chartRadius * rect.x, y: chartRadius * rect.y, width: chartRadius * rect.width, height: chartRadius * rect.height };\r\n            this.seriesContainer.invalidateLayout();\r\n            this.bulletsContainer.x = this.seriesContainer.x;\r\n            this.bulletsContainer.y = this.seriesContainer.y;\r\n        }\r\n    };\r\n    Object.defineProperty(PieChart.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius (px or relative)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Sets radius of the pie chart.\r\n         *\r\n         * Setting to a number will mean a fixed pixel radius.\r\n         *\r\n         * Setting to an instance of [[Percent]] will mean a relative radius to\r\n         * available space.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * // Set pie chart to be at 50% of the available space\r\n         * pieChart.radius = am4core.percent.percent(50);\r\n         * ```\r\n         * ```JavaScript\r\n         * // Set pie chart to be at 50% of the available space\r\n         * pieChart.radius = am4core.percent.percent(50);\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // Set pie chart to be at 50% of the available space\r\n         *   \"radius\": \"50%\"\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 80%\r\n         * @param value  Radius (px or relative)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\r\n                this.invalidateLayout();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieChart.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Relative inner radius (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Sets relative inner radius (to create a donut chart).\r\n         *\r\n         * Setting to a number will mean a fixed pixel radius.\r\n         *\r\n         * Setting to an instance of [[Percent]] will mean a relative radius to\r\n         * available space.\r\n         *\r\n         * NOTE: it's not related to `radius`.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * // Set pie chart to be at 50% of the available space\r\n         * pieChart.innerRadius = am4core.percent.percent(50);\r\n         * ```\r\n         * ```JavaScript\r\n         * // Set pie chart to be at 50% of the available space\r\n         * pieChart.innerRadius = am4core.percent.percent(50);\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // Set pie chart to be at 50% of the available space\r\n         *   \"innerRadius\": \"50%\"\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 0\r\n         * @param value  Relative inner radius (0-1)\r\n         * @todo Setting things like `innerRadius` modifies `slice.radius` and it then looks like it is not the same value as in default state\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new [[PieSeries]].\r\n     *\r\n     * @return New series\r\n     */\r\n    PieChart.prototype.createSeries = function () {\r\n        return new PieSeries();\r\n    };\r\n    Object.defineProperty(PieChart.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Pie circle. (degrees)\r\n         *\r\n         * Normally, a pie chart begins (the left side of the first slice is drawn)\r\n         * at the top center. (at -90 degrees)\r\n         *\r\n         * You can use `startAngle` to change this setting.\r\n         *\r\n         * E.g. setting this to 0 will make the first slice be drawn to the right.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set to those lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * NOTE: This setting is not supported in a 3D pie chart.\r\n         *\r\n         * @default -90\r\n         * @param value  Start angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startAngle\", value)) {\r\n                this.updateRadius();\r\n                this.updateSeriesAngles();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieChart.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * End angle of the Pie circle. (degrees)\r\n         *\r\n         * Normally, a pie chart ends (the right side of the last slice is drawn)\r\n         * at the top center. (at 270 degrees)\r\n         *\r\n         * You can use `endAngle` to change this setting.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set to those lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * NOTE: This setting is not supported in a 3D pie chart.\r\n         *\r\n         * @default 270\r\n         * @param value  End angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endAngle\", value)) {\r\n                this.updateRadius();\r\n                this.updateSeriesAngles();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieChart;\r\n}(PercentChart));\r\nexport { PieChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieChart\"] = PieChart;\r\nregistry.registeredClasses[\"PieChartDataItem\"] = PieChartDataItem;\r\n//# sourceMappingURL=PieChart.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PieSeries, PieSeriesDataItem } from \"../series/PieSeries\";\r\nimport { Slice3D } from \"../../core/elements/3d/Slice3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieSeries3DDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieSeries3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeries3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeries3DDataItem\";\r\n        _this.values.depthValue = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieSeries3DDataItem.prototype, \"depthValue\", {\r\n        /**\r\n         * @return Depth\r\n         */\r\n        get: function () {\r\n            return this.values[\"depthValue\"].value;\r\n        },\r\n        /**\r\n         * Slice depth (height).\r\n         *\r\n         * @param value  Depth\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"depthValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieSeries3DDataItem;\r\n}(PieSeriesDataItem));\r\nexport { PieSeries3DDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a slice series on a 3D pie chart.\r\n *\r\n * @see {@link IPieSeries3DEvents} for a list of available Events\r\n * @see {@link IPieSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar PieSeries3D = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieSeries3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeries3D() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeries3D\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PieSeries3D.prototype.createDataItem = function () {\r\n        return new PieSeries3DDataItem();\r\n    };\r\n    /**\r\n     * creates slice\r\n     */\r\n    PieSeries3D.prototype.createSlice = function () {\r\n        return new Slice3D();\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PieSeries3D.prototype.validateDataElement = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        var depth = this.depth;\r\n        if (!$type.isNumber(depth)) {\r\n            depth = this.chart.depth;\r\n        }\r\n        var depthPercent = dataItem.values.depthValue.percent;\r\n        if (!$type.isNumber(depthPercent)) {\r\n            depthPercent = 100;\r\n        }\r\n        slice.depth = depthPercent * depth / 100;\r\n        var angle = this.angle;\r\n        if (!$type.isNumber(angle)) {\r\n            angle = this.chart.angle;\r\n        }\r\n        slice.angle = angle;\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieSeries3D.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        for (var i = this._workingStartIndex; i < this._workingEndIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var slice = dataItem.slice;\r\n            var startAngle = slice.startAngle;\r\n            // find quarter\r\n            //q0 || q1\r\n            if ((startAngle >= -90 && startAngle < 90)) {\r\n                slice.toFront();\r\n            }\r\n            //q2 || q3\r\n            else if ((startAngle >= 90)) {\r\n                slice.toBack();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries3D.prototype, \"depth\", {\r\n        /**\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth (height) of the pie slice in pixels.\r\n         *\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"depth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries3D.prototype, \"angle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * Angle of the view point of the 3D pie. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"angle\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    PieSeries3D.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        bullet.y = bullet.pixelY - slice.depth;\r\n    };\r\n    return PieSeries3D;\r\n}(PieSeries));\r\nexport { PieSeries3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieSeries3D\"] = PieSeries3D;\r\nregistry.registeredClasses[\"PieSeries3DDataItem\"] = PieSeries3DDataItem;\r\n//# sourceMappingURL=PieSeries3D.js.map","/**\r\n * 3D Pie chart module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PieChart, PieChartDataItem } from \"./PieChart\";\r\nimport { PieSeries3D } from \"../series/PieSeries3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieChart3DDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieChart3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieChart3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PieChart3DDataItem;\r\n}(PieChartDataItem));\r\nexport { PieChart3DDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nvar PieChart3D = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PieChart3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart3D() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PieChart3D\";\r\n        _this.depth = 20;\r\n        _this.angle = 10;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieChart3D.prototype, \"depth\", {\r\n        /**\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth of the 3D pie in pixels.\r\n         *\r\n         * This will determine \"height\" of the pie.\r\n         *\r\n         * @default 20\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"depth\", value)) {\r\n                this.invalidateDataUsers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieChart3D.prototype, \"angle\", {\r\n        /**\r\n         * @return Angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n         *\r\n         * @default 10\r\n         * @param value  Angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            value = $math.fitToRange(value, 0, 90);\r\n            if (this.setPropertyValue(\"angle\", value)) {\r\n                this.invalidateDataUsers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a new Series.\r\n     *\r\n     * @return New series\r\n     */\r\n    PieChart3D.prototype.createSeries = function () {\r\n        return new PieSeries3D();\r\n    };\r\n    return PieChart3D;\r\n}(PieChart));\r\nexport { PieChart3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieChart3D\"] = PieChart3D;\r\n//# sourceMappingURL=PieChart3D.js.map","/**\r\n * Sliced chart module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, PercentChartDataItem } from \"./PercentChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[SlicedChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SlicedChartDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SlicedChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SlicedChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SlicedChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SlicedChartDataItem;\r\n}(PercentChartDataItem));\r\nexport { SlicedChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Sliced chart.\r\n *\r\n * @see {@link ISlicedChartEvents} for a list of available Events\r\n * @see {@link ISlicedChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar SlicedChart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SlicedChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SlicedChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"SlicedChart\";\r\n        _this.seriesContainer.layout = \"horizontal\";\r\n        _this.padding(15, 15, 15, 15);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    SlicedChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Sliced chart\");\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the chart, causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SlicedChart.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    return SlicedChart;\r\n}(PercentChart));\r\nexport { SlicedChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SlicedChart\"] = SlicedChart;\r\nregistry.registeredClasses[\"SlicedChartDataItem\"] = SlicedChartDataItem;\r\n//# sourceMappingURL=SlicedChart.js.map","/**\r\n * FlowDiagramNode module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $string from \"../../core/utils/String\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { LegendSettings } from \"../Legend\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a node in a Flow Diagram.\r\n *\r\n * A Flow node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[FlowLink]] elements.\r\n *\r\n * @see {@link IFlowDiagramNodeEvents} for a list of available events\r\n * @see {@link IFlowDiagramNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar FlowDiagramNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FlowDiagramNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FlowDiagramNode() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Settings for the appearance of the related legend items.\r\n         */\r\n        _this.legendSettings = new LegendSettings();\r\n        _this.className = \"FlowDiagramNode\";\r\n        _this.isMeasured = false;\r\n        // TODO can this be removed ?\r\n        new InterfaceColorSet();\r\n        _this.draggable = true;\r\n        _this.inert = true;\r\n        _this.setStateOnChildren = true;\r\n        _this.events.on(\"positionchanged\", _this.invalidateLinks, _this, false);\r\n        _this.events.on(\"sizechanged\", _this.invalidateLinks, _this, false);\r\n        return _this;\r\n        //this.events.on(\"hit\", this.handleHit, this, false);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    FlowDiagramNode.prototype.handleHit = function (event) {\r\n        if (this.isHidden || this.isHiding) {\r\n            this.show();\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    };\r\n    /**\r\n     * Shows hidden node.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    FlowDiagramNode.prototype.show = function (duration) {\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        this.outgoingDataItems.each(function (dataItem) {\r\n            if (!dataItem.toNode || (dataItem.toNode && !dataItem.toNode.isHidden)) {\r\n                dataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n            }\r\n        });\r\n        this.incomingDataItems.each(function (dataItem) {\r\n            if (!dataItem.fromNode || (dataItem.fromNode && !dataItem.fromNode.isHidden)) {\r\n                dataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n            }\r\n        });\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides node.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    FlowDiagramNode.prototype.hide = function (duration) {\r\n        var animation = _super.prototype.hide.call(this, duration);\r\n        this.outgoingDataItems.each(function (dataItem) {\r\n            dataItem.setWorkingValue(\"value\", 0, duration);\r\n        });\r\n        this.incomingDataItems.each(function (dataItem) {\r\n            dataItem.setWorkingValue(\"value\", 0, duration);\r\n        });\r\n        return animation;\r\n    };\r\n    /**\r\n     * Marks node as invalid, for redrawal in the next update cycle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagramNode.prototype.validate = function () {\r\n        if (!this.isDisposed()) {\r\n            _super.prototype.validate.call(this);\r\n            this.invalidateLinks();\r\n        }\r\n    };\r\n    /**\r\n     * Invalidates all links, attached to this node.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagramNode.prototype.invalidateLinks = function () {\r\n        var _this = this;\r\n        this.outgoingDataItems.each(function (dataItem) {\r\n            var link = dataItem.link;\r\n            if (link.colorMode == \"fromNode\") {\r\n                link.fill = link.dataItem.fromNode.color;\r\n            }\r\n            if (link.colorMode == \"gradient\") {\r\n                link.fill = link.gradient;\r\n                link.stroke = link.gradient;\r\n                var stop_1 = link.gradient.stops.getIndex(0);\r\n                if (stop_1) {\r\n                    stop_1.color = _this.color;\r\n                    link.gradient.validate();\r\n                }\r\n            }\r\n        });\r\n        this.incomingDataItems.each(function (dataItem) {\r\n            var link = dataItem.link;\r\n            if (link.colorMode == \"toNode\") {\r\n                link.fill = link.dataItem.toNode.color;\r\n            }\r\n            if (link.colorMode == \"gradient\") {\r\n                link.fill = link.gradient;\r\n                link.stroke = link.gradient;\r\n                var stop_2 = link.gradient.stops.getIndex(1);\r\n                if (stop_2) {\r\n                    stop_2.color = _this.color;\r\n                    link.gradient.validate();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"incomingDataItems\", {\r\n        /**\r\n         * List of incoming items (links).\r\n         *\r\n         * @readonly\r\n         * @return Incoming items\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._incomingDataItems) {\r\n                var incomingDataItems = new List();\r\n                incomingDataItems.events.on(\"inserted\", function () {\r\n                    if (_this.chart.sortBy == \"name\") {\r\n                        _this._incomingSorted = $iter.sort(_this._incomingDataItems.iterator(), function (x, y) { return $string.order(x.fromName, y.fromName); });\r\n                    }\r\n                    else if (_this.chart.sortBy == \"value\") {\r\n                        _this._incomingSorted = $iter.sort(_this._incomingDataItems.iterator(), function (x, y) { return $order.reverse($number.order(x.value, y.value)); });\r\n                    }\r\n                    else {\r\n                        _this._incomingSorted = _this._incomingDataItems.iterator();\r\n                    }\r\n                }, undefined, false);\r\n                this._incomingDataItems = incomingDataItems;\r\n            }\r\n            return this._incomingDataItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"outgoingDataItems\", {\r\n        /**\r\n         * List of outgoing items (links).\r\n         *\r\n         * @readonly\r\n         * @return Outgoing items\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._outgoingDataItems) {\r\n                var outgoingDataItems = new List();\r\n                outgoingDataItems.events.on(\"inserted\", function () {\r\n                    if (_this.chart.sortBy == \"name\") {\r\n                        _this._outgoingSorted = $iter.sort(_this._outgoingDataItems.iterator(), function (x, y) { return $string.order(x.fromName, y.fromName); });\r\n                    }\r\n                    else if (_this.chart.sortBy == \"value\") {\r\n                        _this._outgoingSorted = $iter.sort(_this._outgoingDataItems.iterator(), function (x, y) { return $order.reverse($number.order(x.value, y.value)); });\r\n                    }\r\n                    else {\r\n                        _this._outgoingSorted = _this._outgoingDataItems.iterator();\r\n                    }\r\n                }, undefined, false);\r\n                this._outgoingDataItems = outgoingDataItems;\r\n            }\r\n            return this._outgoingDataItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"name\");\r\n        },\r\n        /**\r\n         * A name of the node.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"name\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"total\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"total\");\r\n        },\r\n        /**\r\n         * Sum of all incoming+outgoing link values\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"total\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"totalIncoming\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"totalIncoming\");\r\n        },\r\n        /**\r\n         * Sum of all incomming link values.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"totalIncoming\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"totalOutgoing\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"totalOutgoing\");\r\n        },\r\n        /**\r\n         * Sum of all outgoing link values.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"totalOutgoing\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"color\");\r\n        },\r\n        /**\r\n         * Node's color.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.setColorProperty(\"color\", value);\r\n            if (this._background) {\r\n                this._background.fill = value;\r\n            }\r\n            this.fill = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    FlowDiagramNode.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(RoundedRectangle);\r\n        column.shouldClone = false;\r\n        $object.copyProperties(this, column, visualProperties);\r\n        column.stroke = this.fill;\r\n        column.copyFrom(this);\r\n        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n        column.width = w;\r\n        column.height = h;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = column.fill;\r\n        legendDataItem.colorOrig = column.fill;\r\n    };\r\n    Object.defineProperty(FlowDiagramNode.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * Legend data item that corresponds to this series.\r\n         *\r\n         * @param value  Data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            this._legendDataItem.itemContainer.deepInvalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FlowDiagramNode;\r\n}(Container));\r\nexport { FlowDiagramNode };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagramNode\"] = FlowDiagramNode;\r\n//# sourceMappingURL=FlowDiagramNode.js.map","/**\r\n * FlowDiagramLink module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Flow Diagram.\r\n *\r\n * @see {@link IFlowDiagramLinkEvents} for a list of available events\r\n * @see {@link IFlowDiagramLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar FlowDiagramLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FlowDiagramLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FlowDiagramLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FlowDiagramLink\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.maskBullets = false;\r\n        _this.colorMode = \"fromNode\";\r\n        _this.layout = \"none\";\r\n        _this.isMeasured = false;\r\n        _this.startAngle = 0;\r\n        _this.endAngle = 0;\r\n        _this.strokeOpacity = 0;\r\n        // this is very important, otherwise the container will be shifted\r\n        _this.verticalCenter = \"none\";\r\n        _this.horizontalCenter = \"none\";\r\n        _this.tooltipText = \"{fromName}→{toName}:{value.value}\";\r\n        _this.tooltipLocation = 0.5;\r\n        _this.link = _this.createChild(Sprite);\r\n        _this.link.shouldClone = false;\r\n        _this.link.setElement(_this.paper.add(\"path\"));\r\n        _this.link.isMeasured = false;\r\n        _this.fillOpacity = 0.2;\r\n        _this.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Positions bullets\r\n     * @ignore\r\n     */\r\n    FlowDiagramLink.prototype.positionBullets = function () {\r\n        var _this = this;\r\n        $iter.each(this.bullets.iterator(), function (bullet) {\r\n            bullet.parent = _this.bulletsContainer;\r\n            bullet.maxWidth = _this.maxWidth;\r\n            bullet.maxHeight = _this.maxHeight;\r\n            _this.positionBullet(bullet);\r\n        });\r\n    };\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"bulletsContainer\", {\r\n        /**\r\n         * Bullets container\r\n         */\r\n        get: function () {\r\n            if (!this._bulletsContainer) {\r\n                var bulletsContainer = this.createChild(Container);\r\n                bulletsContainer.shouldClone = false;\r\n                bulletsContainer.layout = \"none\";\r\n                this._bulletsContainer = bulletsContainer;\r\n            }\r\n            return this._bulletsContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"bulletsMask\", {\r\n        /**\r\n         * Bullets mask sprite\r\n         */\r\n        get: function () {\r\n            if (!this._bulletsMask) {\r\n                var bulletsMask = this.createChild(Sprite);\r\n                bulletsMask.shouldClone = false;\r\n                bulletsMask.setElement(this.paper.add(\"path\"));\r\n                bulletsMask.isMeasured = false;\r\n                this._bulletsMask = bulletsMask;\r\n            }\r\n            return this._bulletsMask;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions bullets at relative bullet.locationX position on the link.\r\n     * @ignore\r\n     */\r\n    FlowDiagramLink.prototype.positionBullet = function (bullet) {\r\n        var location = bullet.locationX;\r\n        if (!$type.isNumber(location)) {\r\n            location = bullet.locationY;\r\n        }\r\n        if (!$type.isNumber(location)) {\r\n            location = 0.5;\r\n        }\r\n        var point = this.middleLine.positionToPoint(location);\r\n        bullet.moveTo(point);\r\n        var rotationField = bullet.propertyFields.rotation;\r\n        var angle;\r\n        if (bullet.dataItem) {\r\n            var dataContext = bullet.dataItem.dataContext;\r\n            angle = dataContext[rotationField];\r\n        }\r\n        if (!$type.isNumber(angle)) {\r\n            angle = point.angle;\r\n        }\r\n        bullet.rotation = angle;\r\n    };\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * [startAngle description]\r\n         *\r\n         * @todo Description\r\n         * @param value  Start angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * [endAngle description]\r\n         *\r\n         * @todo Description\r\n         * @param value  End angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"colorMode\", {\r\n        /**\r\n         * Fill mode\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colorMode\");\r\n        },\r\n        /**\r\n         * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.\r\n         * Some of the links, like ChordLink does not support gradiens well.\r\n         *\r\n         * @param value  Fill mode\r\n         */\r\n        set: function (value) {\r\n            if (value == \"gradient\") {\r\n                var color = this.fill;\r\n                this.gradient.stops.clear();\r\n                if (color instanceof Color) {\r\n                    this.gradient.addColor(color);\r\n                    this.gradient.addColor(color);\r\n                }\r\n                this.fill = this.gradient;\r\n                this.stroke = this.gradient;\r\n            }\r\n            this.setPropertyValue(\"colorMode\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"maskBullets\", {\r\n        /**\r\n         * @return mask bullets value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maskBullets\");\r\n        },\r\n        /**\r\n         * Should link bullets be masked or not\r\n         *\r\n         * @param value\r\n         * @default false\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maskBullets\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"tooltipLocation\", {\r\n        /**\r\n         * Tooltip location value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipLocation\");\r\n        },\r\n        /**\r\n         * Relative location of a tooltip.\r\n         * @default 0.5\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds color steps in the link gradient.\r\n     *\r\n     * @param value  Fill option\r\n     */\r\n    FlowDiagramLink.prototype.setFill = function (value) {\r\n        _super.prototype.setFill.call(this, value);\r\n        var gradient = this._gradient;\r\n        if (gradient && value instanceof Color) {\r\n            gradient.stops.clear();\r\n            gradient.addColor(value);\r\n            gradient.addColor(value);\r\n        }\r\n    };\r\n    /**\r\n     * Updates bounding box based on element dimension settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagramLink.prototype.measureElement = function () {\r\n    };\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"bullets\", {\r\n        /**\r\n         * List of bullets\r\n         *\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._bullets) {\r\n                this._bullets = new ListTemplate(new Bullet());\r\n                this._disposers.push(new ListDisposer(this._bullets));\r\n                this._disposers.push(this._bullets.template);\r\n                this._bullets.events.on(\"inserted\", function (event) {\r\n                    event.newValue.events.on(\"propertychanged\", function (event) {\r\n                        if (event.property == \"locationX\" || event.property == \"locationY\") {\r\n                            _this.positionBullet(event.target);\r\n                        }\r\n                    }, undefined, false);\r\n                }, undefined, false);\r\n            }\r\n            return this._bullets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties from another [[FlowDiagramLink]].\r\n     *\r\n     * @param source  Source link\r\n     */\r\n    FlowDiagramLink.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.bullets.copyFrom(source.bullets);\r\n        var middleLine = this.middleLine;\r\n        if (middleLine) {\r\n            if (middleLine instanceof Line && source.middleLine instanceof Line) {\r\n                middleLine.copyFrom(source.middleLine);\r\n            }\r\n            if (middleLine instanceof Polyline && source.middleLine instanceof Polyline) {\r\n                middleLine.copyFrom(source.middleLine);\r\n            }\r\n        }\r\n        this.link.copyFrom(source.link);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Tooltip X (px)\r\n     */\r\n    FlowDiagramLink.prototype.getTooltipX = function () {\r\n        if (this.middleLine) {\r\n            return this.middleLine.positionToPoint(this.tooltipLocation).x;\r\n        }\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Tooltip Y (px)\r\n     */\r\n    FlowDiagramLink.prototype.getTooltipY = function () {\r\n        if (this.middleLine) {\r\n            return this.middleLine.positionToPoint(this.tooltipLocation).y;\r\n        }\r\n    };\r\n    Object.defineProperty(FlowDiagramLink.prototype, \"gradient\", {\r\n        /**\r\n         * A gradiend instance that is used to provided colored gradient fills for\r\n         * the Flow link.\r\n         */\r\n        get: function () {\r\n            if (!this._gradient) {\r\n                this._gradient = new LinearGradient();\r\n            }\r\n            return this._gradient;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FlowDiagramLink;\r\n}(Container));\r\nexport { FlowDiagramLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagramLink\"] = FlowDiagramLink;\r\n//# sourceMappingURL=FlowDiagramLink.js.map","/**\r\n * FlowDiagram module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, ChartDataItem } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { FlowDiagramNode } from \"../elements/FlowDiagramNode\";\r\nimport { FlowDiagramLink } from \"../elements/FlowDiagramLink\";\r\nimport { LinearGradientModifier } from \"../../core/rendering/fills/LinearGradientModifier\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo rearange notes after dragged\r\n/**\r\n * Defines a [[DataItem]] for [[FlowDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar FlowDiagramDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FlowDiagramDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FlowDiagramDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FlowDiagramDataItem\";\r\n        _this.values.value = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"fromName\", {\r\n        /**\r\n         * @return name\r\n         */\r\n        get: function () {\r\n            return this.properties.fromName;\r\n        },\r\n        /**\r\n         * Source node's name.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"fromName\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"toName\", {\r\n        /**\r\n         * @return name\r\n         */\r\n        get: function () {\r\n            return this.properties.toName;\r\n        },\r\n        /**\r\n         * Destination node's name.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"toName\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return color\r\n         */\r\n        get: function () {\r\n            return this.properties.color;\r\n        },\r\n        /**\r\n         * Node color\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", toColor(value));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.value.value;\r\n        },\r\n        /**\r\n         * Link's value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagramDataItem.prototype, \"link\", {\r\n        /**\r\n         * A visual element, representing link between the source and target nodes.\r\n         *\r\n         * Link's actual thickness will be determined by `value` of this link and\r\n         * `value` of the source node.\r\n         *\r\n         * @readonly\r\n         * @return Link element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._link) {\r\n                var link_1 = this.component.links.create();\r\n                this._link = link_1;\r\n                this.addSprite(link_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.links.removeValue(link_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._link;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FlowDiagramDataItem;\r\n}(ChartDataItem));\r\nexport { FlowDiagramDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Pie chart\r\n * @see {@link IFlowDiagramEvents} for a list of available Events\r\n * @see {@link IFlowDiagramAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar FlowDiagram = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FlowDiagram, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FlowDiagram() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A Color Set to use when applying/generating colors for each subsequent\r\n         * node.\r\n         */\r\n        _this.colors = new ColorSet();\r\n        _this.className = \"FlowDiagram\";\r\n        _this.nodePadding = 20;\r\n        _this.sortBy = \"none\";\r\n        _this.sequencedInterpolation = true;\r\n        _this.colors.step = 2;\r\n        _this.minNodeSize = 0.02;\r\n        var linksContainer = _this.chartContainer.createChild(Container);\r\n        linksContainer.shouldClone = false;\r\n        linksContainer.layout = \"none\";\r\n        linksContainer.isMeasured = false;\r\n        _this.linksContainer = linksContainer;\r\n        var nodesContainer = _this.chartContainer.createChild(Container);\r\n        nodesContainer.shouldClone = false;\r\n        nodesContainer.layout = \"none\";\r\n        nodesContainer.isMeasured = false;\r\n        _this.nodesContainer = nodesContainer;\r\n        // this data item holds sums, averages, etc\r\n        _this.dataItem = _this.createDataItem();\r\n        _this.dataItem.component = _this;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    FlowDiagram.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this.dataItem.dispose();\r\n    };\r\n    /**\r\n     * (Re)validates chart's data, effectively causing the chart to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagram.prototype.validateData = function () {\r\n        var _this = this;\r\n        if (this._parseDataFrom == 0) {\r\n            this.nodes.clear();\r\n        }\r\n        this.sortNodes();\r\n        this.colors.reset();\r\n        _super.prototype.validateData.call(this);\r\n        var sum = 0;\r\n        var count = 0;\r\n        var low;\r\n        var high;\r\n        // build blocks\r\n        $iter.each(this.dataItems.iterator(), function (dataItem) {\r\n            var fromName = dataItem.fromName;\r\n            if (fromName) {\r\n                var node = _this.nodes.getKey(fromName);\r\n                if (!node) {\r\n                    node = _this.nodes.create(fromName);\r\n                    node.name = fromName;\r\n                    node.chart = _this;\r\n                    node.dataItem = dataItem;\r\n                }\r\n                dataItem.fromNode = node;\r\n                dataItem.fromNode.outgoingDataItems.push(dataItem);\r\n            }\r\n            var toName = dataItem.toName;\r\n            if (toName) {\r\n                var node = _this.nodes.getKey(toName);\r\n                if (!node) {\r\n                    node = _this.nodes.create(toName);\r\n                    node.name = toName;\r\n                    node.chart = _this;\r\n                    node.dataItem = dataItem;\r\n                }\r\n                dataItem.toNode = node;\r\n                dataItem.toNode.incomingDataItems.push(dataItem);\r\n            }\r\n            if (!dataItem.fromNode) {\r\n                var strokeModifier = new LinearGradientModifier();\r\n                strokeModifier.opacities = [0, 1];\r\n                dataItem.link.strokeModifier = strokeModifier;\r\n            }\r\n            if (!dataItem.toNode) {\r\n                var fillModifier = new LinearGradientModifier();\r\n                fillModifier.opacities = [1, 0];\r\n                dataItem.link.strokeModifier = fillModifier;\r\n            }\r\n            var value = dataItem.value;\r\n            if ($type.isNumber(value)) {\r\n                sum += value;\r\n                count++;\r\n                if (low > value || !$type.isNumber(low)) {\r\n                    low = value;\r\n                }\r\n                if (high < value || !$type.isNumber(high)) {\r\n                    high = value;\r\n                }\r\n            }\r\n        });\r\n        var key = \"value\";\r\n        this.dataItem.setCalculatedValue(key, high, \"high\");\r\n        this.dataItem.setCalculatedValue(key, low, \"low\");\r\n        this.dataItem.setCalculatedValue(key, sum, \"sum\");\r\n        this.dataItem.setCalculatedValue(key, sum / count, \"average\");\r\n        this.dataItem.setCalculatedValue(key, count, \"count\");\r\n        $iter.each(this.nodes.iterator(), function (strNode) {\r\n            var node = strNode[1];\r\n            if (node.fill instanceof Color) {\r\n                node.color = node.fill;\r\n            }\r\n            if (node.color == undefined) {\r\n                node.color = _this.colors.next();\r\n            }\r\n            if (node.dataItem.color != undefined) {\r\n                node.color = node.dataItem.color;\r\n            }\r\n            if (!node.dataItem.visible) {\r\n                node.hide(0);\r\n            }\r\n            _this.getNodeValue(node);\r\n        });\r\n        this.sortNodes();\r\n        this.feedLegend();\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FlowDiagram.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Sorts nodes by either their values or names, based on `sortBy` setting.\r\n     */\r\n    FlowDiagram.prototype.sortNodes = function () {\r\n        if (this.sortBy == \"name\") {\r\n            this._sorted = this.nodes.sortedIterator();\r\n        }\r\n        else if (this.sortBy == \"value\") {\r\n            this._sorted = $iter.sort(this.nodes.iterator(), function (x, y) { return $order.reverse($number.order(x[1].total, y[1].total)); });\r\n        }\r\n        else {\r\n            this._sorted = this.nodes.iterator();\r\n        }\r\n    };\r\n    /**\r\n     * Updates a cummulative value of the node.\r\n     *\r\n     * A node's value is determined by summing values of all of the incoming\r\n     * links or all of the outgoing links, whichever results in bigger number.\r\n     *\r\n     * @param node  Node value\r\n     */\r\n    FlowDiagram.prototype.getNodeValue = function (node) {\r\n        // todo: totalIncomming totalOutgoing, total\r\n        var incomingTotal = 0;\r\n        var outgoingTotal = 0;\r\n        $iter.each(node.incomingDataItems.iterator(), function (dataItem) {\r\n            var value = dataItem.getWorkingValue(\"value\");\r\n            if ($type.isNumber(value)) {\r\n                incomingTotal += value;\r\n            }\r\n        });\r\n        $iter.each(node.outgoingDataItems.iterator(), function (dataItem) {\r\n            var value = dataItem.getWorkingValue(\"value\");\r\n            if ($type.isNumber(value)) {\r\n                outgoingTotal += value;\r\n            }\r\n        });\r\n        node.total = incomingTotal + outgoingTotal;\r\n        node.totalIncoming = incomingTotal;\r\n        node.totalOutgoing = outgoingTotal;\r\n    };\r\n    ;\r\n    /**\r\n     * Changes the sort type of the nodes.\r\n     *\r\n     * This will actually reshuffle nodes using nice animation.\r\n     */\r\n    FlowDiagram.prototype.changeSorting = function () {\r\n        this.sortNodes();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    FlowDiagram.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Flow diagram\");\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new data item.\r\n     *\r\n     * @return Data item\r\n     */\r\n    FlowDiagram.prototype.createDataItem = function () {\r\n        return new FlowDiagramDataItem();\r\n    };\r\n    Object.defineProperty(FlowDiagram.prototype, \"nodePadding\", {\r\n        /**\r\n         * @return Padding (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"nodePadding\");\r\n        },\r\n        /**\r\n         * Padding for node square in pixels.\r\n         *\r\n         * Padding will add extra space around node's name label.\r\n         *\r\n         * @param value Padding (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"nodePadding\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagram.prototype, \"sortBy\", {\r\n        /**\r\n         * @returns Node sorting\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"sortBy\");\r\n        },\r\n        /**\r\n         * Sort nodes by \"name\" or \"value\" or do not sort at all. If not sorted, nodes will appear in the same order as they are in the data.\r\n         * @default \"none\"\r\n         * @param value  Node sorting\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"sortBy\", value);\r\n            this.changeSorting();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagram.prototype, \"minNodeSize\", {\r\n        /**\r\n         * @returns min node size\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minNodeSize\");\r\n        },\r\n        /**\r\n         * Sometimes nodes can get very small if their value is little. With this setting you\r\n         * can set min size of a node (this is relative value from the total size of all nodes)\r\n         * @default 0.02\r\n         * @param value  Node sorting\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minNodeSize\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FlowDiagram.prototype, \"nodes\", {\r\n        /**\r\n         * A list of chart's nodes.\r\n         *\r\n         * @param {DictionaryTemplate<string, this[\"_node\"]>}\r\n         */\r\n        get: function () {\r\n            if (!this._nodes) {\r\n                var template = this.createNode();\r\n                template.events.on(\"hit\", function (event) {\r\n                    event.target.handleHit(event);\r\n                });\r\n                this._nodes = new DictionaryTemplate(template);\r\n                this._disposers.push(new DictionaryDisposer(this._nodes));\r\n            }\r\n            return this._nodes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    FlowDiagram.prototype.createNode = function () {\r\n        var node = new FlowDiagramNode();\r\n        this._disposers.push(node);\r\n        return node;\r\n    };\r\n    Object.defineProperty(FlowDiagram.prototype, \"links\", {\r\n        /**\r\n         * A list of chart's links.\r\n         *\r\n         * @param {ListTemplate<this[\"_link\"]>}\r\n         */\r\n        get: function () {\r\n            if (!this._links) {\r\n                this._links = new ListTemplate(this.createLink());\r\n                this._disposers.push(new ListDisposer(this._links));\r\n            }\r\n            return this._links;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    FlowDiagram.prototype.createLink = function () {\r\n        var link = new FlowDiagramLink();\r\n        this._disposers.push(link);\r\n        return link;\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    FlowDiagram.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            this.nodes.each(function (key, node) {\r\n                legendData_1.push(node);\r\n            });\r\n            legend.data = legendData_1;\r\n            legend.dataFields.name = \"name\";\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    FlowDiagram.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this.nodes.clear();\r\n    };\r\n    return FlowDiagram;\r\n}(Chart));\r\nexport { FlowDiagram };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagram\"] = FlowDiagram;\r\n//# sourceMappingURL=FlowDiagram.js.map","/**\r\n * Bullet module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar LabelBullet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LabelBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LabelBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"LabelBullet\";\r\n        var label = _this.createChild(Label);\r\n        label.shouldClone = false;\r\n        label.verticalCenter = \"middle\";\r\n        label.horizontalCenter = \"middle\";\r\n        label.truncate = true;\r\n        label.hideOversized = false;\r\n        label.maxWidth = 500;\r\n        label.maxHeight = 500;\r\n        label.stroke = color();\r\n        label.strokeOpacity = 0;\r\n        label.fill = new InterfaceColorSet().getFor(\"text\");\r\n        _this.events.on(\"maxsizechanged\", _this.handleMaxSize, _this, false);\r\n        _this.label = label;\r\n        // not good, as lineSeries will have labels somewhere in the middle.\r\n        //this.locationX = 0.5;\r\n        //this.locationY = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    LabelBullet.prototype.handleMaxSize = function () {\r\n        this.label.maxWidth = this.maxWidth;\r\n        this.label.maxHeight = this.maxHeight;\r\n    };\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[LabelBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    LabelBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.label.copyFrom(source.label);\r\n    };\r\n    return LabelBullet;\r\n}(Bullet));\r\nexport { LabelBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;\r\n//# sourceMappingURL=LabelBullet.js.map","/**\r\n * SankeyNode module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagramNode } from \"./FlowDiagramNode\";\r\nimport { LabelBullet } from \"./LabelBullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a node in a Sankey Diagram.\r\n *\r\n * A Sankey node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[SankeyLink]] elements.\r\n *\r\n * @see {@link ISankeyNodeEvents} for a list of available events\r\n * @see {@link ISankeyNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SankeyNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SankeyNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyNode() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * [nextInCoord description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.nextInCoord = 0;\r\n        /**\r\n         * [nextOutCoord description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.nextOutCoord = 0;\r\n        _this.className = \"SankeyNode\";\r\n        _this.width = 10;\r\n        _this.height = 10;\r\n        var nameLabel = _this.createChild(LabelBullet);\r\n        nameLabel.shouldClone = false;\r\n        //@should we auto update these locations if position is changed?\r\n        nameLabel.locationX = 1;\r\n        nameLabel.locationY = 0.5;\r\n        nameLabel.label.text = \"{name}\";\r\n        //nameLabel.label.textElement.hideOversized = false;\r\n        nameLabel.width = 150;\r\n        nameLabel.height = 150;\r\n        nameLabel.label.horizontalCenter = \"left\";\r\n        nameLabel.label.padding(0, 5, 0, 5);\r\n        _this.nameLabel = nameLabel;\r\n        var valueLabel = _this.createChild(LabelBullet);\r\n        valueLabel.shouldClone = false;\r\n        valueLabel.label.hideOversized = false;\r\n        valueLabel.locationX = 0.5;\r\n        valueLabel.locationY = 0.5;\r\n        valueLabel.width = 150;\r\n        valueLabel.height = 150;\r\n        //valueLabel.label.text = \"{value}\";\r\n        valueLabel.label.horizontalCenter = \"middle\";\r\n        _this.valueLabel = valueLabel;\r\n        var hiddenState = _this.hiddenState;\r\n        hiddenState.properties.fill = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n        hiddenState.properties.opacity = 0.5;\r\n        hiddenState.properties.visible = true;\r\n        _this.background.hiddenState.copyFrom(hiddenState);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Invalidates all links, attached to this node.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyNode.prototype.invalidateLinks = function () {\r\n        var _this = this;\r\n        _super.prototype.invalidateLinks.call(this);\r\n        this.nextInCoord = 0;\r\n        this.nextOutCoord = 0;\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            var orientation_1 = chart.orientation;\r\n            if (this._incomingSorted) {\r\n                $iter.each(this._incomingSorted, function (dataItem) {\r\n                    var link = dataItem.link;\r\n                    var value = dataItem.getWorkingValue(\"value\");\r\n                    if ($type.isNumber(value)) {\r\n                        link.parent = _this.chart.linksContainer;\r\n                        var x = void 0;\r\n                        var y = void 0;\r\n                        var angle = void 0;\r\n                        if (orientation_1 == \"horizontal\") {\r\n                            x = _this.pixelX + _this.dx;\r\n                            y = _this.nextInCoord + _this.pixelY + _this.dy;\r\n                            angle = 0;\r\n                        }\r\n                        else {\r\n                            y = _this.pixelY + _this.dy;\r\n                            x = _this.nextInCoord + _this.pixelX + _this.dx;\r\n                            angle = 90;\r\n                        }\r\n                        link.endX = x;\r\n                        link.endY = y;\r\n                        link.startAngle = angle;\r\n                        link.endAngle = angle;\r\n                        link.gradient.rotation = angle;\r\n                        link.linkWidth = value * chart.valueHeight;\r\n                        if (!dataItem.fromNode) {\r\n                            if (orientation_1 == \"horizontal\") {\r\n                                link.maxWidth = 200;\r\n                                link.startX = _this.pixelX + _this.dx - link.maxWidth;\r\n                                link.startY = link.endY;\r\n                            }\r\n                            else {\r\n                                link.maxHeight = 200;\r\n                                link.startX = link.endX;\r\n                                link.startY = _this.pixelY + _this.dy - link.maxHeight;\r\n                            }\r\n                            // TODO is this needed ?\r\n                            $utils.used(link.gradient);\r\n                            link.fill = dataItem.toNode.color;\r\n                            var stop_1 = link.gradient.stops.getIndex(0);\r\n                            if (stop_1) {\r\n                                if (link.colorMode == \"gradient\") {\r\n                                    stop_1.color = _this.color;\r\n                                }\r\n                                stop_1.opacity = 0;\r\n                                link.fill = link.gradient;\r\n                                link.stroke = link.gradient;\r\n                                link.gradient.validate();\r\n                            }\r\n                        }\r\n                        //link.validate();\r\n                        _this.nextInCoord += link.linkWidth;\r\n                    }\r\n                });\r\n            }\r\n            if (this._outgoingSorted) {\r\n                $iter.each(this._outgoingSorted, function (dataItem) {\r\n                    var link = dataItem.link;\r\n                    link.parent = _this.chart.linksContainer;\r\n                    var value = dataItem.getWorkingValue(\"value\");\r\n                    if ($type.isNumber(value)) {\r\n                        var x = void 0;\r\n                        var y = void 0;\r\n                        var angle = void 0;\r\n                        if (orientation_1 == \"horizontal\") {\r\n                            angle = 0;\r\n                            x = _this.pixelX + _this.pixelWidth + _this.dx - 1;\r\n                            y = _this.nextOutCoord + _this.pixelY + _this.dy;\r\n                        }\r\n                        else {\r\n                            angle = 90;\r\n                            x = _this.nextOutCoord + _this.pixelX + _this.dx;\r\n                            y = _this.pixelY + _this.pixelHeight + _this.dy - 1;\r\n                        }\r\n                        link.startX = x;\r\n                        link.startY = y;\r\n                        link.startAngle = angle;\r\n                        link.endAngle = angle;\r\n                        link.gradient.rotation = angle;\r\n                        link.linkWidth = value * _this.chart.valueHeight;\r\n                        if (!dataItem.toNode) {\r\n                            if (orientation_1 == \"horizontal\") {\r\n                                link.maxWidth = 200;\r\n                                link.endX = _this.pixelX + link.maxWidth + _this.dx;\r\n                                link.endY = link.startY;\r\n                            }\r\n                            else {\r\n                                link.maxHeight = 200;\r\n                                link.endX = link.startX;\r\n                                link.endY = _this.pixelY + link.maxHeight + _this.dy;\r\n                            }\r\n                            link.opacity = _this.opacity;\r\n                            var stop_2 = link.gradient.stops.getIndex(1);\r\n                            if (stop_2) {\r\n                                if (link.colorMode == \"gradient\") {\r\n                                    stop_2.color = _this.color;\r\n                                }\r\n                                stop_2.opacity = 0;\r\n                                link.fill = link.gradient;\r\n                                link.stroke = link.gradient;\r\n                                link.gradient.validate();\r\n                            }\r\n                        }\r\n                        //link.validate();\r\n                        _this.nextOutCoord += link.linkWidth;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        this.positionBullet(this.nameLabel);\r\n        this.positionBullet(this.valueLabel);\r\n    };\r\n    /**\r\n     * Positions the bullet so it is centered within the node element.\r\n     *\r\n     * @param bullet  Target bullet\r\n     */\r\n    SankeyNode.prototype.positionBullet = function (bullet) {\r\n        if (bullet) {\r\n            bullet.x = this.measuredWidth * bullet.locationX;\r\n            bullet.y = this.measuredHeight * bullet.locationY;\r\n        }\r\n    };\r\n    Object.defineProperty(SankeyNode.prototype, \"level\", {\r\n        /**\r\n         * @return Level\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"level\");\r\n        },\r\n        /**\r\n         * A level node is displayed at. (0 - ...)\r\n         *\r\n         * Levels are measured from left to right.\r\n         *\r\n         * The nodes in the left-most column will have `level = 0`.\r\n         *\r\n         * Nodes in second column - `level = 1`, etc.\r\n         *\r\n         * @param value  Level\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"level\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties and labels from another [[SankeyNode]].\r\n     *\r\n     * @param source  Source node\r\n     */\r\n    SankeyNode.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.nameLabel.copyFrom(source.nameLabel);\r\n        this.valueLabel.copyFrom(source.valueLabel);\r\n    };\r\n    return SankeyNode;\r\n}(FlowDiagramNode));\r\nexport { SankeyNode };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyNode\"] = SankeyNode;\r\n//# sourceMappingURL=SankeyNode.js.map","/**\r\n * SankeyLink module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { FlowDiagramLink } from \"./FlowDiagramLink\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link ISankeyLinkEvents} for a list of available events\r\n * @see {@link ISankeyLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SankeyLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SankeyLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SankeyLink\";\r\n        // TODO can this be removed ?\r\n        new InterfaceColorSet();\r\n        _this.tension = 0.8;\r\n        _this.controlPointDistance = 0.2;\r\n        _this.startAngle = 0;\r\n        _this.endAngle = 0;\r\n        _this.linkWidth = 0;\r\n        _this.startX = 0;\r\n        _this.endX = 0;\r\n        _this.startY = 0;\r\n        _this.endY = 0;\r\n        _this.middleLine = _this.createChild(Polyspline);\r\n        _this.middleLine.shouldClone = false;\r\n        _this.middleLine.strokeOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates (redraws) the link.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyLink.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        if (!this.isTemplate) {\r\n            var x0 = this.startX;\r\n            var y0 = this.startY;\r\n            var x1 = this.endX;\r\n            var y1 = this.endY;\r\n            if (!$type.isNumber(x1)) {\r\n                x1 = x0;\r\n            }\r\n            if (!$type.isNumber(y1)) {\r\n                y1 = y0;\r\n            }\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var w = this.linkWidth;\r\n            var path = \"\";\r\n            var xt0 = x0;\r\n            var yt0 = y0;\r\n            var xt1 = x1;\r\n            var yt1 = y1;\r\n            var xb0 = x0 + w * $math.sin(startAngle);\r\n            var xb1 = x1 + w * $math.sin(endAngle);\r\n            var yb0 = y0 + w * $math.cos(startAngle);\r\n            var yb1 = y1 + w * $math.cos(endAngle);\r\n            var xm0 = x0 + w / 2 * $math.sin(startAngle);\r\n            var xm1 = x1 + w / 2 * $math.sin(endAngle);\r\n            var ym0 = y0 + w / 2 * $math.cos(startAngle);\r\n            var ym1 = y1 + w / 2 * $math.cos(endAngle);\r\n            this.zIndex = this.zIndex || this.dataItem.index;\r\n            var tensionX = this.tension + (1 - this.tension) * $math.sin(startAngle);\r\n            var tensionY = this.tension + (1 - this.tension) * $math.cos(startAngle);\r\n            this.middleLine.tensionX = tensionX;\r\n            this.middleLine.tensionY = tensionY;\r\n            if ($type.isNumber(w) && ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1))) {\r\n                // solves issues with gradient fill of straight lines\r\n                if ($math.round(xt0, 3) == $math.round(xt1, 3)) {\r\n                    xt1 += 0.01;\r\n                }\r\n                if ($math.round(yt0, 3) == $math.round(yt1, 3)) {\r\n                    yt1 += 0.01;\r\n                }\r\n                if ($math.round(xb0, 3) == $math.round(xb1, 3)) {\r\n                    xb1 += 0.01;\r\n                }\r\n                if ($math.round(yb0, 3) == $math.round(yb1, 3)) {\r\n                    yb1 += 0.01;\r\n                }\r\n                var minX = Math.min(xb0, xb1, xt0, xt1);\r\n                var minY = Math.min(yb0, yb1, yt0, yt1);\r\n                var maxX = Math.max(xb0, xb1, xt0, xt1);\r\n                var maxY = Math.max(yb0, yb1, yt0, yt1);\r\n                this._bbox = {\r\n                    x: minX,\r\n                    y: minY,\r\n                    width: maxX - minX,\r\n                    height: maxY - minY\r\n                };\r\n                var cpd = this.controlPointDistance;\r\n                var kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(startAngle);\r\n                var kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(startAngle);\r\n                var kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(endAngle);\r\n                var kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(endAngle);\r\n                var kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(startAngle);\r\n                var kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(startAngle);\r\n                var kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(endAngle);\r\n                var kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(endAngle);\r\n                var angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\r\n                var dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(startAngle);\r\n                var dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(startAngle);\r\n                var kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(startAngle);\r\n                var kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(startAngle);\r\n                var kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(endAngle);\r\n                var kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(endAngle);\r\n                this.middleLine.segments = [[{ x: xm0, y: ym0 }, { x: kxm0, y: kym0 }, { x: kxm1, y: kym1 }, { x: xm1, y: ym1 }]];\r\n                kxt0 += dx / 2;\r\n                kyt0 += dy / 2;\r\n                kxt1 += dx / 2;\r\n                kyt1 += dy / 2;\r\n                path += $path.moveTo({ x: xt0, y: yt0 });\r\n                path += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xt0, y: yt0 }, { x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 }, { x: xt1, y: yt1 }]);\r\n                path += $path.lineTo({ x: xb1, y: yb1 });\r\n                path += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xb1, y: yb1 }, { x: kxb1, y: kyb1 }, { x: kxb0, y: kyb0 }, { x: xb0, y: yb0 }]);\r\n                path += $path.closePath();\r\n            }\r\n            this.link.path = path;\r\n            if (this.maskBullets) {\r\n                this.bulletsMask.path = path;\r\n                this.bulletsContainer.mask = this.bulletsMask;\r\n            }\r\n            this.positionBullets();\r\n        }\r\n    };\r\n    Object.defineProperty(SankeyLink.prototype, \"startX\", {\r\n        /**\r\n         * @return Start X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startX\");\r\n        },\r\n        /**\r\n         * [startX description]\r\n         *\r\n         * @todo Description\r\n         * @param value  Start X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"endX\", {\r\n        /**\r\n         * @return End X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endX\");\r\n        },\r\n        /**\r\n         * [endX description]\r\n         *\r\n         * @todo Description\r\n         * @param value  End X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"startY\", {\r\n        /**\r\n         * @return Start Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startY\");\r\n        },\r\n        /**\r\n         * [startY description]\r\n         *\r\n         * @todo Description\r\n         * @param value  Start Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"endY\", {\r\n        /**\r\n         * @return End Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endY\");\r\n        },\r\n        /**\r\n         * [endY description]\r\n         *\r\n         * @todo Description\r\n         * @param value End Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"linkWidth\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"linkWidth\");\r\n        },\r\n        /**\r\n         * [linkWidth description]\r\n         *\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"linkWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"controlPointDistance\", {\r\n        /**\r\n         * @return relative control point distance\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"controlPointDistance\");\r\n        },\r\n        /**\r\n         * Distance of control point of a link, defines relative distance from a node at which linke should bend\r\n         * @default 0.2\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"controlPointDistance\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyLink.prototype, \"tension\", {\r\n        /**\r\n         * @return tension value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tension\");\r\n        },\r\n        /**\r\n         * Tension of a spline, 1 would make the link to have sharp edges\r\n         * @default 0.8\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tension\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SankeyLink;\r\n}(FlowDiagramLink));\r\nexport { SankeyLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyLink\"] = SankeyLink;\r\n//# sourceMappingURL=SankeyLink.js.map","/**\r\n * Sankey diagram module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagram, FlowDiagramDataItem } from \"./FlowDiagram\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { SankeyNode } from \"../elements/SankeyNode\";\r\nimport { SankeyLink } from \"../elements/SankeyLink\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $object from \"../../core/utils/Object\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo rearange notes after dragged\r\n/**\r\n * Defines a [[DataItem]] for [[SankeyDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SankeyDiagramDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SankeyDiagramDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyDiagramDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SankeyDiagramDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SankeyDiagramDataItem;\r\n}(FlowDiagramDataItem));\r\nexport { SankeyDiagramDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Sankey Diagram chart.\r\n *\r\n * @see {@link ISankeyDiagramEvents} for a list of available Events\r\n * @see {@link ISankeyDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sankey-diagram/} for documentation\r\n * @important\r\n */\r\nvar SankeyDiagram = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SankeyDiagram, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SankeyDiagram() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"SankeyDiagram\";\r\n        _this.orientation = \"horizontal\";\r\n        _this.nodeAlign = \"middle\";\r\n        _this.nodesContainer.width = percent(100);\r\n        _this.nodesContainer.height = percent(100);\r\n        _this.linksContainer.width = percent(100);\r\n        _this.linksContainer.height = percent(100);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates chart's data, effectively causing the chart to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyDiagram.prototype.validateData = function () {\r\n        var _this = this;\r\n        _super.prototype.validateData.call(this);\r\n        this._levelCount = 0;\r\n        this.nodes.each(function (key, node) {\r\n            node.level = undefined;\r\n        });\r\n        this.nodes.each(function (key, node) {\r\n            node.level = _this.getNodeLevel(node, 0);\r\n            _this._levelCount = $math.max(_this._levelCount, node.level);\r\n        });\r\n    };\r\n    /**\r\n     * Returns node's highest level.\r\n     *\r\n     * @param node   Node\r\n     * @param level  Current level\r\n     * @return New level\r\n     */\r\n    SankeyDiagram.prototype.getNodeLevel = function (node, level) {\r\n        var _this = this;\r\n        //@todo solve circular so\r\n        var levels = [level];\r\n        $iter.each(node.incomingDataItems.iterator(), function (link) {\r\n            if (link.fromNode) {\r\n                if ($type.isNumber(link.fromNode.level)) {\r\n                    levels.push(link.fromNode.level + 1);\r\n                }\r\n                else {\r\n                    levels.push(_this.getNodeLevel(link.fromNode, level + 1));\r\n                }\r\n            }\r\n        });\r\n        return Math.max.apply(Math, tslib_1.__spread(levels));\r\n    };\r\n    /**\r\n     * Calculates relation between pixel height and total value.\r\n     *\r\n     * In Sankey the actual thickness of links and height of nodes will depend\r\n     * on their values.\r\n     */\r\n    SankeyDiagram.prototype.calculateValueHeight = function () {\r\n        var _this = this;\r\n        // calculate sums of each level\r\n        this._levelSum = {};\r\n        this._levelNodesCount = {};\r\n        this.maxSum = 0;\r\n        var total = this.dataItem.values.value.sum;\r\n        $iter.each(this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            _this.getNodeValue(node);\r\n        });\r\n        this.nodes.each(function (key, node) {\r\n            var level = node.level;\r\n            var value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n            if (value / total < _this.minNodeSize) {\r\n                value = total * _this.minNodeSize;\r\n            }\r\n            if ($type.isNumber(_this._levelSum[level])) {\r\n                _this._levelSum[level] += value;\r\n            }\r\n            else {\r\n                _this._levelSum[level] = value;\r\n            }\r\n            if ($type.isNumber(_this._levelNodesCount[level])) {\r\n                _this._levelNodesCount[level]++;\r\n            }\r\n            else {\r\n                _this._levelNodesCount[level] = 1;\r\n            }\r\n        });\r\n        var availableHeight;\r\n        if (this.orientation == \"horizontal\") {\r\n            availableHeight = this.chartContainer.maxHeight - 1;\r\n        }\r\n        else {\r\n            availableHeight = this.chartContainer.maxWidth - 1;\r\n        }\r\n        var maxSumLevel;\r\n        var minHeight;\r\n        $object.each(this._levelSum, function (key, value) {\r\n            var realValue = value;\r\n            var levelNodeCount = _this._levelNodesCount[key];\r\n            var valueHeight = (availableHeight - (levelNodeCount - 1) * _this.nodePadding) / realValue;\r\n            if (minHeight > valueHeight || !$type.isNumber(minHeight)) {\r\n                minHeight = valueHeight;\r\n                _this.maxSum = realValue;\r\n                maxSumLevel = $type.toNumber(key);\r\n            }\r\n        });\r\n        this._maxSumLevel = maxSumLevel;\r\n        var maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n        var valueHeight = (availableHeight - (maxSumLevelNodeCount - 1) * this.nodePadding) / this.maxSum;\r\n        if (!$type.isNumber(this.valueHeight)) {\r\n            this.valueHeight = valueHeight;\r\n        }\r\n        else {\r\n            var finalHeight = void 0;\r\n            try {\r\n                finalHeight = this._heightAnimation.animationOptions[0].to;\r\n            }\r\n            catch (err) {\r\n            }\r\n            // without animations it will be non-smooth as maxValue jumps from one column to another\r\n            if (finalHeight != valueHeight) {\r\n                var duration = this.interpolationDuration;\r\n                try {\r\n                    duration = this.nodes.template.states.getKey(\"active\").transitionDuration;\r\n                }\r\n                catch (err) {\r\n                }\r\n                this._heightAnimation = new Animation(this, { property: \"valueHeight\", from: this.valueHeight, to: valueHeight }, duration, this.interpolationEasing).start();\r\n                this._disposers.push(this._heightAnimation);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Redraws the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SankeyDiagram.prototype.validate = function () {\r\n        var _this = this;\r\n        _super.prototype.validate.call(this);\r\n        this.calculateValueHeight();\r\n        var container = this.nodesContainer;\r\n        var nextCoordinate = {};\r\n        var maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n        var total = this.dataItem.values.value.sum;\r\n        $iter.each(this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            var level = node.level;\r\n            var levelCoordinate = 0;\r\n            var nodeCount = _this._levelNodesCount[level];\r\n            switch (_this.nodeAlign) {\r\n                case \"bottom\":\r\n                    levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight - (nodeCount - maxSumLevelNodeCount) * _this.nodePadding;\r\n                    break;\r\n                case \"middle\":\r\n                    levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight / 2 - (nodeCount - maxSumLevelNodeCount) * _this.nodePadding / 2;\r\n                    break;\r\n            }\r\n            node.parent = container;\r\n            var delta;\r\n            var x;\r\n            var y;\r\n            var value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n            if (value / total < _this.minNodeSize) {\r\n                value = total * _this.minNodeSize;\r\n            }\r\n            if (_this.orientation == \"horizontal\") {\r\n                delta = (_this.innerWidth - node.pixelWidth) / _this._levelCount;\r\n                x = delta * node.level;\r\n                y = nextCoordinate[level] || levelCoordinate;\r\n                var h = value * _this.valueHeight;\r\n                node.height = h;\r\n                node.minX = x;\r\n                node.maxX = x;\r\n                nextCoordinate[level] = y + h + _this.nodePadding;\r\n            }\r\n            else {\r\n                delta = (_this.innerHeight - node.pixelHeight) / _this._levelCount;\r\n                x = nextCoordinate[level] || levelCoordinate;\r\n                y = delta * node.level;\r\n                var w = value * _this.valueHeight;\r\n                node.width = w;\r\n                node.minY = y;\r\n                node.maxY = y;\r\n                nextCoordinate[level] = x + w + _this.nodePadding;\r\n            }\r\n            node.x = x;\r\n            node.y = y;\r\n        });\r\n    };\r\n    /**\r\n     * Performs actual operations to reveal this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param duration Fade in duration (ms)\r\n     * @return Fade in duration (ms)\r\n     */\r\n    SankeyDiagram.prototype.showReal = function (duration) {\r\n        var _this = this;\r\n        if (this.interpolationDuration > 0) {\r\n            var container_1 = this.nodesContainer;\r\n            var i_1 = 0;\r\n            $iter.each(this.links.iterator(), function (link) {\r\n                link.hide(0);\r\n            });\r\n            $iter.each(this._sorted, function (strNode) {\r\n                var node = strNode[1];\r\n                var property;\r\n                if (_this.orientation == \"horizontal\") {\r\n                    node.dx = -(container_1.pixelWidth - node.pixelWidth) / _this._levelCount;\r\n                    property = \"dx\";\r\n                }\r\n                else {\r\n                    node.dy = -(container_1.pixelHeight - node.pixelHeight) / _this._levelCount;\r\n                    property = \"dy\";\r\n                }\r\n                var delay = 0;\r\n                var duration = _this.interpolationDuration;\r\n                if (_this.sequencedInterpolation) {\r\n                    delay = _this.sequencedInterpolationDelay * i_1 + duration * i_1 / $iter.length(_this.nodes.iterator());\r\n                }\r\n                node.opacity = 0;\r\n                node.invalidateLinks();\r\n                node.animate([{ property: \"opacity\", from: 0, to: 1 }, { property: property, to: 0 }], _this.interpolationDuration, _this.interpolationEasing).delay(delay);\r\n                $iter.each(node.outgoingDataItems.iterator(), function (dataItem) {\r\n                    var animation = dataItem.link.show(_this.interpolationDuration);\r\n                    if (animation && !animation.isFinished()) {\r\n                        animation.delay(delay);\r\n                    }\r\n                });\r\n                $iter.each(node.incomingDataItems.iterator(), function (dataItem) {\r\n                    if (!dataItem.fromNode) {\r\n                        var animation = dataItem.link.show(_this.interpolationDuration);\r\n                        if (animation && !animation.isFinished()) {\r\n                            animation.delay(delay);\r\n                        }\r\n                    }\r\n                });\r\n                i_1++;\r\n            });\r\n        }\r\n        return _super.prototype.showReal.call(this);\r\n    };\r\n    /**\r\n     * Changes the sort type of the nodes.\r\n     *\r\n     * This will actually reshuffle nodes using nice animation.\r\n     */\r\n    SankeyDiagram.prototype.changeSorting = function () {\r\n        var _this = this;\r\n        this.sortNodes();\r\n        var nextCoordinate = {};\r\n        $iter.each(this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            var level = node.level;\r\n            var levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight / 2;\r\n            var property;\r\n            var nodeHeight;\r\n            if (_this.orientation == \"horizontal\") {\r\n                property = \"y\";\r\n                nodeHeight = node.pixelHeight;\r\n            }\r\n            else {\r\n                property = \"x\";\r\n                nodeHeight = node.pixelWidth;\r\n            }\r\n            node.animate({ property: property, to: nextCoordinate[level] || levelCoordinate }, _this.interpolationDuration, _this.interpolationEasing);\r\n            nextCoordinate[level] = (nextCoordinate[level] || levelCoordinate) + nodeHeight + _this.nodePadding;\r\n            node.invalidateLinks();\r\n        });\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    SankeyDiagram.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Sankey diagram\");\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new data item.\r\n     *\r\n     * @return Data item\r\n     */\r\n    SankeyDiagram.prototype.createDataItem = function () {\r\n        return new SankeyDiagramDataItem();\r\n    };\r\n    Object.defineProperty(SankeyDiagram.prototype, \"nodeAlign\", {\r\n        /**\r\n         * @returns Returns nodeAlign value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"nodeAlign\");\r\n        },\r\n        /**\r\n         * How to align nodes. In case layout is vertical, top means left and bottom means right\r\n         *\r\n         * @param value  Node sorting\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"nodeAlign\", value);\r\n            this.changeSorting();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SankeyDiagram.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the chart: \"horizontal\" or \"vertical\";\r\n         *\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"orientation\", value, true);\r\n            var nameLabel = this.nodes.template.nameLabel;\r\n            if (value == \"vertical\") {\r\n                this.nodes.template.width = undefined;\r\n                nameLabel.label.horizontalCenter = \"middle\";\r\n                nameLabel.locationX = 0.5;\r\n            }\r\n            else {\r\n                this.nodes.template.height = undefined;\r\n                nameLabel.label.horizontalCenter = \"left\";\r\n                nameLabel.locationX = 1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    SankeyDiagram.prototype.createNode = function () {\r\n        var node = new SankeyNode();\r\n        this._disposers.push(node);\r\n        return node;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    SankeyDiagram.prototype.createLink = function () {\r\n        var link = new SankeyLink();\r\n        this._disposers.push(link);\r\n        return link;\r\n    };\r\n    Object.defineProperty(SankeyDiagram.prototype, \"valueHeight\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._valueHeight;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (value != this._valueHeight) {\r\n                this._valueHeight = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    SankeyDiagram.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this._sorted = this.nodes.iterator();\r\n    };\r\n    return SankeyDiagram;\r\n}(FlowDiagram));\r\nexport { SankeyDiagram };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyDiagram\"] = SankeyDiagram;\r\n//# sourceMappingURL=SankeyDiagram.js.map","/**\r\n * ChordNode module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagramNode } from \"./FlowDiagramNode\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a node in a Chord Diagram.\r\n *\r\n * A Chord node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[ChordLink]] elements.\r\n *\r\n * @see {@link IChordNodeEvents} for a list of available events\r\n * @see {@link IChordNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ChordNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChordNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordNode() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChordNode\";\r\n        var label = _this.createChild(AxisLabelCircular);\r\n        label.location = 0.5;\r\n        label.radius = 5;\r\n        label.text = \"{name}\";\r\n        label.zIndex = 1;\r\n        label.shouldClone = false;\r\n        _this.label = label;\r\n        _this.layout = \"none\";\r\n        _this.events.on(\"positionchanged\", _this.updateRotation, _this, false);\r\n        _this.isMeasured = false;\r\n        _this.slice = _this.createChild(Slice);\r\n        _this.slice.isMeasured = false;\r\n        var hiddenState = _this.hiddenState;\r\n        hiddenState.properties.fill = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n        hiddenState.properties.opacity = 0.5;\r\n        hiddenState.properties.visible = true;\r\n        _this.setStateOnChildren = false;\r\n        _this.slice.hiddenState.properties.visible = true;\r\n        _this.adapter.add(\"tooltipX\", function (tooltipX, target) {\r\n            return target.slice.ix * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);\r\n        });\r\n        _this.adapter.add(\"tooltipY\", function (tooltipY, target) {\r\n            return target.slice.iy * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Invalidates all links, attached to this node.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ChordNode.prototype.invalidateLinks = function () {\r\n        var _this = this;\r\n        _super.prototype.invalidateLinks.call(this);\r\n        var label = this.label;\r\n        var slice = this.slice;\r\n        var chart = this.chart;\r\n        if (chart && slice) {\r\n            var sum = this.total;\r\n            var arc_1 = slice.arc;\r\n            var sliceStartAngle_1 = slice.startAngle;\r\n            this.children.each(function (child) {\r\n                if (child instanceof Bullet) {\r\n                    var locationX = child.locationX;\r\n                    if (!$type.isNumber(locationX)) {\r\n                        locationX = 0.5;\r\n                    }\r\n                    var locationY = child.locationY;\r\n                    if (!$type.isNumber(locationY)) {\r\n                        locationY = 1;\r\n                    }\r\n                    var childAngle = sliceStartAngle_1 + arc_1 * locationX;\r\n                    var childRadius = locationY * slice.radius;\r\n                    child.x = childRadius * $math.cos(childAngle);\r\n                    child.y = childRadius * $math.sin(childAngle);\r\n                }\r\n            });\r\n            var labelAngle = sliceStartAngle_1 + arc_1 * label.location;\r\n            var startAngle = sliceStartAngle_1 + (1 - sum / this.adjustedTotal) * arc_1 * 0.5; // if value of a node is > then sum of the links, add to center link\r\n            if ($type.isNaN(startAngle)) {\r\n                startAngle = sliceStartAngle_1;\r\n            }\r\n            label.fixPosition(labelAngle, slice.radius);\r\n            this.nextAngle = startAngle;\r\n            if (this._outgoingSorted) {\r\n                $iter.each(this._outgoingSorted, function (dataItem) {\r\n                    var link = dataItem.link;\r\n                    link.parent = _this.chart.linksContainer;\r\n                    var value = dataItem.getWorkingValue(\"value\");\r\n                    if ($type.isNumber(value)) {\r\n                        if (chart.nonRibbon) {\r\n                            var percentWidth = link.percentWidth;\r\n                            if (!$type.isNumber(percentWidth)) {\r\n                                percentWidth = 5;\r\n                            }\r\n                            percentWidth = percentWidth / 100;\r\n                            link.startAngle = sliceStartAngle_1 + arc_1 / 2 - arc_1 / 2 * percentWidth;\r\n                            link.arc = arc_1 * percentWidth;\r\n                        }\r\n                        else {\r\n                            link.arc = value * chart.valueAngle;\r\n                            link.startAngle = _this.nextAngle;\r\n                            _this.nextAngle += link.arc;\r\n                        }\r\n                        if (!dataItem.toNode) {\r\n                            link.endAngle = link.startAngle;\r\n                        }\r\n                        link.radius = slice.pixelInnerRadius;\r\n                    }\r\n                    //link.validate();\r\n                });\r\n            }\r\n            if (this._incomingSorted) {\r\n                $iter.each(this._incomingSorted, function (dataItem) {\r\n                    var link = dataItem.link;\r\n                    link.radius = slice.pixelInnerRadius;\r\n                    if (chart.nonRibbon) {\r\n                        var percentWidth = link.percentWidth;\r\n                        if (!$type.isNumber(percentWidth)) {\r\n                            percentWidth = 5;\r\n                        }\r\n                        percentWidth = percentWidth / 100;\r\n                        link.endAngle = sliceStartAngle_1 + arc_1 / 2 - arc_1 / 2 * percentWidth;\r\n                        link.arc = arc_1 * percentWidth;\r\n                    }\r\n                    else {\r\n                        link.endAngle = _this.nextAngle;\r\n                        var value = dataItem.getWorkingValue(\"value\");\r\n                        if ($type.isNumber(value)) {\r\n                            link.arc = value * chart.valueAngle; // yes, this is needed\r\n                            _this.nextAngle += link.arc;\r\n                        }\r\n                    }\r\n                    if (!dataItem.fromNode) {\r\n                        link.startAngle = link.endAngle;\r\n                    }\r\n                    //link.validate();\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * updates slice start angle so that when we drag a node it would face the center\r\n     */\r\n    ChordNode.prototype.updateRotation = function () {\r\n        var slice = this.slice;\r\n        var mAngle = this.trueStartAngle + slice.arc / 2;\r\n        var radius = slice.radius;\r\n        var tx = radius * $math.cos(mAngle);\r\n        var ty = radius * $math.sin(mAngle);\r\n        var angle = $math.getAngle({ x: tx + this.pixelX, y: ty + this.pixelY });\r\n        slice.startAngle = this.trueStartAngle + (angle - mAngle);\r\n        this.dx = -this.pixelX;\r\n        this.dy = -this.pixelY;\r\n    };\r\n    /**\r\n     * Copies properties and labels from another [[ChordNode]].\r\n     *\r\n     * @param source  Source node\r\n     */\r\n    ChordNode.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.label.copyFrom(source.label);\r\n        this.slice.copyFrom(source.slice);\r\n    };\r\n    return ChordNode;\r\n}(FlowDiagramNode));\r\nexport { ChordNode };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordNode\"] = ChordNode;\r\n//# sourceMappingURL=ChordNode.js.map","/**\r\n * Functionality for drawing quadratic curves.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Line } from \"./Line\";\r\nimport { color } from \"../utils/Color\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IQuadraticCurveEvents} for a list of available events\r\n * @see {@link IQuadraticCurveAdapters} for a list of available Adapters\r\n */\r\nvar QuadraticCurve = /** @class */ (function (_super) {\r\n    tslib_1.__extends(QuadraticCurve, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function QuadraticCurve() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"QuadraticCurve\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.pixelPerfect = false;\r\n        _this.fill = color();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the waved line.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    QuadraticCurve.prototype.draw = function () {\r\n        //super.draw();\r\n        if ($type.isNumber(this.x1 + this.x2 + this.y1 + this.y2 + this.cpx + this.cpy)) {\r\n            var p1 = { x: this.x1, y: this.y1 };\r\n            var p2 = { x: this.x2, y: this.y2 };\r\n            var cp = { x: this.cpx, y: this.cpy };\r\n            var d = $path.moveTo(p1) + $path.quadraticCurveTo(p2, cp);\r\n            this.path = d;\r\n        }\r\n    };\r\n    Object.defineProperty(QuadraticCurve.prototype, \"cpx\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cpx\");\r\n        },\r\n        /**\r\n         * X coordinate of control point.\r\n         *\r\n         * @param value X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cpx\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QuadraticCurve.prototype, \"cpy\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cpy\");\r\n        },\r\n        /**\r\n         * Y coordinate of control point.\r\n         *\r\n         * @param value Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cpy\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position along the line (0-1) into pixel coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinates\r\n     */\r\n    QuadraticCurve.prototype.positionToPoint = function (position) {\r\n        var p1 = { x: this.x1, y: this.y1 };\r\n        var cp = { x: this.cpx, y: this.cpy };\r\n        var p2 = { x: this.x2, y: this.y2 };\r\n        var point1 = $math.getPointOnQuadraticCurve(p1, p2, cp, position);\r\n        var point2 = $math.getPointOnQuadraticCurve(p1, p2, cp, position + 0.001);\r\n        return { x: point1.x, y: point1.y, angle: $math.getAngle(point1, point2) };\r\n    };\r\n    return QuadraticCurve;\r\n}(Line));\r\nexport { QuadraticCurve };\r\n//# sourceMappingURL=QuadraticCurve.js.map","/**\r\n * ChordLink module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { FlowDiagramLink } from \"./FlowDiagramLink\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { QuadraticCurve } from \"../../core/elements/QuadraticCurve\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Chord Diagram.\r\n *\r\n * @see {@link IChordLinkEvents} for a list of available events\r\n * @see {@link IChordLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ChordLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChordLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChordLink\";\r\n        _this.middleLine = _this.createChild(QuadraticCurve);\r\n        _this.middleLine.shouldClone = false;\r\n        _this.middleLine.strokeOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates (redraws) the link.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ChordLink.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        if (!this.isTemplate) {\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var arc = this.arc;\r\n            var radius = this.radius;\r\n            var fromNode = this.dataItem.fromNode;\r\n            var toNode = this.dataItem.toNode;\r\n            var fromX = 0;\r\n            var fromY = 0;\r\n            if (fromNode) {\r\n                fromX = fromNode.pixelX + fromNode.dx;\r\n                fromY = fromNode.pixelY + fromNode.dy;\r\n            }\r\n            var toX = 0;\r\n            var toY = 0;\r\n            if (toNode) {\r\n                toX = toNode.pixelX + toNode.dx;\r\n                toY = toNode.pixelY + toNode.dy;\r\n            }\r\n            if (radius > 0) {\r\n                var x1 = radius * $math.cos(startAngle) + fromX;\r\n                var y1 = radius * $math.sin(startAngle) + fromY;\r\n                var x2 = radius * $math.cos(endAngle) + toX;\r\n                var y2 = radius * $math.sin(endAngle) + toY;\r\n                //let cpAngle = startAngle + arc + (endAngle - startAngle - arc) / 2;\r\n                //let arcWidth = $math.getDistance({x:x1, y:y1}, {x:x4, y:y4});\r\n                //let cpx = (arcWidth) * $math.cos(cpAngle);\r\n                //let cpy = (arcWidth) * $math.sin(cpAngle);\r\n                var cp = { x: 0, y: 0 };\r\n                var path = $path.moveTo({ x: x1, y: y1 });\r\n                path += $path.arcTo(startAngle, arc, radius);\r\n                path += $path.quadraticCurveTo({ x: x2, y: y2 }, cp);\r\n                path += $path.arcTo(endAngle, arc, radius);\r\n                path += $path.quadraticCurveTo({ x: x1, y: y1 }, cp);\r\n                if (arc > 0) {\r\n                    this.link.path = path;\r\n                }\r\n                else {\r\n                    this.link.path = \"\";\r\n                }\r\n                if (this.maskBullets) {\r\n                    this.bulletsMask.path = path;\r\n                    this.bulletsContainer.mask = this.bulletsMask;\r\n                }\r\n                var mAngle1 = startAngle + arc / 2;\r\n                var mAngle2 = endAngle + arc / 2;\r\n                var middleLine = this.middleLine;\r\n                middleLine.x1 = radius * $math.cos(mAngle1) + fromX;\r\n                middleLine.y1 = radius * $math.sin(mAngle1) + fromY;\r\n                middleLine.x2 = radius * $math.cos(mAngle2) + toX;\r\n                middleLine.y2 = radius * $math.sin(mAngle2) + toY;\r\n                middleLine.cpx = 0;\r\n                middleLine.cpy = 0;\r\n                middleLine.stroke = this.fill;\r\n                this.positionBullets();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ChordLink.prototype, \"radius\", {\r\n        /**\r\n         * @return End Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * [radius description]\r\n         *\r\n         * @todo Description\r\n         * @param value End Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"radius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordLink.prototype, \"arc\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"arc\");\r\n        },\r\n        /**\r\n         * [arc description]\r\n         *\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"arc\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ChordLink;\r\n}(FlowDiagramLink));\r\nexport { ChordLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordLink\"] = ChordLink;\r\n//# sourceMappingURL=ChordLink.js.map","/**\r\n * Chord diagram module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagram, FlowDiagramDataItem } from \"./FlowDiagram\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ChordNode } from \"../elements/ChordNode\";\r\nimport { ChordLink } from \"../elements/ChordLink\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo rearange notes after dragged\r\n/**\r\n * Defines a [[DataItem]] for [[ChordDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ChordDiagramDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChordDiagramDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordDiagramDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChordDiagramDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ChordDiagramDataItem;\r\n}(FlowDiagramDataItem));\r\nexport { ChordDiagramDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Chord Diagram chart.\r\n *\r\n * @see {@link IChordDiagramEvents} for a list of available Events\r\n * @see {@link IChordDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/chord-diagram/} for documentation\r\n * @important\r\n */\r\nvar ChordDiagram = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChordDiagram, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordDiagram() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * [valueAngle description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.valueAngle = 0;\r\n        _this.className = \"ChordDiagram\";\r\n        _this.startAngle = -90;\r\n        _this.endAngle = 270;\r\n        _this.radius = percent(80);\r\n        _this.innerRadius = -15;\r\n        _this.nodePadding = 5;\r\n        var chordContainer = _this.chartContainer.createChild(Container);\r\n        chordContainer.align = \"center\";\r\n        chordContainer.valign = \"middle\";\r\n        chordContainer.shouldClone = false;\r\n        chordContainer.layout = \"absolute\";\r\n        _this.chordContainer = chordContainer;\r\n        _this.nodesContainer.parent = chordContainer;\r\n        _this.linksContainer.parent = chordContainer;\r\n        _this.chartContainer.events.on(\"maxsizechanged\", _this.invalidate, _this, false);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Redraws the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ChordDiagram.prototype.validate = function () {\r\n        var _this = this;\r\n        var chartContainer = this.chartContainer;\r\n        var endAngle = this.endAngle;\r\n        var startAngle = this.startAngle + this.nodePadding / 2;\r\n        var rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n        var innerRect = { x: 0, y: 0, width: 0, height: 0 };\r\n        rect = $math.getCommonRectangle([rect, innerRect]);\r\n        var maxRadius = Math.min(chartContainer.innerWidth / rect.width, chartContainer.innerHeight / rect.height);\r\n        if (!$type.isNumber(maxRadius)) {\r\n            maxRadius = 0;\r\n        }\r\n        var radius = $utils.relativeRadiusToValue(this.radius, maxRadius);\r\n        var pixelInnerRadius = $utils.relativeRadiusToValue(this.innerRadius, radius, true);\r\n        var total = this.dataItem.values.value.sum;\r\n        var count = 0;\r\n        var newTotal = 0;\r\n        $iter.each(this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            _this.getNodeValue(node);\r\n            count++;\r\n            var value = node.total;\r\n            if (node.total / total < _this.minNodeSize) {\r\n                value = total * _this.minNodeSize;\r\n            }\r\n            newTotal += value;\r\n        });\r\n        this.valueAngle = (endAngle - this.startAngle - this.nodePadding * count) / newTotal;\r\n        $iter.each(this._sorted, function (strNode) {\r\n            var node = strNode[1];\r\n            var slice = node.slice;\r\n            slice.radius = radius;\r\n            slice.innerRadius = pixelInnerRadius;\r\n            var value = node.total;\r\n            if (node.total / total < _this.minNodeSize) {\r\n                value = total * _this.minNodeSize;\r\n            }\r\n            node.adjustedTotal = value;\r\n            var arc;\r\n            if (_this.nonRibbon) {\r\n                arc = (endAngle - _this.startAngle) / count - _this.nodePadding;\r\n            }\r\n            else {\r\n                arc = _this.valueAngle * value;\r\n            }\r\n            slice.arc = arc;\r\n            slice.startAngle = startAngle;\r\n            node.trueStartAngle = startAngle;\r\n            node.parent = _this.nodesContainer;\r\n            node.validate(); // otherwise flickers - nodes are already created, but not yet positioned etc.\r\n            startAngle += arc + _this.nodePadding;\r\n        });\r\n        this.chordContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };\r\n        this.chordContainer.invalidateLayout();\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ChordDiagram.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Chord diagram\");\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new data item.\r\n     *\r\n     * @return Data item\r\n     */\r\n    ChordDiagram.prototype.createDataItem = function () {\r\n        return new ChordDiagramDataItem();\r\n    };\r\n    Object.defineProperty(ChordDiagram.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Radar face. (degrees)\r\n         *\r\n         * Normally, a circular radar face begins (the radial axis is drawn) at the\r\n         * top center. (at -90 degrees)\r\n         *\r\n         * You can use `startAngle` to change this setting.\r\n         *\r\n         * E.g. setting this to 0 will make the radial axis start horizontally to\r\n         * the right, as opposed to vertical.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set those to lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * @default -90\r\n         * @param value  Start angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordDiagram.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the Radar face. (degrees)\r\n         *\r\n         * Normally, a circular radar face ends (the radial axis is drawn) exactly\r\n         * where it has started, forming a full 360 circle. (at 270 degrees)\r\n         *\r\n         * You can use `endAngle` to end the circle somewhere else.\r\n         *\r\n         * E.g. setting this to 180 will make the radar face end at horizontal line\r\n         * to the left off the center.\r\n         *\r\n         * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n         * needs to be 360.\r\n         *\r\n         * However, it's **not** necessary to do so. You can set those to lesser\r\n         * numbers, to create semi-circles.\r\n         *\r\n         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n         * looks like a quarter of a circle.\r\n         *\r\n         * @default -90\r\n         * @param value  End angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordDiagram.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the Radar face.\r\n         *\r\n         * This can either be in absolute pixel value, or relative [[Percent]].\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordDiagram.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the Chord nodes.\r\n         *\r\n         * This can either be in absolute pixel value, or relative [[Percent]].\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordDiagram.prototype, \"nonRibbon\", {\r\n        /**\r\n         * @return Non-ribbon\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"nonRibbon\");\r\n        },\r\n        /**\r\n         *\r\n         * If you set this to true, all the lines will be of the same width. This is done by making middleLine of a ChordLink visible.\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"nonRibbon\", value, true);\r\n            this.links.template.middleLine.strokeOpacity = 1;\r\n            this.links.template.link.fillOpacity = 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    ChordDiagram.prototype.createNode = function () {\r\n        var node = new ChordNode();\r\n        this._disposers.push(node);\r\n        return node;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ChordDiagram.prototype.createLink = function () {\r\n        var link = new ChordLink();\r\n        this._disposers.push(link);\r\n        return link;\r\n    };\r\n    return ChordDiagram;\r\n}(FlowDiagram));\r\nexport { ChordDiagram };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordDiagram\"] = ChordDiagram;\r\n//# sourceMappingURL=ChordDiagram.js.map","/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Column = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Column, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Column() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Column\";\r\n        _this.width = percent(80);\r\n        _this.height = percent(80);\r\n        //this.isMeasured = true; // for correct position of the tooltip\r\n        _this.events.disableType(\"transformed\"); // not to bug parent\r\n        _this.applyOnClones = true;\r\n        _this.strokeOpacity = 1;\r\n        _this.layout = \"none\";\r\n        _this.createAssets();\r\n        // otherwise users will have to set layout themselves if they'll want to align, scale etc children\r\n        _this.events.on(\"childadded\", _this.handleKidAdded, _this, false);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Column.prototype.handleKidAdded = function () {\r\n        if (this.layout == \"none\") {\r\n            this.layout = \"absolute\";\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Column.prototype.createAssets = function () {\r\n        this.column = this.createChild(RoundedRectangle);\r\n        this.column.shouldClone = false;\r\n        this.column.isMeasured = false;\r\n        this.column.cornerRadius(0, 0, 0, 0);\r\n        this._disposers.push(this.column);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    Column.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        var column = this.column;\r\n        if (column) {\r\n            column.width = $math.min(this.pixelWidth, this.maxWidth);\r\n            column.height = $math.min(this.pixelHeight, this.maxHeight);\r\n            if (column.invalid) {\r\n                column.validate(); // important!\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Column]].\r\n     *\r\n     * @param source Source Column\r\n     */\r\n    Column.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.column) {\r\n            this.column.copyFrom(source.column);\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            if (this.column) {\r\n                return { x: 0, y: 0, width: this.column.measuredWidth, height: this.column.measuredHeight };\r\n            }\r\n            else {\r\n                return { x: 0, y: 0, width: $math.min(this.pixelWidth, this.maxWidth), height: $math.min(this.pixelHeight, this.maxHeight) };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Column;\r\n}(Container));\r\nexport { Column };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column\"] = Column;\r\n//# sourceMappingURL=Column.js.map","/**\r\n * Column series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYSeries, XYSeriesDataItem } from \"./XYSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Column } from \"../elements/Column\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ColumnSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ColumnSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeriesDataItem\";\r\n        _this.locations[\"dateX\"] = 0.5;\r\n        _this.locations[\"dateY\"] = 0.5;\r\n        _this.locations[\"categoryX\"] = 0.5;\r\n        _this.locations[\"categoryY\"] = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"column\", {\r\n        /**\r\n         * @return Column\r\n         */\r\n        get: function () {\r\n            return this._column;\r\n        },\r\n        /**\r\n         * A column used to draw a column for this data item.\r\n         *\r\n         * @param column\r\n         */\r\n        set: function (column) {\r\n            this.setColumn(column);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnSeriesDataItem.prototype.setColumn = function (column) {\r\n        var _this = this;\r\n        if (this._column && column != this._column) {\r\n            $array.remove(this.sprites, this._column);\r\n        }\r\n        this._column = column;\r\n        if (column) {\r\n            var prevDataItem = column.dataItem;\r\n            if (prevDataItem && prevDataItem != this) {\r\n                prevDataItem.column = undefined;\r\n            }\r\n            this.addSprite(column);\r\n            this._disposers.push(new Disposer(function () {\r\n                // TODO investigate why component is undefined\r\n                // https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010\r\n                if (_this.component) {\r\n                    _this.component.columns.removeValue(column);\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"rangesColumns\", {\r\n        /**\r\n         * A dictionary storing axes ranges columns by axis uid\r\n         */\r\n        get: function () {\r\n            if (!this._rangesColumns) {\r\n                this._rangesColumns = new Dictionary();\r\n            }\r\n            return this._rangesColumns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSeriesDataItem;\r\n}(XYSeriesDataItem));\r\nexport { ColumnSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a column graph.\r\n *\r\n * @see {@link IColumnSeriesEvents} for a list of available Events\r\n * @see {@link IColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ColumnSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ColumnSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Start location within cell for columns.\r\n         */\r\n        _this._startLocation = 0;\r\n        /**\r\n         * End location within cell for columns.\r\n         */\r\n        _this._endLocation = 1;\r\n        _this.className = \"ColumnSeries\";\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.strokeOpacity = 0;\r\n        _this.fillOpacity = 1;\r\n        _this.clustered = true;\r\n        var columnsContainer = _this.mainContainer.createChild(Container);\r\n        columnsContainer.shouldClone = false;\r\n        columnsContainer.isMeasured = false;\r\n        columnsContainer.layout = \"none\";\r\n        _this._columnsContainer = columnsContainer;\r\n        _this.columns.template.pixelPerfect = false;\r\n        _this.tooltipColorSource = _this.columns.template;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeries.prototype, \"columnsContainer\", {\r\n        /**\r\n         * A container that columns are created in.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            return this._columnsContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ColumnSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Column Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ColumnSeries.prototype.createDataItem = function () {\r\n        return new ColumnSeriesDataItem();\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.validate = function () {\r\n        var _this = this;\r\n        //@todo Check if we can do better than use `instanceof`\r\n        // find start/end locations based on clustered/stacked settings\r\n        // go through chart series instead of base axis series, because axis series doesn't maintain order\r\n        if (this.chart && this.xAxis && this.yAxis) {\r\n            var baseAxisSeries = this.chart.series;\r\n            var clusterCount_1 = 0;\r\n            var index_1 = 0;\r\n            $iter.each(baseAxisSeries.iterator(), function (series) {\r\n                if (series instanceof ColumnSeries) {\r\n                    if (_this.baseAxis == series.baseAxis) {\r\n                        if ((!series.stacked && series.clustered) || clusterCount_1 === 0) {\r\n                            clusterCount_1++;\r\n                        }\r\n                        if (series == _this) {\r\n                            index_1 = clusterCount_1 - 1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            var renderer = this.baseAxis.renderer;\r\n            var cellStartLocation = renderer.cellStartLocation;\r\n            var cellEndLocation = renderer.cellEndLocation;\r\n            this._startLocation = cellStartLocation + (index_1 / clusterCount_1) * (cellEndLocation - cellStartLocation);\r\n            this._endLocation = cellStartLocation + (index_1 + 1) / clusterCount_1 * (cellEndLocation - cellStartLocation);\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        for (var i = 0; i < this.startIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.validateDataElement = function (dataItem) {\r\n        // important oder here, first real, then super. we need this to know size\r\n        if (this.chart && this.xAxis && this.yAxis) {\r\n            this.validateDataElementReal(dataItem);\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative start location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    ColumnSeries.prototype.getStartLocation = function (dataItem) {\r\n        var startLocation = this._startLocation;\r\n        if (this.baseAxis == this.xAxis) {\r\n            startLocation += dataItem.locations[this.xOpenField] - 0.5;\r\n        }\r\n        else {\r\n            startLocation += dataItem.locations[this.yOpenField] - 0.5;\r\n        }\r\n        return startLocation;\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    /*\r\n   public handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n       if (this.simplifiedProcessing) {\r\n           this.validateDataElement(dataItem);\r\n       }\r\n       else {\r\n           super.handleDataItemWorkingValueChange(dataItem, name);\r\n       }\r\n   }*/\r\n    /**\r\n     * Returns relative end location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    ColumnSeries.prototype.getEndLocation = function (dataItem) {\r\n        var endLocation = this._endLocation;\r\n        if (this.baseAxis == this.xAxis) {\r\n            endLocation += dataItem.locations[this.xField] - 0.5;\r\n        }\r\n        else {\r\n            endLocation += dataItem.locations[this.yField] - 0.5;\r\n        }\r\n        return endLocation;\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        var _this = this;\r\n        //\tif (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way\r\n        var l;\r\n        var r;\r\n        var t;\r\n        var b;\r\n        var startLocation = this.getStartLocation(dataItem);\r\n        var endLocation = this.getEndLocation(dataItem);\r\n        var xField = this.xField;\r\n        var xOpenField = this.xOpenField;\r\n        var yField = this.yField;\r\n        var yOpenField = this.yOpenField;\r\n        var template = this.columns.template;\r\n        var percentWidth = template.percentWidth;\r\n        var percentHeight = template.percentHeight;\r\n        var pixelWidth = template.pixelWidth;\r\n        var pixelHeight = template.pixelHeight;\r\n        var maxWidth = template.maxWidth;\r\n        var maxHeight = template.maxHeight;\r\n        var paddingLeft = template.pixelPaddingLeft;\r\n        var paddingRight = template.pixelPaddingRight;\r\n        var paddingTop = template.pixelPaddingTop;\r\n        var paddingBottom = template.pixelPaddingBottom;\r\n        var outOfBounds = false;\r\n        // two category axes\r\n        if ((this.xAxis instanceof CategoryAxis) && (this.yAxis instanceof CategoryAxis)) {\r\n            if (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {\r\n                return;\r\n            }\r\n            startLocation = 0;\r\n            endLocation = 1;\r\n            if (!$type.isNaN(percentWidth)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            l = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n            r = this.xAxis.getX(dataItem, xField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentWidth)) {\r\n                var offset = ((r - l) - pixelWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            // in case max width is set in pixels\r\n            if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            startLocation = 0;\r\n            endLocation = 1;\r\n            if (!$type.isNaN(percentHeight)) {\r\n                var offset = $math.round((1 - percentHeight / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            t = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n            b = this.yAxis.getY(dataItem, yField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentHeight)) {\r\n                var offset = ((b - t) - pixelHeight) / 2;\r\n                b += offset;\r\n                t -= offset;\r\n            }\r\n            // in case max width is set in pixels\r\n            if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                b += offset;\r\n                t -= offset;\r\n            }\r\n            r = this.fixHorizontalCoordinate(r);\r\n            l = this.fixHorizontalCoordinate(l);\r\n            t = this.fixVerticalCoordinate(t);\r\n            b = this.fixVerticalCoordinate(b);\r\n        }\r\n        else if (this.baseAxis == this.xAxis) {\r\n            if (!dataItem.hasValue(this._yValueFields)) {\r\n                return;\r\n            }\r\n            // in case width is set in percent\r\n            if (!$type.isNaN(percentWidth)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            l = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n            r = this.xAxis.getX(dataItem, xField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentWidth)) {\r\n                var offset = ((r - l) - pixelWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            // in case width is set in pixels\r\n            if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            var bottomLocation = dataItem.locations[yOpenField];\r\n            var topLocation = dataItem.locations[yField];\r\n            // otherwise gantt chart will start items in the middle of a cell\r\n            if (this.yAxis instanceof ValueAxis) {\r\n                if (this.dataFields[this.yField] != this.dataFields[this.yOpenField]) {\r\n                    bottomLocation = 0;\r\n                    topLocation = 0;\r\n                }\r\n            }\r\n            b = this.yAxis.getY(dataItem, yOpenField, bottomLocation);\r\n            t = this.yAxis.getY(dataItem, yField, topLocation);\r\n            // used to save location for bullets, but it's not a good approach\r\n            // dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;\r\n            var axisLenght = Math.ceil(this.yAxis.axisLength);\r\n            if ((t < 0 && b < 0) || (t > axisLenght && b > axisLenght)) {\r\n                outOfBounds = true;\r\n            }\r\n            t = this.fixVerticalCoordinate(t);\r\n            b = this.fixVerticalCoordinate(b);\r\n            if (Math.abs(r - l) - paddingLeft - paddingRight == 0) {\r\n                outOfBounds = true;\r\n            }\r\n        }\r\n        // horizontal bars\r\n        else {\r\n            if (!dataItem.hasValue(this._xValueFields)) {\r\n                return;\r\n            }\r\n            if (!$type.isNaN(percentHeight)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            t = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n            b = this.yAxis.getY(dataItem, yField, endLocation);\r\n            // in case height is set in pixels\r\n            if ($type.isNaN(percentHeight)) {\r\n                var offset = ((b - t) - pixelHeight) / 2;\r\n                b -= offset;\r\n                t += offset;\r\n            }\r\n            // in case height is set in pixels\r\n            if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                b -= offset;\r\n                t += offset;\r\n            }\r\n            var rightLocation = dataItem.locations[xField];\r\n            var leftLocation = dataItem.locations[xOpenField];\r\n            // otherwise gantt chart will start items in the middle of a cell\r\n            if (this.xAxis instanceof ValueAxis) {\r\n                if (this.dataFields[this.xField] != this.dataFields[this.xOpenField]) {\r\n                    rightLocation = 0;\r\n                    leftLocation = 0;\r\n                }\r\n            }\r\n            r = this.xAxis.getX(dataItem, xField, rightLocation);\r\n            l = this.xAxis.getX(dataItem, xOpenField, leftLocation);\r\n            // used to save location for bullets, but it's not a good approach\r\n            // dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;\r\n            var axisLenght = Math.ceil(this.xAxis.axisLength);\r\n            if ((r < 0 && l < 0) || (r > axisLenght && l > axisLenght)) {\r\n                outOfBounds = true;\r\n            }\r\n            r = this.fixHorizontalCoordinate(r);\r\n            l = this.fixHorizontalCoordinate(l);\r\n            if (Math.abs(t - b) - paddingTop - paddingBottom == 0) {\r\n                outOfBounds = true;\r\n            }\r\n        }\r\n        var w = Math.abs(r - l);\r\n        var h = Math.abs(b - t);\r\n        var x = Math.min(l, r);\r\n        var y = Math.min(t, b);\r\n        if (!outOfBounds) {\r\n            var column_1;\r\n            if (!dataItem.column) {\r\n                column_1 = this.columns.create();\r\n                //$object.forceCopyProperties(this.columns.template, column, visualProperties);\r\n                $object.copyProperties(this, column_1, visualProperties); // need this because 3d columns are not in the same container\r\n                $object.copyProperties(this.columns.template, column_1, visualProperties); // second time, no force, so that columns.template would override series properties\r\n                dataItem.addSprite(column_1);\r\n                dataItem.column = column_1;\r\n                column_1.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n                // accessibility\r\n                if (this.itemsFocusable()) {\r\n                    this.role = \"menu\";\r\n                    column_1.role = \"menuitem\";\r\n                    column_1.focusable = true;\r\n                }\r\n                else {\r\n                    this.role = \"list\";\r\n                    column_1.role = \"listitem\";\r\n                    column_1.focusable = false;\r\n                }\r\n                if (column_1.focusable) {\r\n                    column_1.events.on(\"focus\", function (ev) {\r\n                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\r\n                    }, undefined, false);\r\n                    column_1.events.on(\"blur\", function (ev) {\r\n                        column_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (column_1.hoverable) {\r\n                    column_1.events.on(\"over\", function (ev) {\r\n                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\r\n                    }, undefined, false);\r\n                    column_1.events.on(\"out\", function (ev) {\r\n                        column_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n            }\r\n            else {\r\n                column_1 = dataItem.column;\r\n            }\r\n            column_1.width = w;\r\n            column_1.height = h;\r\n            column_1.x = x;\r\n            column_1.y = y;\r\n            column_1.realX = l;\r\n            column_1.realY = t;\r\n            column_1.realWidth = r - l;\r\n            column_1.realHeight = b - t;\r\n            column_1.parent = this.columnsContainer;\r\n            column_1.virtualParent = this;\r\n            this.setColumnStates(column_1);\r\n            if (column_1.invalid) {\r\n                column_1.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n            }\r\n            column_1.__disabled = false;\r\n            //column.returnAfterTemp();\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (!rangeColumn) {\r\n                    rangeColumn = _this.columns.create();\r\n                    //$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\r\n                    $object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\r\n                    dataItem.addSprite(rangeColumn);\r\n                    dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\r\n                    rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.\t\t\t\t\t\r\n                }\r\n                rangeColumn.parent = axisRange.contents;\r\n                rangeColumn.width = w;\r\n                rangeColumn.height = h;\r\n                rangeColumn.x = x;\r\n                rangeColumn.y = y;\r\n                _this.setColumnStates(rangeColumn);\r\n                if (rangeColumn.invalid) {\r\n                    rangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n                }\r\n                rangeColumn.__disabled = false;\r\n                //rangeColumn.returnAfterTemp();\r\n            });\r\n        }\r\n        else {\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        dataItem.itemWidth = w;\r\n        dataItem.itemHeight = h;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ColumnSeries.prototype.disableUnusedColumns = function (dataItem) {\r\n        if (dataItem) {\r\n            if (dataItem.column) {\r\n                // otherwise might flicker when enabling\r\n                dataItem.column.width = 0;\r\n                dataItem.column.height = 0;\r\n                dataItem.column.__disabled = true;\r\n            }\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    // otherwise might flicker when enabling\r\n                    rangeColumn.width = 0;\r\n                    rangeColumn.height = 0;\r\n                    rangeColumn.__disabled = true;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Apply different state/coloring to columns based on the change value.\r\n     *\r\n     * @param sprite  Sprite to apply state to\r\n     * @todo Do not apply accessibility to wicks of the candlesticks\r\n     */\r\n    ColumnSeries.prototype.setColumnStates = function (sprite) {\r\n        if (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {\r\n            var dataItem = sprite.dataItem;\r\n            if (this.xAxis instanceof ValueAxis || this.yAxis instanceof ValueAxis) {\r\n                var open_1;\r\n                var value = void 0;\r\n                var change = void 0;\r\n                if (this.baseAxis == this.yAxis) {\r\n                    if (this.xOpenField && this.xField && this.xAxis instanceof ValueAxis) {\r\n                        open_1 = dataItem.getValue(this.xOpenField);\r\n                        value = dataItem.getValue(this.xField);\r\n                        change = dataItem.getValue(this.xAxis.axisFieldName + \"X\", \"previousChange\");\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.yOpenField && this.yField && this.yAxis instanceof ValueAxis) {\r\n                        open_1 = dataItem.getValue(this.yOpenField);\r\n                        value = dataItem.getValue(this.yField);\r\n                        change = dataItem.getValue(this.yAxis.axisFieldName + \"Y\", \"previousChange\");\r\n                    }\r\n                }\r\n                if (value < open_1) {\r\n                    dataItem.droppedFromOpen = true;\r\n                    sprite.defaultState.copyFrom(this._dropFromOpenState);\r\n                    sprite.setState(this._dropFromOpenState, 0);\r\n                }\r\n                else {\r\n                    dataItem.droppedFromOpen = false;\r\n                    sprite.defaultState.copyFrom(this._riseFromOpenState);\r\n                    sprite.setState(this._riseFromOpenState, 0);\r\n                }\r\n                if (change < 0) {\r\n                    dataItem.droppedFromPrevious = true;\r\n                    sprite.defaultState.copyFrom(this._dropFromPreviousState);\r\n                    sprite.setState((this._dropFromPreviousState), 0);\r\n                }\r\n                else {\r\n                    dataItem.droppedFromPrevious = false;\r\n                    sprite.defaultState.copyFrom(this._riseFromPreviousState);\r\n                    sprite.setState((this._riseFromPreviousState), 0);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSeries.prototype, \"columns\", {\r\n        /**\r\n         * A list of column elements in the series.\r\n         *\r\n         * @return Columns\r\n         */\r\n        get: function () {\r\n            if (!this._columns) {\r\n                this._columns = new ListTemplate(this.createColumnTemplate());\r\n                this._disposers.push(new ListDisposer(this._columns));\r\n                this._disposers.push(this._columns.template);\r\n            }\r\n            return this._columns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a column element to use as a template.\r\n     *\r\n     * @return Column template\r\n     */\r\n    ColumnSeries.prototype.createColumnTemplate = function () {\r\n        return new Column();\r\n    };\r\n    Object.defineProperty(ColumnSeries.prototype, \"clustered\", {\r\n        /**\r\n         * @return Clustered?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"clustered\");\r\n        },\r\n        /**\r\n         * Cluster this series columns?\r\n         *\r\n         * Setting to `false` will make columns overlap with other series.\r\n         *\r\n         * @default true\r\n         * @param value  Clustered?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"clustered\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"dropFromOpenState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._dropFromOpenState) {\r\n                this._dropFromOpenState = this.states.create(\"dropFromOpenState\");\r\n            }\r\n            return this._dropFromOpenState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when close value is lower than open value.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._dropFromOpenState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"dropFromPreviousState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._dropFromPreviousState) {\r\n                this._dropFromPreviousState = this.states.create(\"dropFromPreviousState\");\r\n            }\r\n            return this._dropFromPreviousState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when its value is lower value of a previous\r\n         * column.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._dropFromPreviousState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"riseFromOpenState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._riseFromOpenState) {\r\n                this._riseFromOpenState = this.states.create(\"riseFromOpenState\");\r\n            }\r\n            return this._riseFromOpenState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when close value is same or higher than open\r\n         * value.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._riseFromOpenState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"riseFromPreviousState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._riseFromPreviousState) {\r\n                this._riseFromPreviousState = this.states.create(\"riseFromPreviousState\");\r\n            }\r\n            return this._riseFromPreviousState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when its value is same or higher than value\r\n         * of a previous column.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._riseFromPreviousState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates value of the related legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        var _this = this;\r\n        _super.prototype.updateLegendValue.call(this, dataItem, notRange);\r\n        if (this.legendDataItem) {\r\n            var marker = this.legendDataItem.marker;\r\n            var fromOpenState_1;\r\n            var fromPreviousState_1;\r\n            if (dataItem) {\r\n                if (dataItem.droppedFromOpen) {\r\n                    fromOpenState_1 = this._dropFromOpenState;\r\n                }\r\n                else {\r\n                    fromOpenState_1 = this._riseFromOpenState;\r\n                }\r\n                if (dataItem.droppedFromPrevious) {\r\n                    fromPreviousState_1 = this._dropFromPreviousState;\r\n                }\r\n                else {\r\n                    fromPreviousState_1 = this._riseFromPreviousState;\r\n                }\r\n            }\r\n            $iter.each(marker.children.iterator(), function (child) {\r\n                if (dataItem) {\r\n                    child.setState(fromPreviousState_1);\r\n                    child.setState(fromOpenState_1);\r\n                }\r\n                else {\r\n                    // todo: think what to do here, maybe apply above states based on totals?\r\n                    child.setState(_this._riseFromPreviousState);\r\n                    child.setState(_this._riseFromOpenState);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    ColumnSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(RoundedRectangle);\r\n        column.shouldClone = false;\r\n        $object.copyProperties(this, column, visualProperties);\r\n        column.copyFrom(this.columns.template);\r\n        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n        column.width = w;\r\n        column.height = h;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = this.fill;\r\n        legendDataItem.colorOrig = this.fill;\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[ColumnSeries]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    ColumnSeries.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.columns.template.copyFrom(source.columns.template);\r\n    };\r\n    /**\r\n    * returns bullet x location\r\n    * @ignore\r\n    */\r\n    ColumnSeries.prototype.getBulletLocationX = function (bullet, field) {\r\n        if (this.baseAxis == this.xAxis) {\r\n            var bulletLocationX = bullet.locationX;\r\n            if (!$type.isNumber(bulletLocationX)) {\r\n                bulletLocationX = 0.5;\r\n            }\r\n            var endLocation = this.getEndLocation(bullet.dataItem);\r\n            var startLocation = this.getStartLocation(bullet.dataItem);\r\n            return endLocation - (endLocation - startLocation) * bulletLocationX;\r\n        }\r\n        else {\r\n            return _super.prototype.getBulletLocationX.call(this, bullet, field);\r\n        }\r\n    };\r\n    /**\r\n    * returns bullet y location\r\n    * @ignore\r\n    */\r\n    ColumnSeries.prototype.getBulletLocationY = function (bullet, field) {\r\n        if (this.baseAxis == this.yAxis) {\r\n            var bulletLocationY = bullet.locationY;\r\n            if (!$type.isNumber(bulletLocationY)) {\r\n                bulletLocationY = 0.5;\r\n            }\r\n            var endLocation = this.getEndLocation(bullet.dataItem);\r\n            var startLocation = this.getStartLocation(bullet.dataItem);\r\n            return endLocation - (endLocation - startLocation) * bulletLocationY;\r\n        }\r\n        else {\r\n            return _super.prototype.getBulletLocationY.call(this, bullet, field);\r\n        }\r\n    };\r\n    ColumnSeries.prototype.getAdjustedXLocation = function (dataItem, field) {\r\n        if (this.baseAxis == this.xAxis) {\r\n            var bulletLocationX = 0.5;\r\n            if (dataItem) {\r\n                bulletLocationX = dataItem.locations[field];\r\n            }\r\n            if (!$type.isNumber(bulletLocationX)) {\r\n                bulletLocationX = 0.5;\r\n            }\r\n            return this._endLocation - (this._endLocation - this._startLocation) * bulletLocationX;\r\n        }\r\n        else {\r\n            return _super.prototype.getAdjustedXLocation.call(this, dataItem, field);\r\n        }\r\n    };\r\n    ColumnSeries.prototype.getAdjustedYLocation = function (dataItem, field) {\r\n        if (this.baseAxis == this.yAxis) {\r\n            var bulletLocationY = 0.5;\r\n            if (dataItem) {\r\n                bulletLocationY = dataItem.locations[field];\r\n            }\r\n            if (!$type.isNumber(bulletLocationY)) {\r\n                bulletLocationY = 0.5;\r\n            }\r\n            return this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY;\r\n        }\r\n        else {\r\n            return _super.prototype.getAdjustedXLocation.call(this, dataItem, field);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.fixVerticalCoordinate = function (coordinate) {\r\n        var paddingBottom = this.columns.template.pixelPaddingBottom;\r\n        var paddingTop = this.columns.template.pixelPaddingTop;\r\n        var minY = -paddingTop;\r\n        var maxY = this.yAxis.axisLength + paddingBottom;\r\n        return $math.fitToRange(coordinate, minY, maxY);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.fixHorizontalCoordinate = function (coordinate) {\r\n        var paddingLeft = this.columns.template.pixelPaddingLeft;\r\n        var paddingRight = this.columns.template.pixelPaddingRight;\r\n        var minX = -paddingLeft;\r\n        var maxX = this.xAxis.axisLength + paddingRight;\r\n        return $math.fitToRange(coordinate, minX, maxX);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ColumnSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this.columns.clear();\r\n    };\r\n    return ColumnSeries;\r\n}(XYSeries));\r\nexport { ColumnSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries\"] = ColumnSeries;\r\nregistry.registeredClasses[\"ColumnSeriesDataItem\"] = ColumnSeriesDataItem;\r\n//# sourceMappingURL=ColumnSeries.js.map","/**\r\n * TreeMap series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport * as $object from \"../../core/utils/Object\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[TreeMapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar TreeMapSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TreeMapSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TreeMapSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"TreeMapSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TreeMapSeriesDataItem.prototype, \"parentName\", {\r\n        /**\r\n         * Data for the this particular item.\r\n         *\r\n         * @param value  Item's data\r\n         */\r\n        //public set dataContext(value: Object) {\r\n        //\tthis._dataContext = value;\r\n        //}\r\n        /**\r\n         * @return Item's data\r\n         */\r\n        /*\r\n       public get dataContext(): Object {\r\n           // It's because data of tree series is TreeMapDataItems.\r\n           if (this._dataContext) {\r\n               return (<any>this._dataContext).dataContext;\r\n           }\r\n       }*/\r\n        /**\r\n         * The name of the item's parent item.\r\n         *\r\n         * @return Parent name\r\n         */\r\n        get: function () {\r\n            var treeMapDataItem = this.treeMapDataItem;\r\n            if (treeMapDataItem && treeMapDataItem.parent) {\r\n                return treeMapDataItem.parent.name;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapSeriesDataItem.prototype, \"value\", {\r\n        /**\r\n         * Item's numeric value.\r\n         *\r\n         * @readonly\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var treeMapDataItem = this.treeMapDataItem;\r\n            if (treeMapDataItem) {\r\n                return treeMapDataItem.value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapSeriesDataItem.prototype, \"treeMapDataItem\", {\r\n        /**\r\n         * A corresponding data item from the tree map.\r\n         *\r\n         * @readonly\r\n         * @return Data item\r\n         */\r\n        get: function () {\r\n            return this._dataContext;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hides the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param toValue   A value to set to `fields` when hiding\r\n     * @param fields    A list of data fields to set value to `toValue`\r\n     */\r\n    TreeMapSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        var treeMapDataItem = this.treeMapDataItem;\r\n        if (treeMapDataItem) {\r\n            treeMapDataItem.hide(duration);\r\n        }\r\n        return _super.prototype.hide.call(this, duration, delay, toValue, fields);\r\n    };\r\n    /**\r\n     * Shows the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param fields    A list of fields to set values of\r\n     */\r\n    TreeMapSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        var treeMapDataItem = this.treeMapDataItem;\r\n        if (treeMapDataItem) {\r\n            treeMapDataItem.show(duration, delay, fields);\r\n        }\r\n        return _super.prototype.show.call(this, duration, delay, fields);\r\n    };\r\n    return TreeMapSeriesDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { TreeMapSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines Series for a TreeMap chart.\r\n *\r\n * @see {@link ITreeMapSeriesEvents} for a list of available Events\r\n * @see {@link ITreeMapSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar TreeMapSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TreeMapSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TreeMapSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"TreeMapSeries\";\r\n        _this.applyTheme();\r\n        _this.fillOpacity = 1;\r\n        _this.strokeOpacity = 1;\r\n        _this.minBulletDistance = 0;\r\n        _this.columns.template.tooltipText = \"{parentName} {name}: {value}\"; //@todo add format number?\r\n        _this.columns.template.configField = \"config\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.stroke = interfaceColors.getFor(\"background\");\r\n        _this.dataFields.openValueX = \"x0\";\r\n        _this.dataFields.valueX = \"x1\";\r\n        _this.dataFields.openValueY = \"y0\";\r\n        _this.dataFields.valueY = \"y1\";\r\n        _this.sequencedInterpolation = false;\r\n        _this.showOnInit = false;\r\n        // otherwise nodes don't stack nicely to each other\r\n        _this.columns.template.pixelPerfect = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Processes data item.\r\n     *\r\n     * @param dataItem     Data item\r\n     * @param dataContext  Raw data\r\n     * @param index        Index of the data item\r\n     */\r\n    TreeMapSeries.prototype.processDataItem = function (dataItem, dataContext) {\r\n        dataContext.seriesDataItem = dataItem; // save a reference here. dataContext is TreeMapDataItem and we need to know dataItem sometimes\r\n        _super.prototype.processDataItem.call(this, dataItem, dataContext);\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    TreeMapSeries.prototype.createDataItem = function () {\r\n        return new TreeMapSeriesDataItem();\r\n    };\r\n    /**\r\n     * Shows series.\r\n     *\r\n     * @param duration  Duration of fade in (ms)\r\n     * @return Animation\r\n     */\r\n    TreeMapSeries.prototype.show = function (duration) {\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        this.dataItems.each(function (dataItem) {\r\n            //dataItem.treeMapDataItem.setWorkingValue(\"value\", dataItem.treeMapDataItem.values.value.value);\r\n            dataItem.show(duration);\r\n        });\r\n        return _super.prototype.showReal.call(this, interpolationDuration);\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of fade out (ms)\r\n     * @return Animation\r\n     */\r\n    TreeMapSeries.prototype.hide = function (duration) {\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        var animation = _super.prototype.hideReal.call(this, interpolationDuration);\r\n        this.dataItems.each(function (dataItem) {\r\n            //dataItem.treeMapDataItem.setWorkingValue(\"value\", 0);\r\n            dataItem.hide(duration);\r\n        });\r\n        return animation;\r\n    };\r\n    /**\r\n     * Process values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    TreeMapSeries.prototype.processValues = function () {\r\n        // Just overriding so that inherited method does not kick in.\r\n    };\r\n    /**\r\n     * Returns relative start location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    TreeMapSeries.prototype.getStartLocation = function (dataItem) {\r\n        return 0;\r\n    };\r\n    /**\r\n     * Returns relative end location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    TreeMapSeries.prototype.getEndLocation = function (dataItem) {\r\n        return 1;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    TreeMapSeries.prototype.dataChangeUpdate = function () {\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    TreeMapSeries.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Add empty data fields if the they are not set, so that XYSeries\r\n            // dataField check does not result in error.\r\n            if (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n                config.dataFields = {};\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    TreeMapSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(RoundedRectangle);\r\n        column.shouldClone = false;\r\n        $object.copyProperties(this, column, visualProperties);\r\n        //column.copyFrom(<any>this.columns.template);\r\n        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n        column.width = w;\r\n        column.height = h;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = column.fill;\r\n        legendDataItem.colorOrig = column.fill;\r\n    };\r\n    return TreeMapSeries;\r\n}(ColumnSeries));\r\nexport { TreeMapSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TreeMapSeries\"] = TreeMapSeries;\r\nregistry.registeredClasses[\"TreeMapSeriesDataItem\"] = TreeMapSeriesDataItem;\r\n//# sourceMappingURL=TreeMapSeries.js.map","/**\r\n * TreeMap chart module.\r\n *\r\n * Parts of the functionality used in this module are taken from D3.js library\r\n * (https://d3js.org/)\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, XYChartDataItem } from \"./XYChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { TreeMapSeries } from \"../series/TreeMapSeries\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[TreeMap]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar TreeMapDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TreeMapDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TreeMapDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Required for squarify functionality.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.rows = [];\r\n        _this.className = \"TreeMapDataItem\";\r\n        _this.values.value = {};\r\n        _this.values.x0 = {};\r\n        _this.values.y0 = {};\r\n        _this.values.x1 = {};\r\n        _this.values.y1 = {};\r\n        _this.hasChildren.children = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a duration (ms) the Data Item should take to animate from one\r\n     * value to another.\r\n     *\r\n     * If the duration is not specified via parameter, this method will try to\r\n     * request a default duration from the related `Component`.\r\n     *\r\n     * @param duration  Default duration (ms)\r\n     * @return Duration (ms)\r\n     */\r\n    TreeMapDataItem.prototype.getDuration = function () {\r\n        return 0;\r\n    };\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var value = 0;\r\n            if (!this.children || this.children.length == 0) {\r\n                value = this.values[\"value\"].workingValue;\r\n            }\r\n            else {\r\n                $iter.each(this.children.iterator(), function (child) {\r\n                    var childValue = child.value;\r\n                    if ($type.isNumber(childValue)) {\r\n                        value += childValue;\r\n                    }\r\n                });\r\n            }\r\n            return value;\r\n            /*\r\n            let value = this.values[\"value\"].workingValue;\r\n    \r\n            if (!$type.isNumber(value)) {\r\n                value = 0;\r\n                if (this.children) {\r\n                    $iter.each(this.children.iterator(), (child) => {\r\n                        if ($type.isNumber(child.value)) {\r\n                            value += child.value;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            return value;*/\r\n        },\r\n        /**\r\n         * Numeric value of the item.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"percent\", {\r\n        get: function () {\r\n            if (this.parent) {\r\n                return this.value / this.parent.value * 100;\r\n            }\r\n            return 100;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"x0\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.values.x0.value;\r\n        },\r\n        /**\r\n         * Item's X position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @param value  X\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"x0\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"x1\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.values.x1.value;\r\n        },\r\n        /**\r\n         * Item's X position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @param value  X\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"x1\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"y0\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.values.y0.value;\r\n        },\r\n        /**\r\n         * Item's Y position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @param value  Y\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"y0\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"y1\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.values.y1.value;\r\n        },\r\n        /**\r\n         * Item's Y position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @param value  Y\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"y1\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.properties.name;\r\n        },\r\n        /**\r\n         * Item's name.\r\n         *\r\n         * @param name  Name\r\n         */\r\n        set: function (name) {\r\n            this.setProperty(\"name\", name);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"children\", {\r\n        /**\r\n         * @return Item's children\r\n         */\r\n        get: function () {\r\n            return this.properties.children;\r\n        },\r\n        /**\r\n         * A list of item's sub-children.\r\n         *\r\n         * Having children means that the TreeMap chat will automatically be\r\n         * \"drillable\". Clicking on an item with children will zoom to the item, then\r\n         * display its children.\r\n         *\r\n         * Treemap can have any level of nesting.\r\n         *\r\n         * @param children  Item's children\r\n         */\r\n        set: function (children) {\r\n            this.setProperty(\"children\", children);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"level\", {\r\n        /**\r\n         * Depth level in the treemap hierarchy.\r\n         *\r\n         * The top-level item will have level set at 0. Its children will have\r\n         * level 1, and so on.\r\n         *\r\n         * @readonly\r\n         * @return Level\r\n         */\r\n        get: function () {\r\n            if (!this.parent) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return this.parent.level + 1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            var color = this.properties.color;\r\n            if (color == undefined) {\r\n                if (this.parent) {\r\n                    color = this.parent.color;\r\n                }\r\n            }\r\n            if (color == undefined) {\r\n                if (this.component) {\r\n                    color = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        /**\r\n         * Item's color.\r\n         *\r\n         * If not set, will use parent's color, or, if that is not set either,\r\n         * automatically assigned color from chart's color set. (`chart.colors`)\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"fill\", {\r\n        /**\r\n         * @ignore\r\n         * For the legend to work properly\r\n         */\r\n        get: function () {\r\n            return this.color;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMapDataItem.prototype, \"series\", {\r\n        get: function () {\r\n            return this._series;\r\n        },\r\n        /**\r\n         * Series of children data items\r\n         * @todo: proper descrition\r\n         */\r\n        set: function (series) {\r\n            if (series != this._series) {\r\n                if (this._series) {\r\n                    this.component.series.removeValue(this._series);\r\n                    this._series.dispose();\r\n                }\r\n                this._series = series;\r\n                this._disposers.push(series);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hides the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param toValue   A value to set to `fields` when hiding\r\n     * @param fields    A list of data fields to set value to `toValue`\r\n     */\r\n    TreeMapDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        this.setWorkingValue(\"value\", 0);\r\n        if (this.children) {\r\n            this.children.each(function (child) {\r\n                child.hide(duration, delay, toValue, fields);\r\n            });\r\n        }\r\n        return _super.prototype.hide.call(this, duration, delay, toValue, fields);\r\n    };\r\n    /**\r\n     * Shows the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param fields    A list of fields to set values of\r\n     */\r\n    TreeMapDataItem.prototype.show = function (duration, delay, fields) {\r\n        this.setWorkingValue(\"value\", this.values.value.value);\r\n        if (this.children) {\r\n            this.children.each(function (child) {\r\n                child.show(duration, delay, fields);\r\n            });\r\n        }\r\n        return _super.prototype.show.call(this, duration, delay, fields);\r\n    };\r\n    return TreeMapDataItem;\r\n}(XYChartDataItem));\r\nexport { TreeMapDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a TreeMap chart.\r\n *\r\n * @see {@link ITreeMapEvents} for a list of available Events\r\n * @see {@link ITreeMapAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/} for documentation\r\n */\r\nvar TreeMap = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TreeMap, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TreeMap() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * An algorithm used to divide area into squares based on their value.\r\n         *\r\n         * Available options: squarify (default), binaryTree, slice, dice, sliceDice.\r\n         *\r\n         * ```TypeScript\r\n         * chart.layoutAlgorithm = chart.sliceDice;\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.layoutAlgorithm = chart.sliceDice;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"layoutAlgorithm\": \"sliceDice\",\r\n         *   // ...\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/#Area_division_methods} For more info and examples.\r\n         * @default squarify\r\n         */\r\n        _this.layoutAlgorithm = _this.squarify;\r\n        /**\r\n         * Is the chart zoomable?\r\n         *\r\n         * If the chart is `zoomable`, and items have sub-items, the chart will\r\n         * drill-down to sub-items when click on their parent item.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.zoomable = true;\r\n        _this.className = \"TreeMap\";\r\n        _this._usesData = true;\r\n        _this.maxLevels = 2;\r\n        _this.currentLevel = 0;\r\n        _this.hideParentColumns = false;\r\n        _this.colors = new ColorSet();\r\n        _this.sorting = \"descending\";\r\n        // create two value axes for the chart\r\n        var xAxis = _this.xAxes.push(new ValueAxis());\r\n        xAxis.title.disabled = true;\r\n        xAxis.strictMinMax = true;\r\n        var xRenderer = xAxis.renderer;\r\n        xRenderer.inside = true;\r\n        xRenderer.labels.template.disabled = true;\r\n        xRenderer.ticks.template.disabled = true;\r\n        xRenderer.grid.template.disabled = true;\r\n        xRenderer.axisFills.template.disabled = true;\r\n        xRenderer.minGridDistance = 100;\r\n        xRenderer.line.disabled = true;\r\n        xRenderer.baseGrid.disabled = true;\r\n        //xRenderer.inversed = true;\r\n        var yAxis = _this.yAxes.push(new ValueAxis());\r\n        yAxis.title.disabled = true;\r\n        yAxis.strictMinMax = true;\r\n        var yRenderer = yAxis.renderer;\r\n        yRenderer.inside = true;\r\n        yRenderer.labels.template.disabled = true;\r\n        yRenderer.ticks.template.disabled = true;\r\n        yRenderer.grid.template.disabled = true;\r\n        yRenderer.axisFills.template.disabled = true;\r\n        yRenderer.minGridDistance = 100;\r\n        yRenderer.line.disabled = true;\r\n        yRenderer.baseGrid.disabled = true;\r\n        yRenderer.inversed = true;\r\n        // shortcuts\r\n        _this.xAxis = xAxis;\r\n        _this.yAxis = yAxis;\r\n        var template = new TreeMapSeries();\r\n        _this.seriesTemplates = new DictionaryTemplate(template);\r\n        template.virtualParent = _this;\r\n        _this._disposers.push(new DictionaryDisposer(_this.seriesTemplates));\r\n        _this._disposers.push(template);\r\n        _this.zoomOutButton.events.on(\"hit\", function () {\r\n            _this.zoomToChartDataItem(_this._homeDataItem);\r\n        }, undefined, false);\r\n        _this.seriesTemplates.events.on(\"insertKey\", function (event) {\r\n            event.newValue.isTemplate = true;\r\n        }, undefined, false);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TreeMap.prototype, \"navigationBar\", {\r\n        /**\r\n         * Returns navigationBar if it is added to a chart\r\n         */\r\n        get: function () {\r\n            return this._navigationBar;\r\n        },\r\n        /**\r\n         * A navigation bar used to show \"breadcrumb\" control, indicating current\r\n         * drill-down path.\r\n         */\r\n        set: function (navigationBar) {\r\n            var _this = this;\r\n            if (this._navigationBar != navigationBar) {\r\n                this._navigationBar = navigationBar;\r\n                navigationBar.parent = this;\r\n                navigationBar.toBack();\r\n                navigationBar.links.template.events.on(\"hit\", function (event) {\r\n                    var dataItem = event.target.dataItem.dataContext;\r\n                    if (!dataItem.isDisposed()) {\r\n                        _this.zoomToChartDataItem(dataItem);\r\n                        _this.createTreeSeries(dataItem);\r\n                    }\r\n                }, undefined, true);\r\n                this._disposers.push(navigationBar);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * (Re)validates chart's data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    TreeMap.prototype.validateData = function () {\r\n        this.series.clear();\r\n        this._tempSeries = [];\r\n        _super.prototype.validateData.call(this);\r\n        if (this._homeDataItem) {\r\n            this._homeDataItem.dispose();\r\n        }\r\n        var homeDataItem = this.dataItems.template.clone(); // cant' use createDataItem here!\r\n        this._homeDataItem = homeDataItem;\r\n        $iter.each(this.dataItems.iterator(), function (dataItem) {\r\n            dataItem.parent = homeDataItem;\r\n        });\r\n        homeDataItem.children = this.dataItems;\r\n        homeDataItem.x0 = 0;\r\n        homeDataItem.y0 = 0;\r\n        homeDataItem.name = this._homeText;\r\n        var maxX = 1000;\r\n        var maxY = Math.round((maxX * this.pixelHeight / this.pixelWidth) / 10) * 10 || 1000;\r\n        homeDataItem.x1 = maxX;\r\n        homeDataItem.y1 = maxY;\r\n        this.xAxis.min = 0;\r\n        this.xAxis.max = maxX;\r\n        this.xAxis.getMinMax();\r\n        this.yAxis.min = 0;\r\n        this.yAxis.max = maxY;\r\n        this.yAxis.getMinMax();\r\n        this.layoutItems(homeDataItem);\r\n        this.createTreeSeries(homeDataItem);\r\n    };\r\n    /**\r\n     * Layouts and sizes all items according to their value and\r\n     * `layoutAlgorithm`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Parent data item\r\n     */\r\n    TreeMap.prototype.layoutItems = function (parent, sorting) {\r\n        if (parent) {\r\n            var children = parent.children;\r\n            if (!sorting) {\r\n                sorting = this.sorting;\r\n            }\r\n            if (sorting == \"ascending\") {\r\n                children.values.sort(function (a, b) {\r\n                    return a.value - b.value;\r\n                });\r\n            }\r\n            if (sorting == \"descending\") {\r\n                children.values.sort(function (a, b) {\r\n                    return b.value - a.value;\r\n                });\r\n            }\r\n            this._updateDataItemIndexes(0);\r\n            this.layoutAlgorithm(parent);\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var node = children.getIndex(i);\r\n                if (node.children) {\r\n                    this.layoutItems(node);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new treemap series.\r\n     *\r\n     * @todo Description\r\n     * @param dataItem  Data item to create series out of\r\n     */\r\n    TreeMap.prototype.createTreeSeries = function (dataItem) {\r\n        var _this = this;\r\n        this._tempSeries = [];\r\n        var navigationData = [dataItem];\r\n        // create parent series and navigation data\r\n        var parentDataItem = dataItem.parent;\r\n        while (parentDataItem != undefined) {\r\n            this.initSeries(parentDataItem);\r\n            navigationData.push(parentDataItem);\r\n            parentDataItem = parentDataItem.parent;\r\n        }\r\n        navigationData.reverse();\r\n        if (this.navigationBar) {\r\n            this.navigationBar.data = navigationData;\r\n        }\r\n        // create series and children series\r\n        this.createTreeSeriesReal(dataItem);\r\n        // add those which are not in the list\r\n        $array.each(this._tempSeries, function (series) {\r\n            if (_this.series.indexOf(series) == -1) {\r\n                _this.series.push(series);\r\n            }\r\n            series.zIndex = series.level;\r\n        });\r\n    };\r\n    /**\r\n     * [createTreeSeriesReal description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     */\r\n    TreeMap.prototype.createTreeSeriesReal = function (dataItem) {\r\n        if (dataItem.children) {\r\n            var level = dataItem.level;\r\n            if (level < this.currentLevel + this.maxLevels) {\r\n                this.initSeries(dataItem);\r\n                for (var i = 0; i < dataItem.children.length; i++) {\r\n                    var child = dataItem.children.getIndex(i);\r\n                    if (child.children) {\r\n                        this.createTreeSeriesReal(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TreeMap.prototype.setData = function (value) {\r\n        this.currentLevel = 0;\r\n        this.currentlyZoomed = undefined;\r\n        this.xAxis.start = 0;\r\n        this.xAxis.end = 1;\r\n        this.yAxis.start = 0;\r\n        this.yAxis.end = 1;\r\n        _super.prototype.setData.call(this, value);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Overriding, as tree map series are created on the fly all the time\r\n     */\r\n    TreeMap.prototype.seriesAppeared = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Initializes the treemap series.\r\n     *\r\n     * @todo Description\r\n     * @param dataItem  Chart data item\r\n     */\r\n    TreeMap.prototype.initSeries = function (dataItem) {\r\n        var _this = this;\r\n        if (!dataItem.series) {\r\n            var series = void 0;\r\n            var template = this.seriesTemplates.getKey(dataItem.level.toString());\r\n            if (template) {\r\n                series = template.clone();\r\n            }\r\n            else {\r\n                series = this.series.create();\r\n            }\r\n            // for the legend to get {value}\r\n            series.dataItem.dataContext = dataItem;\r\n            series.name = dataItem.name;\r\n            series.parentDataItem = dataItem;\r\n            dataItem.series = series;\r\n            var level = dataItem.level;\r\n            series.level = level;\r\n            var dataContext = dataItem.dataContext;\r\n            if (dataContext) {\r\n                series.config = dataContext.config;\r\n            }\r\n            this.dataUsers.removeValue(series); // series do not use data directly, that's why we remove it\r\n            series.data = dataItem.children.values;\r\n            series.fill = dataItem.color;\r\n            series.columnsContainer.hide(0);\r\n            series.bulletsContainer.hide(0);\r\n            series.columns.template.adapter.add(\"fill\", function (fill, target) {\r\n                var dataItem = target.dataItem;\r\n                if (dataItem) {\r\n                    var treeMapDataItem = dataItem.treeMapDataItem;\r\n                    if (treeMapDataItem) {\r\n                        target.fill = treeMapDataItem.color;\r\n                        target.adapter.remove(\"fill\"); //@todo: make it possible adapters applied once?\r\n                        return treeMapDataItem.color;\r\n                    }\r\n                }\r\n            });\r\n            if (this.zoomable && (dataItem.level > this.currentLevel || (dataItem.children && dataItem.children.length > 0))) {\r\n                series.columns.template.cursorOverStyle = MouseCursorStyle.pointer;\r\n                if (this.zoomable) {\r\n                    series.columns.template.events.on(\"hit\", function (event) {\r\n                        var seriesDataItem = event.target.dataItem;\r\n                        if (dataItem.level > _this.currentLevel) {\r\n                            _this.zoomToChartDataItem(seriesDataItem.treeMapDataItem.parent);\r\n                        }\r\n                        else {\r\n                            _this.zoomToSeriesDataItem(seriesDataItem);\r\n                        }\r\n                    }, this, undefined);\r\n                }\r\n            }\r\n        }\r\n        this._tempSeries.push(dataItem.series);\r\n    };\r\n    /**\r\n     * Toggles bullets so that labels that belong to current drill level are\r\n     * shown.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     */\r\n    TreeMap.prototype.toggleBullets = function (duration) {\r\n        var _this = this;\r\n        // hide all series which are not in tempSeries\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (_this._tempSeries.indexOf(series) == -1) {\r\n                //series.hideReal(duration);\r\n                series.columnsContainer.hide();\r\n                series.bulletsContainer.hide(duration);\r\n            }\r\n            else {\r\n                //series.showReal(duration);\r\n                series.columnsContainer.show();\r\n                series.bulletsContainer.show(duration);\r\n                series.dataItems.each(function (dataItem) {\r\n                    dataItem.bullets.each(function (key, bullet) {\r\n                        bullet.show();\r\n                    });\r\n                });\r\n                if (series.level < _this.currentLevel) {\r\n                    if (_this.hideParentColumns) {\r\n                        series.columnsContainer.hide();\r\n                    }\r\n                    series.bulletsContainer.hide(duration);\r\n                }\r\n                else if (series.level == _this.currentLevel) {\r\n                    if (_this.maxLevels > 1) {\r\n                        series.dataItems.each(function (dataItem) {\r\n                            if (dataItem.treeMapDataItem.children) {\r\n                                dataItem.bullets.each(function (key, bullet) {\r\n                                    bullet.hide();\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Zooms to particular item in series.\r\n     *\r\n     * @param dataItem  Data item\r\n     */\r\n    TreeMap.prototype.zoomToSeriesDataItem = function (dataItem) {\r\n        this.zoomToChartDataItem(dataItem.treeMapDataItem);\r\n    };\r\n    /**\r\n     * Zooms to particular item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    TreeMap.prototype.zoomToChartDataItem = function (dataItem) {\r\n        var _this = this;\r\n        var zoomOutButton = this.zoomOutButton;\r\n        // this is needed because if there is only one fist level, it wont' be shown\r\n        if (zoomOutButton) {\r\n            if (dataItem != this._homeDataItem) {\r\n                zoomOutButton.show();\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n        if (dataItem && dataItem.children) {\r\n            this.xAxis.zoomToValues(dataItem.x0, dataItem.x1);\r\n            this.yAxis.zoomToValues(dataItem.y0, dataItem.y1);\r\n            this.currentLevel = dataItem.level;\r\n            this.currentlyZoomed = dataItem;\r\n            this.createTreeSeries(dataItem);\r\n            var rangeChangeAnimation = this.xAxis.rangeChangeAnimation || this.yAxis.rangeChangeAnimation;\r\n            if (rangeChangeAnimation && !rangeChangeAnimation.isDisposed() && !rangeChangeAnimation.isFinished()) {\r\n                this._dataDisposers.push(rangeChangeAnimation);\r\n                rangeChangeAnimation.events.once(\"animationended\", function () {\r\n                    _this.toggleBullets();\r\n                });\r\n            }\r\n            else {\r\n                this.toggleBullets();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    TreeMap.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"TreeMap chart\");\r\n        }\r\n        //this.homeText = this.language.translate(\"Home\");\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    TreeMap.prototype.createDataItem = function () {\r\n        return new TreeMapDataItem();\r\n    };\r\n    Object.defineProperty(TreeMap.prototype, \"maxLevels\", {\r\n        /**\r\n         * @return Maximum drill-down level\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxLevels\");\r\n        },\r\n        /**\r\n         * Maximum number of levels the chart will display initially.\r\n         *\r\n         * @default 2\r\n         * @param value  Maximum drill-down level\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxLevels\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMap.prototype, \"currentLevel\", {\r\n        /**\r\n         * @return Current level\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"currentLevel\");\r\n        },\r\n        /**\r\n         * Current drill-down level the chart is at.\r\n         *\r\n         * @param value  Current level\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"currentLevel\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMap.prototype, \"hideParentColumns\", {\r\n        /**\r\n         * @return Hide?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideParentColumns\");\r\n        },\r\n        /**\r\n         * If set to `true`, columns of parent nodes will be hidden when user\r\n         * drills-down into deeper levels.\r\n         *\r\n         * @sice 4.7.4\r\n         * @default false\r\n         * @param  value  Hide?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideParentColumns\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TreeMap.prototype, \"sorting\", {\r\n        get: function () {\r\n            return this.getPropertyValue(\"sorting\");\r\n        },\r\n        /**\r\n         * Sorting direction of treemap items.\r\n         *\r\n         * Available options: \"none\", \"ascending\", and \"descending\" (default).\r\n         *\r\n         * @default \"descending\"\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"sorting\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a new series of the suitable type.\r\n     *\r\n     * @return new series\r\n     */\r\n    TreeMap.prototype.createSeries = function () {\r\n        return new TreeMapSeries();\r\n    };\r\n    Object.defineProperty(TreeMap.prototype, \"homeText\", {\r\n        /**\r\n         * @return Home text\r\n         */\r\n        get: function () {\r\n            return this._homeText;\r\n        },\r\n        /**\r\n         * A text displayed on the \"home\" button which is used to go back to level 0\r\n         * after drill into sub-items.\r\n         *\r\n         * @param value  Home text\r\n         */\r\n        set: function (value) {\r\n            this._homeText = value;\r\n            if (this._homeDataItem) {\r\n                this._homeDataItem.name = this._homeText;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    TreeMap.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Instantiate layout algorithm\r\n            if ($type.hasValue(config[\"layoutAlgorithm\"]) && $type.isString(config[\"layoutAlgorithm\"])) {\r\n                switch (config[\"layoutAlgorithm\"]) {\r\n                    case \"squarify\":\r\n                        config[\"layoutAlgorithm\"] = this.squarify;\r\n                        break;\r\n                    case \"binaryTree\":\r\n                        config[\"layoutAlgorithm\"] = this.binaryTree;\r\n                        break;\r\n                    case \"slice\":\r\n                        config[\"layoutAlgorithm\"] = this.slice;\r\n                        break;\r\n                    case \"dice\":\r\n                        config[\"layoutAlgorithm\"] = this.dice;\r\n                        break;\r\n                    case \"sliceDice\":\r\n                        config[\"layoutAlgorithm\"] = this.sliceDice;\r\n                        break;\r\n                    default:\r\n                        delete config[\"layoutAlgorithm\"];\r\n                        break;\r\n                }\r\n            }\r\n            // Set type for navigation bar\r\n            if ($type.hasValue(config.navigationBar) && !$type.hasValue(config.navigationBar.type)) {\r\n                config.navigationBar.type = \"NavigationBar\";\r\n            }\r\n            _super.prototype.processConfig.call(this, config);\r\n        }\r\n    };\r\n    /**\r\n     * Measures the size of container and informs its children of how much size\r\n     * they can occupy, by setting their relative `maxWidth` and `maxHeight`\r\n     * properties.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    TreeMap.prototype.validateLayout = function () {\r\n        _super.prototype.validateLayout.call(this);\r\n        this.layoutItems(this.currentlyZoomed);\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    TreeMap.prototype.validateDataItems = function () {\r\n        _super.prototype.validateDataItems.call(this);\r\n        this.layoutItems(this._homeDataItem);\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.validateRawData();\r\n        });\r\n        this.zoomToChartDataItem(this._homeDataItem);\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * TREEMAP LAYOUT FUNCTIONS\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * The functions below are from D3.js library (https://d3js.org/)\r\n     *\r\n     * --------------------------------------------------------------------------\r\n     * Copyright 2017 Mike Bostock\r\n     *\r\n     * Redistribution and use in source and binary forms, with or without\r\n     * modification, are permitted provided that the following conditions are met:\r\n     *\r\n     * 1. Redistributions of source code must retain the above copyright notice,\r\n     *    this list of conditions and the following disclaimer.\r\n     *\r\n     * 2. Redistributions in binary form must reproduce the above copyright\r\n     *    notice,this list of conditions and the following disclaimer in the\r\n     *    documentation and/or other materials provided with the distribution.\r\n     *\r\n     * 3. Neither the name of the copyright holder nor the names of its\r\n     *    contributors may be used to endorse or promote products derived from\r\n     *    this software without specific prior written permission.\r\n     *\r\n     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n     * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n     * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n     * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n     * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n     * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n     * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n     * POSSIBILITY OF SUCH DAMAGE.\r\n     * --------------------------------------------------------------------------\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Treemap layout algorithm: binaryTree.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.binaryTree = function (parent) {\r\n        var nodes = parent.children, i, n = nodes.length, sum, sums = new Array(n + 1);\r\n        for (sums[0] = sum = i = 0; i < n; ++i) {\r\n            sums[i + 1] = sum += nodes.getIndex(i).value;\r\n        }\r\n        partition(0, n, parent.value, parent.x0, parent.y0, parent.x1, parent.y1);\r\n        function partition(i, j, value, x0, y0, x1, y1) {\r\n            if (i >= j - 1) {\r\n                var node = nodes.getIndex(i);\r\n                node.x0 = x0;\r\n                node.y0 = y0;\r\n                node.x1 = x1;\r\n                node.y1 = y1;\r\n                return;\r\n            }\r\n            var valueOffset = sums[i], valueTarget = (value / 2) + valueOffset, k = i + 1, hi = j - 1;\r\n            while (k < hi) {\r\n                var mid = k + hi >>> 1;\r\n                if (sums[mid] < valueTarget) {\r\n                    k = mid + 1;\r\n                }\r\n                else {\r\n                    hi = mid;\r\n                }\r\n            }\r\n            if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) {\r\n                --k;\r\n            }\r\n            var valueLeft = sums[k] - valueOffset, valueRight = value - valueLeft;\r\n            if ((x1 - x0) > (y1 - y0)) {\r\n                var xk = (x0 * valueRight + x1 * valueLeft) / value;\r\n                partition(i, k, valueLeft, x0, y0, xk, y1);\r\n                partition(k, j, valueRight, xk, y0, x1, y1);\r\n            }\r\n            else {\r\n                var yk = (y0 * valueRight + y1 * valueLeft) / value;\r\n                partition(i, k, valueLeft, x0, y0, x1, yk);\r\n                partition(k, j, valueRight, x0, yk, x1, y1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Treemap layout algorithm: slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.slice = function (parent) {\r\n        var x0 = parent.x0;\r\n        var x1 = parent.x1;\r\n        var y0 = parent.y0;\r\n        var y1 = parent.y1;\r\n        var nodes = parent.children;\r\n        var node;\r\n        var i = -1;\r\n        var n = nodes.length;\r\n        var k = parent.value && (y1 - y0) / parent.value;\r\n        while (++i < n) {\r\n            node = nodes.getIndex(i);\r\n            node.x0 = x0;\r\n            node.x1 = x1;\r\n            node.y0 = y0;\r\n            y0 += node.value * k;\r\n            node.y1 = y0;\r\n        }\r\n    };\r\n    /**\r\n     * Treemap layout algorithm: dice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.dice = function (parent) {\r\n        var x0 = parent.x0;\r\n        var x1 = parent.x1;\r\n        var y0 = parent.y0;\r\n        var y1 = parent.y1;\r\n        var nodes = parent.children, node, i = -1, n = nodes.length, k = parent.value && (x1 - x0) / parent.value;\r\n        while (++i < n) {\r\n            node = nodes.getIndex(i);\r\n            node.y0 = y0;\r\n            node.y1 = y1;\r\n            node.x0 = x0;\r\n            x0 += node.value * k;\r\n            node.x1 = x0;\r\n        }\r\n    };\r\n    /**\r\n     * Treemap layout algorithm: slideDice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.sliceDice = function (parent) {\r\n        if (parent.level & 1) {\r\n            this.slice(parent);\r\n        }\r\n        else {\r\n            this.dice(parent);\r\n        }\r\n    };\r\n    /**\r\n     * Treemap layout algorithm: squarify.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param parent  Data item\r\n     */\r\n    TreeMap.prototype.squarify = function (parent) {\r\n        var ratio = (1 + Math.sqrt(5)) / 2;\r\n        var x0 = parent.x0;\r\n        var x1 = parent.x1;\r\n        var y0 = parent.y0;\r\n        var y1 = parent.y1;\r\n        var nodes = parent.children;\r\n        var nodeValue;\r\n        var i0 = 0;\r\n        var i1 = 0;\r\n        var n = nodes.length;\r\n        var dx;\r\n        var dy;\r\n        var value = parent.value;\r\n        var sumValue;\r\n        var minValue;\r\n        var maxValue;\r\n        var newRatio;\r\n        var minRatio;\r\n        var alpha;\r\n        var beta;\r\n        while (i0 < n) {\r\n            dx = x1 - x0;\r\n            dy = y1 - y0;\r\n            // Find the next non-empty node.\r\n            do {\r\n                sumValue = nodes.getIndex(i1++).value;\r\n            } while (!sumValue && i1 < n);\r\n            minValue = maxValue = sumValue;\r\n            alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\r\n            beta = sumValue * sumValue * alpha;\r\n            minRatio = Math.max(maxValue / beta, beta / minValue);\r\n            // Keep adding nodes while the aspect ratio maintains or improves.\r\n            for (; i1 < n; ++i1) {\r\n                sumValue += nodeValue = nodes.getIndex(i1).value;\r\n                if (nodeValue < minValue) {\r\n                    minValue = nodeValue;\r\n                }\r\n                if (nodeValue > maxValue) {\r\n                    maxValue = nodeValue;\r\n                }\r\n                beta = sumValue * sumValue * alpha;\r\n                newRatio = Math.max(maxValue / beta, beta / minValue);\r\n                if (newRatio > minRatio) {\r\n                    sumValue -= nodeValue;\r\n                    break;\r\n                }\r\n                minRatio = newRatio;\r\n            }\r\n            // Position and record the row orientation.\r\n            var row = this.dataItems.template.clone();\r\n            row.value = sumValue;\r\n            row.dice = dx < dy;\r\n            row.children = nodes.slice(i0, i1);\r\n            row.x0 = x0;\r\n            row.y0 = y0;\r\n            row.x1 = x1;\r\n            row.y1 = y1;\r\n            if (row.dice) {\r\n                row.y1 = value ? (y0 += (dy * sumValue) / value) : y1;\r\n                this.dice(row);\r\n            }\r\n            else {\r\n                row.x1 = value ? (x0 += (dx * sumValue) / value) : x1;\r\n                this.slice(row);\r\n            }\r\n            value -= sumValue;\r\n            i0 = i1;\r\n        }\r\n    };\r\n    TreeMap.prototype.handleSeriesAdded2 = function () {\r\n        // void\r\n    };\r\n    /**\r\n     * [handleDataItemValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    TreeMap.prototype.handleDataItemValueChange = function (dataItem, name) {\r\n        if (name == \"value\") {\r\n            this.invalidateDataItems();\r\n        }\r\n    };\r\n    TreeMap.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        if (name == \"value\") {\r\n            this.invalidateDataItems();\r\n        }\r\n    };\r\n    TreeMap.prototype.getLegendLevel = function (dataItem) {\r\n        if (!dataItem) {\r\n            return;\r\n        }\r\n        if (!dataItem.children) {\r\n            return;\r\n        }\r\n        if (dataItem.children.length > 1) {\r\n            return dataItem;\r\n        }\r\n        else if (dataItem.children.length == 1) {\r\n            return this.getLegendLevel(dataItem.children.getIndex(0));\r\n        }\r\n        else {\r\n            return dataItem;\r\n        }\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    TreeMap.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            legend.dataFields.name = \"name\";\r\n            var legendParent = this.getLegendLevel(this._homeDataItem);\r\n            if (legendParent) {\r\n                var legendData_1 = [];\r\n                legendParent.children.each(function (dataItem) {\r\n                    //if (!dataItem.hiddenInLegend) {\r\n                    legendData_1.push(dataItem);\r\n                    //}\r\n                });\r\n                legend.data = legendData_1;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    TreeMap.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this._homeDataItem = undefined;\r\n        this.series.clear();\r\n        if (this.navigationBar) {\r\n            this.navigationBar.disposeData();\r\n        }\r\n        this.xAxis.disposeData();\r\n        this.yAxis.disposeData();\r\n    };\r\n    /**\r\n     * Since this chart uses hierarchical data, we need to remove childrent\r\n     * dataField from export of non-hierarchical formats such as CSV and XSLX.\r\n     *\r\n     * @return Export\r\n     */\r\n    TreeMap.prototype.getExporting = function () {\r\n        var _this = this;\r\n        var exporting = _super.prototype.getExporting.call(this);\r\n        exporting.adapter.add(\"formatDataFields\", function (info) {\r\n            if (info.format == \"csv\" || info.format == \"xlsx\") {\r\n                if ($type.hasValue(_this.dataFields.children)) {\r\n                    delete info.dataFields[_this.dataFields.children];\r\n                }\r\n            }\r\n            return info;\r\n        });\r\n        return exporting;\r\n    };\r\n    return TreeMap;\r\n}(XYChart));\r\nexport { TreeMap };\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TreeMap\"] = TreeMap;\r\n//# sourceMappingURL=TreeMap.js.map","/**\r\n * Module, defining Axis Renderer for horizontal 3D axes.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererX } from \"../axes/AxisRendererX\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Renderer for horizontal 3D axis.\r\n *\r\n * @see {@link IAxisRendererX3DEvents} for a list of available events\r\n * @see {@link IAxisRendererX3DAdapters} for a list of available Adapters\r\n */\r\nvar AxisRendererX3D = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisRendererX3D, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererX3D() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"AxisRendererX3D\";\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererX3D.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        if (grid.element) {\r\n            var dx = this.chart.dx3D || 0;\r\n            var dy = this.chart.dy3D || 0;\r\n            var h = this.getHeight();\r\n            grid.path = $path.moveTo({ x: dx, y: dy }) + $path.lineTo({ x: dx, y: h + dy }) + $path.lineTo({ x: 0, y: h });\r\n        }\r\n        this.positionItem(grid, point);\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererX3D.prototype.updateBaseGridElement = function () {\r\n        _super.prototype.updateBaseGridElement.call(this);\r\n        var h = this.getHeight();\r\n        var dx = this.chart.dx3D || 0;\r\n        var dy = this.chart.dy3D || 0;\r\n        this.baseGrid.path = $path.moveTo({ x: dx, y: dy }) + $path.lineTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n    };\r\n    Object.defineProperty(AxisRendererX3D.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * Chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Chart\r\n         */\r\n        set: function (chart) {\r\n            if (chart) {\r\n                this._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Invoked when 3D-related settings change, like depth or angle.\r\n     *\r\n     * @param event Event\r\n     */\r\n    AxisRendererX3D.prototype.handle3DChanged = function (event) {\r\n        if (event.property == \"depth\" || event.property == \"angle\") {\r\n            this.invalidate();\r\n        }\r\n    };\r\n    return AxisRendererX3D;\r\n}(AxisRendererX));\r\nexport { AxisRendererX3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX3D\"] = AxisRendererX3D;\r\n//# sourceMappingURL=AxisRendererX3D.js.map","/**\r\n * Module, defining Axis Renderer for vertical 3D axes.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererY } from \"../axes/AxisRendererY\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Renderer for vertical 3D axis.\r\n *\r\n * @see {@link IAxisRendererY3DEvents} for a list of available events\r\n * @see {@link IAxisRendererY3DAdapters} for a list of available Adapters\r\n */\r\nvar AxisRendererY3D = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AxisRendererY3D, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRendererY3D() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"AxisRendererY3D\";\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRendererY3D.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        position = position + (endPosition - position) * grid.location;\r\n        var point = this.positionToPoint(position);\r\n        if (grid.element) {\r\n            var dx = this.chart.dx3D || 0;\r\n            var dy = this.chart.dy3D || 0;\r\n            var w = this.getWidth();\r\n            grid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: dx, y: dy }) + $path.lineTo({ x: w + dx, y: dy });\r\n        }\r\n        this.positionItem(grid, point);\r\n        this.toggleVisibility(grid, position, 0, 1);\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRendererY3D.prototype.updateBaseGridElement = function () {\r\n        _super.prototype.updateBaseGridElement.call(this);\r\n        var dx = this.chart.dx3D || 0;\r\n        var dy = this.chart.dy3D || 0;\r\n        var w = this.getWidth();\r\n        this.baseGrid.path = $path.moveTo({ x: 0, y: 0 })\r\n            + $path.lineTo({ x: w, y: 0 })\r\n            + $path.lineTo({ x: w + dx, y: dy });\r\n    };\r\n    Object.defineProperty(AxisRendererY3D.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * Chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Chart\r\n         */\r\n        set: function (chart) {\r\n            if (chart) {\r\n                this._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Invoked when 3D-related settings change, like depth or angle.\r\n     *\r\n     * @param event Event\r\n     */\r\n    AxisRendererY3D.prototype.handle3DChanged = function (event) {\r\n        if (event.property == \"depth\" || event.property == \"angle\") {\r\n            this.invalidate();\r\n        }\r\n    };\r\n    return AxisRendererY3D;\r\n}(AxisRendererY));\r\nexport { AxisRendererY3D };\r\n//# sourceMappingURL=AxisRendererY3D.js.map","/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column } from \"./Column\";\r\nimport { Rectangle3D } from \"../../core/elements/3d/Rectangle3D\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Column3D = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Column3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Column3D() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Column3D\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Column3D.prototype.createAssets = function () {\r\n        this.column3D = this.createChild(Rectangle3D);\r\n        this.column3D.shouldClone = false;\r\n        this.column3D.strokeOpacity = 0;\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.column3D;\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    Column3D.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        if (this.column3D) {\r\n            this.column3D.width = this.pixelWidth;\r\n            this.column3D.height = this.pixelHeight;\r\n            if (this.column3D.invalid) {\r\n                this.column3D.validate();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Column3D]].\r\n     *\r\n     * @param source Source Column3D\r\n     */\r\n    Column3D.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.column3D) {\r\n            this.column3D.copyFrom(source.column3D);\r\n        }\r\n    };\r\n    /**\r\n     * Sets actual `fill` property on the SVG element, including applicable color\r\n     * modifiers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Fill\r\n     */\r\n    Column3D.prototype.setFill = function (value) {\r\n        _super.prototype.setFill.call(this, value);\r\n        this.column.fill = value;\r\n    };\r\n    return Column3D;\r\n}(Column));\r\nexport { Column3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column3D\"] = Column3D;\r\n//# sourceMappingURL=Column3D.js.map","/**\r\n * 3D column series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\r\nimport { Column3D } from \"../elements/Column3D\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\nvar ColumnSeries3DDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ColumnSeries3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeries3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ColumnSeries3DDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { ColumnSeries3DDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IColumnSeries3DEvents} for a list of available Events\r\n * @see {@link IColumnSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ColumnSeries3D = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ColumnSeries3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries3D() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeries3D\";\r\n        _this.columns.template.column3D.applyOnClones = true;\r\n        _this.columns.template.hiddenState.properties.visible = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"columnsContainer\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            var chart = this.chart;\r\n            if (chart && chart.columnsContainer && chart.leftAxesContainer.layout != \"vertical\" && chart.rightAxesContainer.layout != \"vertical\" && chart.bottomAxesContainer.layout != \"horizontal\" && chart.topAxesContainer.layout != \"horizontal\") {\r\n                return chart.columnsContainer;\r\n            }\r\n            else {\r\n                return this._columnsContainer;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries3D.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        if (dataItem.column) {\r\n            dataItem.column.dx = this.dx;\r\n            dataItem.column.dy = this.dy;\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries3D.prototype.validateDataElements = function () {\r\n        _super.prototype.validateDataElements.call(this);\r\n        if (this.chart) {\r\n            this.chart.invalidateLayout();\r\n        }\r\n    };\r\n    /**\r\n     * Returns an element to use for 3D bar.\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    ColumnSeries3D.prototype.createColumnTemplate = function () {\r\n        return new Column3D();\r\n    };\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"depth\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth (height) of the slices in the series in pixels.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"depth\", value, true);\r\n            var template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?\r\n            template.column3D.depth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"angle\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Angle (0-360)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * Angle of view for the slices in series. (0-360)\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Angle (0-360)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"angle\", value);\r\n            var template = this.columns.template;\r\n            template.column3D.angle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSeries3D;\r\n}(ColumnSeries));\r\nexport { ColumnSeries3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries3D\"] = ColumnSeries3D;\r\nregistry.registeredClasses[\"ColumnSeries3DDataItem\"] = ColumnSeries3DDataItem;\r\n//# sourceMappingURL=ColumnSeries3D.js.map","/**\r\n * Module for building 3D serial charts.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, XYChartDataItem } from \"./XYChart\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { AxisRendererX3D } from \"../axes/AxisRendererX3D\";\r\nimport { AxisRendererY3D } from \"../axes/AxisRendererY3D\";\r\nimport { ColumnSeries3D } from \"../series/ColumnSeries3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[XYChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar XYChart3DDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYChart3DDataItem, _super);\r\n    function XYChart3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"XYChart3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return XYChart3DDataItem;\r\n}(XYChartDataItem));\r\nexport { XYChart3DDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a 3D XY chart.\r\n *\r\n * @see {@link IXYChart3DEvents} for a list of available Events\r\n * @see {@link IXYChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nvar XYChart3D = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYChart3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChart3D() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Type of the axis renderer to use for X axes.\r\n         */\r\n        _this._axisRendererX = AxisRendererX3D;\r\n        /**\r\n         * Type of the axis renderer to use for Y axes.\r\n         */\r\n        _this._axisRendererY = AxisRendererY3D;\r\n        _this.className = \"XYChart3D\";\r\n        // Set defaults\r\n        _this.depth = 30;\r\n        _this.angle = 30;\r\n        // Creeate container for columns\r\n        var columnsContainer = _this.seriesContainer.createChild(Container);\r\n        columnsContainer.shouldClone = false;\r\n        columnsContainer.isMeasured = false;\r\n        columnsContainer.layout = \"none\";\r\n        _this.columnsContainer = columnsContainer;\r\n        _this.columnsContainer.mask = _this.createChild(Sprite);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * This is done because for some reason IE doesn't change mask if path of a\r\n     * mask changes.\r\n     */\r\n    XYChart3D.prototype.updateSeriesMasks = function () {\r\n        _super.prototype.updateSeriesMasks.call(this);\r\n        if ($utils.isIE()) {\r\n            var columnsContainer = this.columnsContainer;\r\n            var mask = columnsContainer.mask;\r\n            columnsContainer.mask = undefined;\r\n            columnsContainer.mask = mask;\r\n        }\r\n    };\r\n    Object.defineProperty(XYChart3D.prototype, \"depth\", {\r\n        /**\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth of the 3D chart / columns in pixels.\r\n         *\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"depth\", value);\r\n            this.fixLayout();\r\n            this.invalidateDataUsers();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart3D.prototype, \"angle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * Angle the chart is viewed at.\r\n         *\r\n         * @todo Description (review)\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"angle\", value);\r\n            this.fixLayout();\r\n            this.invalidateDataUsers();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart3D.prototype, \"dx3D\", {\r\n        /**\r\n         * A calculated horizontal 3D offset (px).\r\n         *\r\n         * @readonly\r\n         * @return Offset (px)\r\n         */\r\n        get: function () {\r\n            return $math.cos(this.angle) * this.depth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChart3D.prototype, \"dy3D\", {\r\n        /**\r\n         * A calculated vertical 3D offset (px).\r\n         *\r\n         * @readonly\r\n         * @return Offset (px)\r\n         */\r\n        get: function () {\r\n            return -$math.sin(this.angle) * this.depth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * (Re)validates layout\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChart3D.prototype.validateLayout = function () {\r\n        _super.prototype.validateLayout.call(this);\r\n        this.fixColumns();\r\n    };\r\n    /**\r\n     * Updates the layout (padding and scrollbar positions) to accommodate for\r\n     * 3D depth and angle.\r\n     */\r\n    XYChart3D.prototype.fixLayout = function () {\r\n        this.chartContainer.marginTop = -this.dy3D;\r\n        this.chartContainer.paddingRight = this.dx3D;\r\n        if (this.scrollbarX) {\r\n            this.scrollbarX.dy = this.dy3D;\r\n            this.scrollbarX.dx = this.dx3D;\r\n        }\r\n        if (this.scrollbarY) {\r\n            this.scrollbarY.dy = this.dy3D;\r\n            this.scrollbarY.dx = this.dx3D;\r\n        }\r\n        this.fixColumns();\r\n        _super.prototype.fixLayout.call(this);\r\n    };\r\n    /**\r\n     * Updates column positions, offset and dimensions based on chart's angle\r\n     * and depth.\r\n     */\r\n    XYChart3D.prototype.fixColumns = function () {\r\n        var _this = this;\r\n        var count = 1;\r\n        var i = 0;\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (series instanceof ColumnSeries3D) {\r\n                if (!series.clustered && i > 0) {\r\n                    count++;\r\n                }\r\n                series.depthIndex = count - 1;\r\n                i++;\r\n            }\r\n        });\r\n        var s = 0;\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (series instanceof ColumnSeries3D) {\r\n                series.depth = _this.depth / (count);\r\n                series.angle = _this.angle;\r\n                if (series.columnsContainer == _this.columnsContainer) {\r\n                    series.dx = _this.depth / (count) * $math.cos(_this.angle) * (series.depthIndex);\r\n                    series.dy = -_this.depth / (count) * $math.sin(_this.angle) * (series.depthIndex);\r\n                }\r\n                var inversed_1 = false;\r\n                if ((series.baseAxis == series.xAxis && series.xAxis.renderer.inversed) || (series.baseAxis == series.yAxis && series.yAxis.renderer.inversed)) {\r\n                    inversed_1 = true;\r\n                }\r\n                var i_1 = 1;\r\n                series.dataItems.each(function (dataItem) {\r\n                    var column = dataItem.column;\r\n                    if (column) {\r\n                        if (inversed_1) {\r\n                            column.zIndex = 1000 * (1000 - i_1) + s - series.depthIndex * 100;\r\n                        }\r\n                        else {\r\n                            column.zIndex = 1000 * i_1 + s - series.depthIndex * 100;\r\n                        }\r\n                        i_1++;\r\n                    }\r\n                });\r\n                if (inversed_1) {\r\n                    s--;\r\n                }\r\n                else {\r\n                    s++;\r\n                }\r\n            }\r\n        });\r\n        this.maskColumns();\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYChart3D.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    config.series[i].type = config.series[i].type || \"ColumnSeries3D\";\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    XYChart3D.prototype.maskColumns = function () {\r\n        var w = this.plotContainer.pixelWidth;\r\n        var h = this.plotContainer.pixelHeight;\r\n        var dx = this.dx3D;\r\n        var dy = this.dy3D;\r\n        var path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: dx, y: dy }) + $path.lineTo({ x: w + dx, y: dy }) + $path.lineTo({ x: w + dx, y: h + dy }) + $path.lineTo({ x: w, y: h }) + $path.lineTo({ x: w, y: h }) + $path.lineTo({ x: 0, y: h }) + $path.closePath();\r\n        var columnsContainer = this.columnsContainer;\r\n        if (columnsContainer && columnsContainer.mask) {\r\n            columnsContainer.mask.path = path;\r\n        }\r\n    };\r\n    return XYChart3D;\r\n}(XYChart));\r\nexport { XYChart3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChart3D\"] = XYChart3D;\r\n//# sourceMappingURL=XYChart3D.js.map","/**\r\n * HeatLegend module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ValueAxis } from \"../../charts/axes/ValueAxis\";\r\nimport { AxisRendererX } from \"../../charts/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link IHeatLegendEvents} for a list of available events\r\n * @see {@link IHeatLegendAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar HeatLegend = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HeatLegend, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function HeatLegend() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"HeatLegend\";\r\n        _this.markerContainer = _this.createChild(Container);\r\n        _this.markerContainer.shouldClone = false;\r\n        _this.markerCount = 1;\r\n        // Create a template container and list for the a marker\r\n        var marker = new RoundedRectangle();\r\n        marker.minHeight = 20;\r\n        marker.minWidth = 20;\r\n        marker.interactionsEnabled = false;\r\n        marker.fillOpacity = 1;\r\n        marker.cornerRadius(0, 0, 0, 0);\r\n        _this.markerContainer.minHeight = 20;\r\n        _this.markerContainer.minWidth = 20;\r\n        _this.orientation = \"horizontal\";\r\n        _this.markers = new ListTemplate(marker);\r\n        _this._disposers.push(new ListDisposer(_this.markers));\r\n        _this._disposers.push(_this.markers.template);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    HeatLegend.prototype.getMinFromRules = function (property) {\r\n        var series = this.series;\r\n        if (series) {\r\n            var minValue_1;\r\n            $iter.eachContinue(series.heatRules.iterator(), function (heatRule) {\r\n                if (heatRule.property == property) {\r\n                    minValue_1 = heatRule.min;\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            return minValue_1;\r\n        }\r\n    };\r\n    HeatLegend.prototype.getMaxFromRules = function (property) {\r\n        var series = this.series;\r\n        if (series) {\r\n            var maxValue_1;\r\n            $iter.each(series.heatRules.iterator(), function (heatRule) {\r\n                if (heatRule.property == property) {\r\n                    maxValue_1 = heatRule.max;\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            return maxValue_1;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    HeatLegend.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this.valueAxis.renderer.inversed = this.reverseOrder;\r\n        var series = this.series;\r\n        var minColor = this.minColor;\r\n        var maxColor = this.maxColor;\r\n        if (!$type.hasValue(minColor)) {\r\n            minColor = toColor(this.getMinFromRules(\"fill\"));\r\n        }\r\n        if (!$type.hasValue(maxColor)) {\r\n            maxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n        }\r\n        if (series) {\r\n            var seriesFill = series.fill;\r\n            if (!$type.hasValue(minColor) && seriesFill instanceof Color) {\r\n                minColor = seriesFill;\r\n            }\r\n            if (!$type.hasValue(maxColor) && seriesFill instanceof Color) {\r\n                maxColor = seriesFill;\r\n            }\r\n        }\r\n        if (!$type.hasValue(maxColor)) {\r\n            maxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n        }\r\n        var minOpacity = $type.toNumber(this.getMinFromRules(\"fillOpacity\"));\r\n        if (!$type.isNumber(minOpacity)) {\r\n            minOpacity = 1;\r\n        }\r\n        var maxOpacity = $type.toNumber(this.getMaxFromRules(\"fillOpacity\"));\r\n        if (!$type.isNumber(maxOpacity)) {\r\n            maxOpacity = 1;\r\n        }\r\n        var minStrokeOpacity = $type.toNumber(this.getMinFromRules(\"strokeOpacity\"));\r\n        if (!$type.isNumber(minStrokeOpacity)) {\r\n            minStrokeOpacity = 1;\r\n        }\r\n        var maxStrokeOpacity = $type.toNumber(this.getMaxFromRules(\"strokeOpacity\"));\r\n        if (!$type.isNumber(maxStrokeOpacity)) {\r\n            maxStrokeOpacity = 1;\r\n        }\r\n        var minStroke = toColor(this.getMinFromRules(\"stroke\"));\r\n        var maxStroke = toColor(this.getMaxFromRules(\"stroke\"));\r\n        //if (series) {\r\n        for (var i = 0; i < this.markerCount; i++) {\r\n            var marker = this.markers.getIndex(i);\r\n            if (!marker) {\r\n                marker = this.markers.create();\r\n                marker.parent = this.markerContainer;\r\n                marker.height = percent(100);\r\n                marker.width = percent(100);\r\n            }\r\n            if (this.markerCount == 1) {\r\n                var gradient = new LinearGradient();\r\n                if (this.reverseOrder) {\r\n                    gradient.addColor(maxColor, maxOpacity);\r\n                    gradient.addColor(minColor, minOpacity);\r\n                }\r\n                else {\r\n                    gradient.addColor(minColor, minOpacity);\r\n                    gradient.addColor(maxColor, maxOpacity);\r\n                }\r\n                if (this.orientation == \"vertical\") {\r\n                    gradient.rotation = -90;\r\n                }\r\n                marker.fill = gradient;\r\n                if ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n                    var strokeGradient = new LinearGradient();\r\n                    if (this.reverseOrder) {\r\n                        strokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n                        strokeGradient.addColor(minStroke, minStrokeOpacity);\r\n                    }\r\n                    else {\r\n                        strokeGradient.addColor(minStroke, minStrokeOpacity);\r\n                        strokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n                    }\r\n                    if (this.orientation == \"vertical\") {\r\n                        strokeGradient.rotation = -90;\r\n                    }\r\n                    marker.stroke = strokeGradient;\r\n                }\r\n            }\r\n            else {\r\n                var c = i;\r\n                if (this.reverseOrder) {\r\n                    c = this.markerCount - i - 1;\r\n                }\r\n                var color = new Color($colors.interpolate(minColor.rgb, maxColor.rgb, c / this.markerCount));\r\n                marker.fill = color;\r\n                var opacity = minOpacity + (maxOpacity - minOpacity) * c / this.markerCount;\r\n                marker.fillOpacity = opacity;\r\n                if ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n                    var color_1 = new Color($colors.interpolate(minStroke.rgb, maxStroke.rgb, c / this.markerCount));\r\n                    marker.stroke = color_1;\r\n                    var opacity_1 = minStrokeOpacity + (maxStrokeOpacity - minStrokeOpacity) * c / this.markerCount;\r\n                    marker.strokeOpacity = opacity_1;\r\n                }\r\n            }\r\n        }\r\n        var renderer = this.valueAxis.renderer;\r\n        if (this.markerCount > 1) {\r\n            if (this.orientation == \"horizontal\") {\r\n                renderer.minGridDistance = this.measuredWidth / this.markerCount;\r\n            }\r\n            else {\r\n                renderer.minGridDistance = this.measuredHeight / this.markerCount;\r\n            }\r\n        }\r\n        this.valueAxis.invalidate();\r\n        for (var i = this.markerCount, len = this.markers.length; i < len; i++) {\r\n            this.markers.getIndex(i).parent = undefined;\r\n        }\r\n    };\r\n    Object.defineProperty(HeatLegend.prototype, \"minColor\", {\r\n        /**\r\n         * Returns minColor value\r\n         * @return {Color}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minColor\");\r\n        },\r\n        /**\r\n         * Min color of a heat legend. If a series is set for the legend, minColor is taken from series.\r\n         *\r\n         * @param {Color}\r\n         */\r\n        set: function (value) {\r\n            if (!(value instanceof Color)) {\r\n                value = toColor(value);\r\n            }\r\n            this.setColorProperty(\"minColor\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HeatLegend.prototype, \"maxColor\", {\r\n        /**\r\n         * Returns maxColor value\r\n         * @return {Color}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxColor\");\r\n        },\r\n        /**\r\n         * Max color of a heat legend. If a series is set for the legend, maxColor is taken from series.\r\n         *\r\n         * @param {Color}\r\n         */\r\n        set: function (value) {\r\n            if (!$type.isObject(value)) {\r\n                value = toColor(value);\r\n            }\r\n            this.setColorProperty(\"maxColor\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HeatLegend.prototype, \"markerCount\", {\r\n        /**\r\n         * Returns number of color squares (markers).\r\n         * @return {number}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"markerCount\");\r\n        },\r\n        /**\r\n         * Number of color squares (markers) in the heat legend. If only 1 marker is used, it will be filled with gradient.\r\n         *\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"markerCount\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HeatLegend.prototype, \"minValue\", {\r\n        /**\r\n         * Returns minimum value of heat legend.\r\n         * @return {number}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minValue\");\r\n        },\r\n        /**\r\n         * Minimum value of heat legend's value axis. If a series is set for the legend, min is taken from series.\r\n         *\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minValue\", value);\r\n            this.valueAxis.min = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HeatLegend.prototype, \"maxValue\", {\r\n        /**\r\n         * Returns maximum value of heat legend.\r\n         * @return {number}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxValue\");\r\n        },\r\n        /**\r\n         * Maximum value of heat legend's value axis. If a series is set for the legend, max is taken from series.\r\n         *\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxValue\", value);\r\n            this.valueAxis.max = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HeatLegend.prototype, \"orientation\", {\r\n        /**\r\n         * Returns orientation value.\r\n         *\r\n         * @return {\"horizontal\" | \"vertical\"}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n        * Heat legend orientation. Note, if you change orientation of a heat legend, you must set value axis renderer properties after that, as with orientation renderer changes.\r\n        *\r\n        * @param {\"horizontal\" | \"vertical\"}\r\n        */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"orientation\", value, true);\r\n            var markerContainer = this.markerContainer;\r\n            var valueAxis = this.valueAxis;\r\n            // HORIZONTAL\r\n            if (value == \"horizontal\") {\r\n                if (!$type.hasValue(this.width)) {\r\n                    this.width = 200;\r\n                }\r\n                this.height = undefined;\r\n                valueAxis.width = percent(100);\r\n                valueAxis.height = undefined;\r\n                valueAxis.tooltip.pointerOrientation = \"vertical\";\r\n                this.layout = \"vertical\";\r\n                markerContainer.width = percent(100);\r\n                markerContainer.height = undefined;\r\n                if (!(valueAxis.renderer instanceof AxisRendererX)) {\r\n                    valueAxis.renderer = new AxisRendererX();\r\n                }\r\n            }\r\n            // VERTICAL\r\n            else {\r\n                if (!$type.hasValue(this.height)) {\r\n                    this.height = 200;\r\n                }\r\n                this.width = undefined;\r\n                this.layout = \"horizontal\";\r\n                markerContainer.width = undefined;\r\n                markerContainer.height = percent(100);\r\n                valueAxis.height = percent(100);\r\n                valueAxis.width = undefined;\r\n                valueAxis.tooltip.pointerOrientation = \"horizontal\";\r\n                if (!(valueAxis.renderer instanceof AxisRendererY)) {\r\n                    valueAxis.renderer = new AxisRendererY();\r\n                }\r\n                valueAxis.renderer.inside = true;\r\n                valueAxis.renderer.labels.template.inside = true;\r\n                this.markerContainer.reverseOrder = true;\r\n            }\r\n            var renderer = valueAxis.renderer;\r\n            renderer.grid.template.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.labels.template.padding(2, 3, 2, 3);\r\n            renderer.minHeight = undefined;\r\n            renderer.minWidth = undefined;\r\n            this.markerContainer.layout = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HeatLegend.prototype, \"valueAxis\", {\r\n        /**\r\n         * Returns valueAxis value.\r\n         * @return {ValueAxis}\r\n         */\r\n        get: function () {\r\n            if (!this._valueAxis) {\r\n                this.valueAxis = this.createChild(ValueAxis);\r\n                this.valueAxis.shouldClone = false;\r\n            }\r\n            return this._valueAxis;\r\n        },\r\n        /**\r\n         * Sets a value axis of heat legend. Value axis for heat legend is created automatically.\r\n         * @param {ValueAxis}\r\n         */\r\n        set: function (valueAxis) {\r\n            this._valueAxis = valueAxis;\r\n            valueAxis.parent = this;\r\n            valueAxis.strictMinMax = true;\r\n            this.orientation = this.orientation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HeatLegend.prototype, \"series\", {\r\n        /**\r\n         * Returns series value.\r\n         * @return {Series}\r\n         */\r\n        get: function () {\r\n            return this._series;\r\n        },\r\n        /**\r\n         * You can set series for heat legend. It will take min, max, minColor and maxColor values from this series.\r\n         * @param series\r\n         */\r\n        set: function (series) {\r\n            var _this = this;\r\n            this._series = series;\r\n            var dataField = \"value\";\r\n            try {\r\n                var dataFieldDefined = series.heatRules.getIndex(0).dataField;\r\n                if (dataFieldDefined) {\r\n                    dataField = dataFieldDefined;\r\n                }\r\n            }\r\n            catch (err) {\r\n            }\r\n            this.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n            series.dataItem.events.on(\"calculatedvaluechanged\", function (event) {\r\n                _this.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n            }, undefined, false);\r\n            series.heatRules.events.on(\"inserted\", this.invalidate, this, false);\r\n            series.heatRules.events.on(\"removed\", this.invalidate, this, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates min/max of value axis.\r\n     * @ignore\r\n     */\r\n    HeatLegend.prototype.updateMinMax = function (min, max) {\r\n        var valueAxis = this.valueAxis;\r\n        if (!$type.isNumber(this.minValue)) {\r\n            valueAxis.min = min;\r\n            valueAxis.invalidate();\r\n        }\r\n        if (!$type.isNumber(this.maxValue)) {\r\n            valueAxis.max = max;\r\n            valueAxis.invalidate();\r\n        }\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    HeatLegend.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if ($type.hasValue(config.series) && $type.isString(config.series)) {\r\n                if ($type.isString(config.series)) {\r\n                    if (this.map.hasKey(config.series)) {\r\n                        config.series = this.map.getKey(config.series);\r\n                    }\r\n                    else {\r\n                        var seriesId_1 = config.series;\r\n                        var disposer_1 = this.map.events.on(\"insertKey\", function (ev) {\r\n                            if (ev.key == seriesId_1) {\r\n                                this.series = ev.newValue;\r\n                                disposer_1.dispose();\r\n                            }\r\n                        }, this);\r\n                        this._disposers.push(disposer_1);\r\n                        delete config.series;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return HeatLegend;\r\n}(Container));\r\nexport { HeatLegend };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"HeatLegend\"] = HeatLegend;\r\n//# sourceMappingURL=HeatLegend.js.map","/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column } from \"./Column\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Candlestick = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Candlestick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Candlestick() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Candlestick\";\r\n        _this.layout = \"none\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Candlestick.prototype.createAssets = function () {\r\n        _super.prototype.createAssets.call(this);\r\n        this.lowLine = this.createChild(Line);\r\n        this.lowLine.shouldClone = false;\r\n        this.highLine = this.createChild(Line);\r\n        this.highLine.shouldClone = false;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Candlestick]].\r\n     *\r\n     * @param source Source Candlestick\r\n     */\r\n    Candlestick.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.lowLine) {\r\n            this.lowLine.copyFrom(source.lowLine);\r\n        }\r\n        if (this.highLine) {\r\n            this.highLine.copyFrom(source.highLine);\r\n        }\r\n    };\r\n    return Candlestick;\r\n}(Column));\r\nexport { Candlestick };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;\r\n//# sourceMappingURL=Candlestick.js.map","/**\r\n * Candlestick Series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Candlestick } from \"../elements/Candlestick\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[CandlestickSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar CandlestickSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CandlestickSeriesDataItem, _super);\r\n    /**\r\n     * Defines a type of [[Component]] this data item is used for\r\n     * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n     */\r\n    //public _component!: CandlestickSeries;\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CandlestickSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.values.lowValueX = {};\r\n        _this.values.lowValueY = {};\r\n        _this.values.highValueX = {};\r\n        _this.values.highValueY = {};\r\n        _this.className = \"CandlestickSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"lowValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.lowValueX.value;\r\n        },\r\n        /**\r\n         * Low value for horizontal axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"lowValueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"lowValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.lowValueY.value;\r\n        },\r\n        /**\r\n         * Low value for vertical axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"lowValueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"highValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.highValueX.value;\r\n        },\r\n        /**\r\n         * High value for horizontal axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"highValueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"highValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.highValueY.value;\r\n        },\r\n        /**\r\n         * High value for vertical axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"highValueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"closeValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueX.value;\r\n        },\r\n        /**\r\n         * Close value for horizontal axis.\r\n         *\r\n         * This is an alias for `valueX` added for convenience only.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeriesDataItem.prototype, \"closeValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueY.value;\r\n        },\r\n        /**\r\n         * Close value for vertical axis.\r\n         *\r\n         * This is an alias for `valueX` added for convenience only.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CandlestickSeriesDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { CandlestickSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link ICandlestickSeriesEvents} for a list of available Events\r\n * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar CandlestickSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CandlestickSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CandlestickSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CandlestickSeries\";\r\n        _this.groupFields.lowValueX = \"low\";\r\n        _this.groupFields.lowValueY = \"low\";\r\n        _this.groupFields.highValueX = \"high\";\r\n        _this.groupFields.highValueY = \"high\";\r\n        _this.strokeOpacity = 1;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var positiveColor = interfaceColors.getFor(\"positive\");\r\n        var negativeColor = interfaceColors.getFor(\"negative\");\r\n        _this.dropFromOpenState.properties.fill = negativeColor;\r\n        _this.dropFromOpenState.properties.stroke = negativeColor;\r\n        _this.riseFromOpenState.properties.fill = positiveColor;\r\n        _this.riseFromOpenState.properties.stroke = positiveColor;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    CandlestickSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Candlestick Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    CandlestickSeries.prototype.createDataItem = function () {\r\n        return new CandlestickSeriesDataItem();\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    CandlestickSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        this.validateCandlestick(dataItem);\r\n    };\r\n    CandlestickSeries.prototype.validateCandlestick = function (dataItem) {\r\n        var column = dataItem.column;\r\n        if (column) {\r\n            var lowLine_1 = column.lowLine;\r\n            var highLine_1 = column.highLine;\r\n            if (this.baseAxis == this.xAxis) {\r\n                var x = column.pixelWidth / 2;\r\n                lowLine_1.x = x;\r\n                highLine_1.x = x;\r\n                var open_1 = dataItem.getWorkingValue(this.yOpenField);\r\n                var close_1 = dataItem.getWorkingValue(this.yField);\r\n                var yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n                var yClose = this.yAxis.getY(dataItem, this.yField);\r\n                var yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n                var yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n                var pixelY = column.pixelY;\r\n                lowLine_1.y1 = yLow - pixelY;\r\n                highLine_1.y1 = yHigh - pixelY;\r\n                if (open_1 < close_1) {\r\n                    lowLine_1.y2 = yOpen - pixelY;\r\n                    highLine_1.y2 = yClose - pixelY;\r\n                }\r\n                else {\r\n                    lowLine_1.y2 = yClose - pixelY;\r\n                    highLine_1.y2 = yOpen - pixelY;\r\n                }\r\n            }\r\n            if (this.baseAxis == this.yAxis) {\r\n                var y = column.pixelHeight / 2;\r\n                lowLine_1.y = y;\r\n                highLine_1.y = y;\r\n                var open_2 = dataItem.getWorkingValue(this.xOpenField);\r\n                var close_2 = dataItem.getWorkingValue(this.xField);\r\n                var xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n                var xClose = this.xAxis.getX(dataItem, this.xField);\r\n                var xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n                var xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n                var pixelX = column.pixelX;\r\n                lowLine_1.x1 = xLow - pixelX;\r\n                highLine_1.x1 = xHigh - pixelX;\r\n                if (open_2 < close_2) {\r\n                    lowLine_1.x2 = xOpen - pixelX;\r\n                    highLine_1.x2 = xClose - pixelX;\r\n                }\r\n                else {\r\n                    lowLine_1.x2 = xClose - pixelX;\r\n                    highLine_1.x2 = xOpen - pixelX;\r\n                }\r\n            }\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                // LOW LINE\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    var rangeLowLine = rangeColumn.lowLine;\r\n                    rangeLowLine.x = lowLine_1.x;\r\n                    rangeLowLine.y = lowLine_1.y;\r\n                    rangeLowLine.x1 = lowLine_1.x1;\r\n                    rangeLowLine.x2 = lowLine_1.x2;\r\n                    rangeLowLine.y1 = lowLine_1.y1;\r\n                    rangeLowLine.y2 = lowLine_1.y2;\r\n                    // HIGH LINE\r\n                    var rangehighLine = rangeColumn.highLine;\r\n                    rangehighLine.x = highLine_1.x;\r\n                    rangehighLine.y = highLine_1.y;\r\n                    rangehighLine.x1 = highLine_1.x1;\r\n                    rangehighLine.x2 = highLine_1.x2;\r\n                    rangehighLine.y1 = highLine_1.y1;\r\n                    rangehighLine.y2 = highLine_1.y2;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(CandlestickSeries.prototype, \"xLowField\", {\r\n        /**\r\n         * A data field to look for \"low\" value for horizontal axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Field name\r\n         */\r\n        get: function () {\r\n            return this._xLowField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"yLowField\", {\r\n        /**\r\n         * A data field to look for \"low\" value for vertical axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Field name\r\n         */\r\n        get: function () {\r\n            return this._yLowField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"xHighField\", {\r\n        /**\r\n         * A data field to look for \"high\" value for horizontal axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Field name\r\n         */\r\n        get: function () {\r\n            return this._xHighField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CandlestickSeries.prototype, \"yHighField\", {\r\n        /**\r\n         * A data field to look for \"high\" value for vertical axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Field name\r\n         */\r\n        get: function () {\r\n            return this._yHighField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets up which data fields to use for data access.\r\n     */\r\n    CandlestickSeries.prototype.defineFields = function () {\r\n        _super.prototype.defineFields.call(this);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (this.baseAxis == xAxis) {\r\n                var yAxisFieldName = $utils.capitalize(yAxis.axisFieldName);\r\n                this._yLowField = (\"low\" + yAxisFieldName + \"Y\");\r\n                this._yHighField = (\"high\" + yAxisFieldName + \"Y\");\r\n            }\r\n            if (this.baseAxis == yAxis) {\r\n                var xAxisFieldName = $utils.capitalize(xAxis.axisFieldName);\r\n                this._xLowField = (\"low\" + xAxisFieldName + \"X\");\r\n                this._xHighField = (\"high\" + xAxisFieldName + \"X\");\r\n            }\r\n            this.addValueField(xAxis, this._xValueFields, this._xLowField);\r\n            this.addValueField(xAxis, this._xValueFields, this._xHighField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yLowField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yHighField);\r\n        }\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    CandlestickSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(Candlestick);\r\n        column.shouldClone = false;\r\n        column.copyFrom(this.columns.template);\r\n        var cw;\r\n        var ch;\r\n        var highLine = column.lowLine;\r\n        var lowLine = column.highLine;\r\n        if (this.baseAxis == this.yAxis) {\r\n            cw = w / 3;\r\n            ch = h;\r\n            highLine.y = h / 2;\r\n            lowLine.y = h / 2;\r\n            highLine.x2 = w / 3;\r\n            lowLine.x2 = w / 3;\r\n            lowLine.x = w / 3 * 2;\r\n            column.column.x = w / 3;\r\n        }\r\n        else {\r\n            cw = w;\r\n            ch = h / 3;\r\n            highLine.x = w / 2;\r\n            lowLine.x = w / 2;\r\n            highLine.y2 = h / 3;\r\n            lowLine.y2 = h / 3;\r\n            lowLine.y = h / 3 * 2;\r\n            column.column.y = h / 3;\r\n        }\r\n        column.width = cw;\r\n        column.height = ch;\r\n        $object.copyProperties(this, marker, visualProperties);\r\n        $object.copyProperties(this.columns.template, column, visualProperties);\r\n        column.stroke = this.riseFromOpenState.properties.stroke;\r\n        column.fill = column.stroke;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = column.fill;\r\n        legendDataItem.colorOrig = column.fill;\r\n    };\r\n    /**\r\n     * Returns an element to use for Candlestick\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    CandlestickSeries.prototype.createColumnTemplate = function () {\r\n        return new Candlestick();\r\n    };\r\n    return CandlestickSeries;\r\n}(ColumnSeries));\r\nexport { CandlestickSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CandlestickSeries\"] = CandlestickSeries;\r\nregistry.registeredClasses[\"CandlestickSeriesDataItem\"] = CandlestickSeriesDataItem;\r\n//# sourceMappingURL=CandlestickSeries.js.map","/**\r\n * Module that defines everything related to building OHLCs.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Candlestick } from \"./Candlestick\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates OHLCs.\r\n *\r\n * @see {@link IOHLCEvents} for a list of available events\r\n * @see {@link IOHLCAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar OHLC = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OHLC, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function OHLC() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"OHLC\";\r\n        _this.layout = \"none\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    OHLC.prototype.createAssets = function () {\r\n        //super.createAssets();\r\n        this.openLine = this.createChild(Line);\r\n        this.openLine.shouldClone = false;\r\n        this.highLowLine = this.createChild(Line);\r\n        this.highLowLine.shouldClone = false;\r\n        this.closeLine = this.createChild(Line);\r\n        this.closeLine.shouldClone = false;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[OHLC]].\r\n     *\r\n     * @param source Source OHLC\r\n     */\r\n    OHLC.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.openLine) {\r\n            this.openLine.copyFrom(source.openLine);\r\n        }\r\n        if (this.highLowLine) {\r\n            this.highLowLine.copyFrom(source.highLowLine);\r\n        }\r\n        if (this.closeLine) {\r\n            this.closeLine.copyFrom(source.closeLine);\r\n        }\r\n    };\r\n    return OHLC;\r\n}(Candlestick));\r\nexport { OHLC };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"OHLC\"] = OHLC;\r\n//# sourceMappingURL=OHLC.js.map","/**\r\n * Candlestick Series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { CandlestickSeries, CandlestickSeriesDataItem } from \"./CandlestickSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { OHLC } from \"../elements/OHLC\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[OHLCSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar OHLCSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OHLCSeriesDataItem, _super);\r\n    /**\r\n     * Defines a type of [[Component]] this data item is used for\r\n     * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n     */\r\n    //public _component!: OHLCSeries;\r\n    /**\r\n     * Constructor\r\n     */\r\n    function OHLCSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"OHLCSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return OHLCSeriesDataItem;\r\n}(CandlestickSeriesDataItem));\r\nexport { OHLCSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link IOHLCSeriesEvents} for a list of available Events\r\n * @see {@link IOHLCSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar OHLCSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OHLCSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function OHLCSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"OHLCSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    OHLCSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"OHLC Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    OHLCSeries.prototype.createDataItem = function () {\r\n        return new OHLCSeriesDataItem();\r\n    };\r\n    OHLCSeries.prototype.validateCandlestick = function (dataItem) {\r\n        var column = dataItem.column;\r\n        if (column) {\r\n            var openLine_1 = column.openLine;\r\n            var highLowLine_1 = column.highLowLine;\r\n            var closeLine_1 = column.closeLine;\r\n            if (this.baseAxis == this.xAxis) {\r\n                var x = column.pixelWidth / 2;\r\n                highLowLine_1.x = x;\r\n                // TODO can these be removed ?\r\n                dataItem.getWorkingValue(this.yOpenField);\r\n                dataItem.getWorkingValue(this.yField);\r\n                var yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n                var yClose = this.yAxis.getY(dataItem, this.yField);\r\n                var yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n                var yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n                var pixelY = column.pixelY;\r\n                openLine_1.y1 = yOpen - pixelY;\r\n                openLine_1.y2 = yOpen - pixelY;\r\n                openLine_1.x1 = 0;\r\n                openLine_1.x2 = x;\r\n                closeLine_1.y1 = yClose - pixelY;\r\n                closeLine_1.y2 = yClose - pixelY;\r\n                closeLine_1.x1 = x;\r\n                closeLine_1.x2 = 2 * x;\r\n                highLowLine_1.y1 = yHigh - pixelY;\r\n                highLowLine_1.y2 = yLow - pixelY;\r\n            }\r\n            if (this.baseAxis == this.yAxis) {\r\n                var y = column.pixelHeight / 2;\r\n                highLowLine_1.y = y;\r\n                // TODO can these be removed ?\r\n                dataItem.getWorkingValue(this.xOpenField);\r\n                dataItem.getWorkingValue(this.xField);\r\n                var xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n                var xClose = this.xAxis.getX(dataItem, this.xField);\r\n                var xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n                var xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n                var pixelX = column.pixelX;\r\n                openLine_1.x1 = xOpen - pixelX;\r\n                openLine_1.x2 = xOpen - pixelX;\r\n                openLine_1.y1 = y;\r\n                openLine_1.y2 = 2 * y;\r\n                closeLine_1.x1 = xClose - pixelX;\r\n                closeLine_1.x2 = xClose - pixelX;\r\n                closeLine_1.y1 = 0;\r\n                closeLine_1.y2 = y;\r\n                highLowLine_1.x1 = xHigh - pixelX;\r\n                highLowLine_1.x2 = xLow - pixelX;\r\n            }\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    var rangeOpenLine = rangeColumn.openLine;\r\n                    rangeOpenLine.x = openLine_1.x;\r\n                    rangeOpenLine.y = openLine_1.y;\r\n                    rangeOpenLine.x1 = openLine_1.x1;\r\n                    rangeOpenLine.x2 = openLine_1.x2;\r\n                    rangeOpenLine.y1 = openLine_1.y1;\r\n                    rangeOpenLine.y2 = openLine_1.y2;\r\n                    var rangeCloseLine = rangeColumn.closeLine;\r\n                    rangeCloseLine.x = closeLine_1.x;\r\n                    rangeCloseLine.y = closeLine_1.y;\r\n                    rangeCloseLine.x1 = closeLine_1.x1;\r\n                    rangeCloseLine.x2 = closeLine_1.x2;\r\n                    rangeCloseLine.y1 = closeLine_1.y1;\r\n                    rangeCloseLine.y2 = closeLine_1.y2;\r\n                    var rangeHighLowLine = rangeColumn.highLowLine;\r\n                    rangeHighLowLine.x = highLowLine_1.x;\r\n                    rangeHighLowLine.y = highLowLine_1.y;\r\n                    rangeHighLowLine.x1 = highLowLine_1.x1;\r\n                    rangeHighLowLine.x2 = highLowLine_1.x2;\r\n                    rangeHighLowLine.y1 = highLowLine_1.y1;\r\n                    rangeHighLowLine.y2 = highLowLine_1.y2;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    OHLCSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(OHLC);\r\n        column.shouldClone = false;\r\n        column.copyFrom(this.columns.template);\r\n        var cw;\r\n        var ch;\r\n        var openLine = column.openLine;\r\n        var closeLine = column.closeLine;\r\n        var highLowLine = column.highLowLine;\r\n        if (this.baseAxis == this.yAxis) {\r\n            cw = w / 3;\r\n            ch = h;\r\n            highLowLine.y = h / 2;\r\n            highLowLine.x2 = w;\r\n            openLine.x = w / 3 * 2;\r\n            openLine.y2 = h / 2;\r\n            closeLine.x = w / 3;\r\n            closeLine.y2 = h;\r\n            closeLine.y1 = h / 2;\r\n        }\r\n        else {\r\n            cw = w;\r\n            ch = h / 3;\r\n            highLowLine.x = w / 2;\r\n            highLowLine.y2 = h;\r\n            openLine.y = h / 3 * 2;\r\n            openLine.x2 = w / 2;\r\n            closeLine.y = h / 3;\r\n            closeLine.x2 = w;\r\n            closeLine.x1 = w / 2;\r\n        }\r\n        column.width = cw;\r\n        column.height = ch;\r\n        $object.copyProperties(this, marker, visualProperties);\r\n        $object.copyProperties(this.columns.template, column, visualProperties);\r\n        column.stroke = this.riseFromOpenState.properties.stroke;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = column.stroke;\r\n        legendDataItem.colorOrig = column.stroke;\r\n    };\r\n    /**\r\n     * Returns an element to use for Candlestick\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    OHLCSeries.prototype.createColumnTemplate = function () {\r\n        return new OHLC();\r\n    };\r\n    return OHLCSeries;\r\n}(CandlestickSeries));\r\nexport { OHLCSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"OHLCSeries\"] = OHLCSeries;\r\nregistry.registeredClasses[\"OHLCSeriesDataItem\"] = OHLCSeriesDataItem;\r\n//# sourceMappingURL=OHLCSeries.js.map","/**\r\n * Line series segment module.\r\n * @todo Add description about what this is\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { LineSeriesSegment } from \"./LineSeriesSegment\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a line series segment.\r\n *\r\n * A line segment can be used to apply different properties to a part of the\r\n * line series, between two data points.\r\n *\r\n * @see {@link IStepLineSeriesSegmentEvents} for a list of available events\r\n * @see {@link IStepLineSeriesSegmentAdapters} for a list of available Adapters\r\n * @todo Example\r\n */\r\nvar StepLineSeriesSegment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(StepLineSeriesSegment, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function StepLineSeriesSegment() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"StepLineSeriesSegment\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the series segment.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param points       Points to connect\r\n     * @param closePoints  ?\r\n     * @param smoothnessX  Horizontal bezier setting (?)\r\n     * @param smoothnessY  Vertical bezier setting (?)\r\n     */\r\n    StepLineSeriesSegment.prototype.drawSegment = function (points, closePoints, smoothnessX, smoothnessY, noRisers, vertical) {\r\n        if (points.length > 0 && closePoints.length > 0) {\r\n            if (noRisers) {\r\n                var path = $path.moveTo(points[0]);\r\n                if (points.length > 0) {\r\n                    for (var i = 1; i < points.length; i++) {\r\n                        var point = points[i];\r\n                        if (i / 2 == Math.round(i / 2)) {\r\n                            path += $path.moveTo(point);\r\n                        }\r\n                        else {\r\n                            path += $path.lineTo(point);\r\n                        }\r\n                    }\r\n                }\r\n                this.strokeSprite.path = path;\r\n                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n                    path = $path.moveTo(points[0]) + $path.polyline(points);\r\n                    path += $path.lineTo(closePoints[0]) + $path.polyline(closePoints);\r\n                    path += $path.lineTo(points[0]);\r\n                    path += $path.closePath();\r\n                    this.fillSprite.path = path;\r\n                }\r\n                else {\r\n                }\r\n            }\r\n            else {\r\n                var path = $path.moveTo(points[0]) + $path.polyline(points);\r\n                this.strokeSprite.path = path;\r\n                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n                    path += $path.lineTo(closePoints[0]) + $path.polyline(closePoints);\r\n                    path += $path.lineTo(points[0]);\r\n                    path += $path.closePath();\r\n                    this.fillSprite.path = path;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return StepLineSeriesSegment;\r\n}(LineSeriesSegment));\r\nexport { StepLineSeriesSegment };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"StepLineSeriesSegment\"] = StepLineSeriesSegment;\r\n//# sourceMappingURL=StepLineSeriesSegment.js.map","/**\r\n * Step line series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { LineSeries, LineSeriesDataItem } from \"./LineSeries\";\r\nimport { StepLineSeriesSegment } from \"./StepLineSeriesSegment\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[StepLineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar StepLineSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(StepLineSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function StepLineSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"StepLineSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return StepLineSeriesDataItem;\r\n}(LineSeriesDataItem));\r\nexport { StepLineSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a step line graph.\r\n *\r\n * @see {@link IStepLineSeriesEvents} for a list of available Events\r\n * @see {@link IStepLineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar StepLineSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(StepLineSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function StepLineSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"StepLineSeries\";\r\n        _this.applyTheme();\r\n        _this.startLocation = 0;\r\n        _this.endLocation = 1;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    StepLineSeries.prototype.createDataItem = function () {\r\n        return new StepLineSeriesDataItem();\r\n    };\r\n    /**\r\n     * [addPoints description]\r\n     *\r\n     * @todo Description\r\n     * @param points     [description]\r\n     * @param dataItem   [description]\r\n     * @param xField     [description]\r\n     * @param yField     [description]\r\n     * @param backwards  [description]\r\n     */\r\n    StepLineSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {\r\n        var startLocationX;\r\n        var endLocationX;\r\n        var startLocationY;\r\n        var endLocationY;\r\n        if (this.baseAxis == this.xAxis) {\r\n            startLocationX = this.startLocation;\r\n            endLocationX = this.endLocation;\r\n            startLocationY = this.getAdjustedXLocation(dataItem, this.yOpenField);\r\n            endLocationY = this.getAdjustedXLocation(dataItem, this.yField);\r\n        }\r\n        if (this.baseAxis == this.yAxis) {\r\n            startLocationY = this.startLocation;\r\n            endLocationY = this.endLocation;\r\n            startLocationX = this.getAdjustedXLocation(dataItem, this.xOpenField);\r\n            endLocationX = this.getAdjustedXLocation(dataItem, this.xField);\r\n        }\r\n        var x0 = this.xAxis.getX(dataItem, xField, startLocationX);\r\n        var y0 = this.yAxis.getY(dataItem, yField, startLocationY);\r\n        var x1 = this.xAxis.getX(dataItem, xField, endLocationX);\r\n        var y1 = this.yAxis.getY(dataItem, yField, endLocationY);\r\n        x0 = $math.fitToRange(x0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n        y0 = $math.fitToRange(y0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n        x1 = $math.fitToRange(x1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n        y1 = $math.fitToRange(y1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n        // this might make an impression that points are duplicated, and they indeed are, but this is needed to handle gaps in data\r\n        if (!this.noRisers) {\r\n            if (points.length > 1) {\r\n                var prevPoint = points[points.length - 1];\r\n                if (this.baseAxis == this.xAxis) {\r\n                    if (backwards) {\r\n                        points.push({ x: prevPoint.x, y: y1 });\r\n                    }\r\n                    else {\r\n                        points.push({ x: x0, y: prevPoint.y });\r\n                    }\r\n                }\r\n                if (this.baseAxis == this.yAxis) {\r\n                    if (backwards) {\r\n                        points.push({ x: x1, y: prevPoint.y });\r\n                    }\r\n                    else {\r\n                        points.push({ x: prevPoint.x, y: y0 });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var point0 = { x: x0, y: y0 };\r\n        var point1 = { x: x1, y: y1 };\r\n        if (backwards) {\r\n            points.push(point1, point0);\r\n        }\r\n        else {\r\n            points.push(point0, point1);\r\n        }\r\n    };\r\n    /**\r\n     * Draws the line segment.\r\n     *\r\n     * @param segment     Segment\r\n     * @param points      Segment points\r\n     * @param closePoints Segment close points\r\n     */\r\n    StepLineSeries.prototype.drawSegment = function (segment, points, closePoints) {\r\n        var vertical = false;\r\n        if (this.yAxis == this.baseAxis) {\r\n            vertical = true;\r\n        }\r\n        segment.drawSegment(points, closePoints, this.tensionX, this.tensionY, this.noRisers, vertical);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    StepLineSeries.prototype.createSegment = function () {\r\n        return new StepLineSeriesSegment();\r\n    };\r\n    Object.defineProperty(StepLineSeries.prototype, \"noRisers\", {\r\n        /**\r\n         * @return No risers\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"noRisers\");\r\n        },\r\n        /**\r\n         * Specifies if step line series should draw only horizontal (or only\r\n         * vertical, depending on base axis) lines, instead of connecting them with\r\n         * vertical (or horizontal) lines.\r\n         *\r\n         * @default false\r\n         * @param value  No risers\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"noRisers\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StepLineSeries.prototype, \"startLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startLocation\");\r\n        },\r\n        /**\r\n         * start location of the step\r\n         *\r\n         * @param value Location (0-1)\r\n         * @default 0\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StepLineSeries.prototype, \"endLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endLocation\");\r\n        },\r\n        /**\r\n         * Step end location.\r\n         *\r\n         * @param value Location (0-1)\r\n         * #default 1\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return StepLineSeries;\r\n}(LineSeries));\r\nexport { StepLineSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"StepLineSeries\"] = StepLineSeries;\r\nregistry.registeredClasses[\"StepLineSeriesDataItem\"] = StepLineSeriesDataItem;\r\n//# sourceMappingURL=StepLineSeries.js.map","/**\r\n * Module that defines everything related to building RadarColumns.\r\n * It is a container which has radarColumn element which is a Slice.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column } from \"./Column\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates RadarColumns.\r\n *\r\n * @see {@link IRadarColumnEvents} for a list of available events\r\n * @see {@link IRadarColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar RadarColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadarColumn, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarColumn() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarColumn\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.createAssets = function () {\r\n        this.radarColumn = this.createChild(Slice);\r\n        this.radarColumn.shouldClone = false;\r\n        this.radarColumn.strokeOpacity = undefined;\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.radarColumn;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[RadarColumn]].\r\n     *\r\n     * @param source Source RadarColumn\r\n     */\r\n    RadarColumn.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.radarColumn) {\r\n            this.radarColumn.copyFrom(source.radarColumn);\r\n        }\r\n    };\r\n    /**\r\n     * X coordinate for the slice tooltip.\r\n     *\r\n     * @return X\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.getTooltipX = function () {\r\n        var value = this.getPropertyValue(\"tooltipX\");\r\n        if (!$type.isNumber(value)) {\r\n            return this.radarColumn.getTooltipX();\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Y coordinate for the slice tooltip.\r\n     *\r\n     * @return Y\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.getTooltipY = function () {\r\n        var value = this.getPropertyValue(\"tooltipX\");\r\n        if (!$type.isNumber(value)) {\r\n            return this.radarColumn.getTooltipY();\r\n        }\r\n        return value;\r\n    };\r\n    return RadarColumn;\r\n}(Column));\r\nexport { RadarColumn };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarColumn\"] = RadarColumn;\r\n//# sourceMappingURL=RadarColumn.js.map","/**\r\n * Radar column series module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { RadarColumn } from \"../elements/RadarColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { Percent } from \"../../core/utils/Percent\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[RadarColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar RadarColumnSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadarColumnSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarColumnSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return RadarColumnSeriesDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { RadarColumnSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IRadarColumnSeriesEvents} for a list of available Events\r\n * @see {@link IRadarColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar RadarColumnSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadarColumnSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarColumnSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarColumnSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates and returns a RadarColumn element to use as column in radar chart.\r\n     *\r\n     * @return RadarColumn.\r\n     */\r\n    RadarColumnSeries.prototype.createColumnTemplate = function () {\r\n        return new RadarColumn();\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarColumnSeries.prototype.validate = function () {\r\n        // so that radius would be updated\r\n        if (this.chart.invalid) {\r\n            this.chart.validate();\r\n        }\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    RadarColumnSeries.prototype.disableUnusedColumns = function (dataItem) {\r\n        if (dataItem) {\r\n            if (dataItem.column) {\r\n                dataItem.column.__disabled = true;\r\n            }\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    rangeColumn.__disabled = true;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    RadarColumnSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        var _this = this;\r\n        var startAngle = this.chart.startAngle;\r\n        var endAngle = this.chart.endAngle;\r\n        var yField = this.yField;\r\n        var yOpenField = this.yOpenField;\r\n        var xField = this.xField;\r\n        var xOpenField = this.xOpenField;\r\n        var lAngle;\r\n        var rAngle;\r\n        var tRadius;\r\n        var bRadius;\r\n        var startLocation = this.getStartLocation(dataItem);\r\n        var endLocation = this.getEndLocation(dataItem);\r\n        var cellAngle = (endAngle - startAngle) / (this.dataItems.length * (this.end - this.start));\r\n        var radarColumn = dataItem.column;\r\n        if (!radarColumn) {\r\n            radarColumn = this.columns.create();\r\n            dataItem.column = radarColumn;\r\n            $object.forceCopyProperties(this.columns.template, radarColumn, visualProperties);\r\n            dataItem.addSprite(radarColumn);\r\n            radarColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n            this.setColumnStates(radarColumn);\r\n        }\r\n        var width = radarColumn.width;\r\n        var percentWidth = 100;\r\n        if (width instanceof Percent) {\r\n            percentWidth = width.percent;\r\n        }\r\n        var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n        startLocation += offset;\r\n        endLocation -= offset;\r\n        if (this.baseAxis == this.xAxis) {\r\n            tRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yField, dataItem.locations[yField], \"valueY\"), y: this.yAxis.getY(dataItem, yField, dataItem.locations[yField], \"valueY\") });\r\n            bRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yOpenField, dataItem.locations[yOpenField], \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, dataItem.locations[yOpenField], \"valueY\") });\r\n            lAngle = this.xAxis.getAngle(dataItem, xOpenField, startLocation, \"valueX\");\r\n            rAngle = this.xAxis.getAngle(dataItem, xField, endLocation, \"valueX\");\r\n            startAngle = startAngle + startLocation * cellAngle;\r\n            endAngle = endAngle - (1 - endLocation) * cellAngle;\r\n        }\r\n        else {\r\n            tRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yField, startLocation, \"valueY\"), y: this.yAxis.getY(dataItem, yField, startLocation, \"valueY\") });\r\n            bRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yOpenField, endLocation, \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, endLocation, \"valueY\") });\r\n            lAngle = this.xAxis.getAngle(dataItem, xField, dataItem.locations[xField], \"valueX\");\r\n            rAngle = this.xAxis.getAngle(dataItem, xOpenField, dataItem.locations[xOpenField], \"valueX\");\r\n        }\r\n        if (rAngle < lAngle) {\r\n            var temp = rAngle;\r\n            rAngle = lAngle;\r\n            lAngle = temp;\r\n        }\r\n        lAngle = $math.fitToRange(lAngle, startAngle, endAngle);\r\n        rAngle = $math.fitToRange(rAngle, startAngle, endAngle);\r\n        var slice = radarColumn.radarColumn;\r\n        slice.startAngle = lAngle;\r\n        var arc = rAngle - lAngle;\r\n        if (arc > 0) {\r\n            slice.arc = arc;\r\n            slice.radius = tRadius;\r\n            slice.innerRadius = bRadius;\r\n            radarColumn.__disabled = false;\r\n            radarColumn.parent = this.columnsContainer;\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (!rangeColumn) {\r\n                    rangeColumn = _this.columns.create();\r\n                    $object.forceCopyProperties(_this.columns.template, rangeColumn, visualProperties);\r\n                    $object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\r\n                    if (rangeColumn.dataItem) {\r\n                        $array.remove(rangeColumn.dataItem.sprites, rangeColumn);\r\n                    }\r\n                    dataItem.addSprite(rangeColumn);\r\n                    rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.\t\t\t\t\t\r\n                    _this.setColumnStates(rangeColumn);\r\n                    dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\r\n                }\r\n                var slice = rangeColumn.radarColumn;\r\n                slice.startAngle = lAngle;\r\n                slice.arc = arc;\r\n                slice.radius = tRadius;\r\n                slice.innerRadius = bRadius;\r\n                if (slice.invalid) {\r\n                    slice.paper = _this.paper;\r\n                    slice.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n                }\r\n                rangeColumn.__disabled = false;\r\n                rangeColumn.parent = axisRange.contents;\r\n            });\r\n        }\r\n        else {\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n     *\r\n     * @param    dataItem   Data item\r\n     * @param    xKey       Name of X data field\r\n     * @param    yKey       Name of Y data field\r\n     * @param    locationX  X location\r\n     * @param    locationY  Y location\r\n     * @param    stackKeyX  ?\r\n     * @param    stackKeyY  ?\r\n     * @returns             Coordinates\r\n     */\r\n    RadarColumnSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\r\n        if (!stackKeyX) {\r\n            stackKeyX = \"valueX\";\r\n        }\r\n        if (!stackKeyY) {\r\n            stackKeyY = \"valueY\";\r\n        }\r\n        var x = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);\r\n        var y = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);\r\n        var radius = $math.getDistance({ x: x, y: y });\r\n        // hack to be able to determine angle later\r\n        if (radius == 0) {\r\n            radius = 0.00001;\r\n        }\r\n        var angle = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);\r\n        return { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n    };\r\n    /**\r\n     * Returns an SVG path to be used as a mask for the series.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    RadarColumnSeries.prototype.getMaskPath = function () {\r\n        var renderer = this.yAxis.renderer;\r\n        return $path.arc(renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);\r\n    };\r\n    RadarColumnSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end) {\r\n            bullet.visible = false;\r\n        }\r\n        bullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));\r\n    };\r\n    RadarColumnSeries.prototype.setXAxis = function (axis) {\r\n        _super.prototype.setXAxis.call(this, axis);\r\n        this.updateRendererRefs();\r\n    };\r\n    RadarColumnSeries.prototype.setYAxis = function (axis) {\r\n        _super.prototype.setYAxis.call(this, axis);\r\n        this.updateRendererRefs();\r\n    };\r\n    RadarColumnSeries.prototype.updateRendererRefs = function () {\r\n        var rendererX = this.xAxis.renderer;\r\n        var rendererY = this.yAxis.renderer;\r\n        rendererX.axisRendererY = rendererY;\r\n    };\r\n    return RadarColumnSeries;\r\n}(ColumnSeries));\r\nexport { RadarColumnSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarColumnSeries\"] = RadarColumnSeries;\r\nregistry.registeredClasses[\"RadarColumnSeriesDataItem\"] = RadarColumnSeriesDataItem;\r\n//# sourceMappingURL=RadarColumnSeries.js.map","/**\r\n * Module that defines everything related to building Funnel slices.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to create [[FunnelSlice]] elements.\r\n *\r\n * @see {@link IFunnelSliceEvents} for a list of available events\r\n * @see {@link IFunnelSliceAdapters} for a list of available adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar FunnelSlice = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FunnelSlice, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSlice() {\r\n        var _this = _super.call(this) || this;\r\n        _this.slice = _this.createChild(Sprite);\r\n        _this.slice.shouldClone = false;\r\n        _this.slice.setElement(_this.paper.add(\"path\"));\r\n        _this.slice.isMeasured = false;\r\n        _this.orientation = \"vertical\";\r\n        _this.bottomWidth = percent(100);\r\n        _this.topWidth = percent(100);\r\n        _this.isMeasured = false;\r\n        _this.width = 10;\r\n        _this.height = 10;\r\n        _this.expandDistance = 0;\r\n        _this.className = \"FunnelSlice\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     */\r\n    FunnelSlice.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var pt = this.pixelPaddingTop;\r\n        var pb = this.pixelPaddingBottom;\r\n        var pr = this.pixelPaddingRight;\r\n        var pl = this.pixelPaddingLeft;\r\n        var w = this.pixelWidth - pr - pl;\r\n        var h = this.pixelHeight - pt - pb;\r\n        var ed = this.expandDistance;\r\n        var path = \"\";\r\n        if (this.orientation == \"vertical\") {\r\n            var tw = $utils.relativeToValue(this.topWidth, w);\r\n            var bw = $utils.relativeToValue(this.bottomWidth, w);\r\n            var tl = { x: (w - tw) / 2 + pl, y: pt };\r\n            var tr = { x: (w + tw) / 2 + pl, y: pt };\r\n            var br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n            var bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n            var cpr = { x: tr.x + (br.x - tr.x) / 2 + ed * h, y: tr.y + 0.5 * h };\r\n            var cpl = { x: tl.x + (bl.x - tl.x) / 2 - ed * h, y: tl.y + 0.5 * h };\r\n            var qp1 = $path.lineTo(br);\r\n            var qp2 = \"\";\r\n            if (ed != 0) {\r\n                qp1 = $path.quadraticCurveTo(br, cpr);\r\n                qp2 = $path.quadraticCurveTo(tl, cpl);\r\n            }\r\n            path = $path.moveTo(tl) + $path.lineTo(tr) + qp1 + $path.lineTo(bl) + qp2;\r\n            this.tickPoint = { x: tr.x + (br.x - tr.x) / 2, y: tr.y + (br.y - tr.y) / 2 };\r\n        }\r\n        else {\r\n            var tw = $utils.relativeToValue(this.topWidth, h);\r\n            var bw = $utils.relativeToValue(this.bottomWidth, h);\r\n            var tt = { x: pl, y: (h - tw) / 2 + pt };\r\n            var tb = { x: pl, y: (h + tw) / 2 + pt };\r\n            var bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n            var bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n            var cpr = { y: tt.y + (bt.y - tt.y) / 2 - ed * w, x: tt.x + 0.5 * w };\r\n            var cpl = { y: tb.y + (bb.y - tb.y) / 2 + ed * w, x: tb.x + 0.5 * w };\r\n            var qp1 = $path.lineTo(bt);\r\n            var qp2 = \"\";\r\n            if (ed != 0) {\r\n                qp1 = $path.quadraticCurveTo(bt, cpr);\r\n                qp2 = $path.quadraticCurveTo(tb, cpl);\r\n            }\r\n            path = $path.moveTo(tb) + $path.lineTo(tt) + qp1 + $path.lineTo(bb) + qp2;\r\n            this.tickPoint = { y: tb.y + (bb.y - tb.y) / 2, x: tb.x + (bb.x - tb.x) / 2 };\r\n        }\r\n        this.slice.path = path;\r\n        this.invalidateLayout();\r\n    };\r\n    FunnelSlice.prototype.getPoint = function (locationX, locationY) {\r\n        var pt = this.pixelPaddingTop;\r\n        var pb = this.pixelPaddingBottom;\r\n        var pr = this.pixelPaddingRight;\r\n        var pl = this.pixelPaddingLeft;\r\n        var w = this.pixelWidth - pr - pl;\r\n        var h = this.pixelHeight - pt - pb;\r\n        if (this.orientation == \"vertical\") {\r\n            var tw = $utils.relativeToValue(this.topWidth, w);\r\n            var bw = $utils.relativeToValue(this.bottomWidth, w);\r\n            var tl = { x: (w - tw) / 2 + pl, y: pt };\r\n            var tr = { x: (w + tw) / 2 + pl, y: pt };\r\n            var br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n            var bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n            var mlx = tl.x + (bl.x - tl.x) * locationY;\r\n            var mrx = tr.x + (br.x - tr.x) * locationY;\r\n            return { x: mlx + (mrx - mlx) * locationX, y: tr.y + (br.y - tr.y) * locationY };\r\n        }\r\n        else {\r\n            var tw = $utils.relativeToValue(this.topWidth, h);\r\n            var bw = $utils.relativeToValue(this.bottomWidth, h);\r\n            var tt = { x: pl, y: (h - tw) / 2 + pt };\r\n            var tb = { x: pl, y: (h + tw) / 2 + pt };\r\n            var bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n            var bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n            var mty = tt.y + (bt.y - tt.y) * locationX;\r\n            var mby = tb.y + (bb.y - tb.y) * locationX;\r\n            return { y: mty + (mby - mty) * locationY, x: tt.x + (bt.x - tt.x) * locationX };\r\n        }\r\n    };\r\n    Object.defineProperty(FunnelSlice.prototype, \"bottomWidth\", {\r\n        /**\r\n         * @return bottom width\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bottomWidth\");\r\n        },\r\n        /**\r\n         * Bottom width in pixels or percent.\r\n         *\r\n         * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n         * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n         * becomes read-only as it will be automatically reset by series.\r\n         *\r\n         * @param value  Bottom width\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"bottomWidth\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSlice.prototype, \"topWidth\", {\r\n        /**\r\n         * @return Top width\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"topWidth\");\r\n        },\r\n        /**\r\n         * Top width in pixels or percent.\r\n         *\r\n         * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n         * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n         * becomes read-only as it will be automatically reset by series.\r\n         *\r\n         * @param value  Top width\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"topWidth\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSlice.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the funnel slice: \"horizontal\" or \"vertical\".\r\n         *\r\n         * IMPORTANT: this setting might be used to set orintation if you use slice\r\n         * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n         * becomes read-only as it will be automatically reset by series.\r\n         *\r\n         * @param value  Orientation\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"orientation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSlice.prototype, \"expandDistance\", {\r\n        /**\r\n         * @return expandDistance\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"expandDistance\");\r\n        },\r\n        /**\r\n         * A relative distance slice's sides should be bent to. It's relative to the\r\n         * height of the slice.\r\n         *\r\n         * Zero (default) will mean the sides will be perfectly straight.\r\n         *\r\n         * Positive value will make them bend outwards, resulting in \"puffed\" slices.\r\n         *\r\n         * Negative values will make them bend inwards.\r\n         *\r\n         * @default 0\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"expandDistance\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all parameters from another [[Sprite]].\r\n     *\r\n     * @param source Source Sprite\r\n     */\r\n    FunnelSlice.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.slice) {\r\n            this.slice.copyFrom(source.slice);\r\n        }\r\n    };\r\n    return FunnelSlice;\r\n}(Container));\r\nexport { FunnelSlice };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSlice\"] = FunnelSlice;\r\n//# sourceMappingURL=FunnelSlice.js.map","/**\r\n * Funnel tick module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws an tick line for a funnel slice connecting it to a related label.\r\n *\r\n * @see {@link IFunnelTickEvents} for a list of available events\r\n * @see {@link IFunnelTickAdapters} for a list of available Adapters\r\n */\r\nvar FunnelTick = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FunnelTick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelTick() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A label element this tick is attached to.\r\n         */\r\n        _this._label = new MutableValueDisposer();\r\n        /**\r\n         * A slice element this tick is attached to.\r\n         */\r\n        _this._slice = new MutableValueDisposer();\r\n        _this.className = \"FunnelTick\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this._disposers.push(_this._label);\r\n        _this._disposers.push(_this._slice);\r\n        _this.setPropertyValue(\"locationX\", 0);\r\n        _this.setPropertyValue(\"locationY\", 0);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelTick.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var slice = this.slice;\r\n        var point = slice.getPoint(this.locationX, this.locationY);\r\n        if (point) {\r\n            var label = this.label;\r\n            var series = slice.dataItem.component;\r\n            var p0 = void 0;\r\n            var p1 = void 0;\r\n            var p2 = void 0;\r\n            if (series.orientation == \"vertical\") {\r\n                var x1 = label.pixelX;\r\n                var y1 = label.pixelY;\r\n                if (!series.labelsOpposite) {\r\n                    x1 += label.maxRight;\r\n                }\r\n                p0 = $utils.spritePointToSprite(point, slice, this.parent);\r\n                p2 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n                p1 = { x: label.parent.pixelX - this.length, y: p2.y };\r\n                if (!series.labelsOpposite) {\r\n                    p1.x = label.parent.measuredWidth + this.length;\r\n                }\r\n            }\r\n            else {\r\n                var x1 = label.pixelX;\r\n                var y1 = label.pixelY;\r\n                if (!series.labelsOpposite) {\r\n                    y1 += label.maxBottom;\r\n                }\r\n                p0 = $utils.spritePointToSprite(point, slice, this.parent);\r\n                p2 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n                p1 = { x: p2.x, y: label.parent.pixelY - this.length };\r\n                if (!series.labelsOpposite) {\r\n                    p1.y = label.parent.measuredHeight + this.length;\r\n                }\r\n            }\r\n            this.path = $path.moveTo(p0) + $path.lineTo(p1) + $path.lineTo(p2);\r\n        }\r\n    };\r\n    Object.defineProperty(FunnelTick.prototype, \"slice\", {\r\n        /**\r\n         * @return FunnelSlice\r\n         */\r\n        get: function () {\r\n            return this._slice.get();\r\n        },\r\n        /**\r\n         * [[FunnelSlice]] element tick is attached to.\r\n         *\r\n         * @param slice  Slice\r\n         */\r\n        set: function (slice) {\r\n            this._slice.set(slice, new MultiDisposer([\r\n                slice.events.on(\"transformed\", this.invalidate, this, false),\r\n                slice.events.on(\"validated\", this.invalidate, this, false)\r\n            ]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelTick.prototype, \"label\", {\r\n        /**\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            return this._label.get();\r\n        },\r\n        /**\r\n         * [[Label]] element tick is attached to.\r\n         *\r\n         * @param label  Label\r\n         */\r\n        set: function (label) {\r\n            this._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelTick.prototype, \"locationX\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationX\");\r\n        },\r\n        /**\r\n         * A relative horizontal position within target element a tick is pointing\r\n         * to.\r\n         *\r\n         * A scale is from 0 to 1, where 0 means left edge, and 1 right edge.\r\n         *\r\n         * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n         * of the slice), or outside 0-1 range, which will put tick anchor position\r\n         * outside target element.\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"locationX\", value, false, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelTick.prototype, \"locationY\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationY\");\r\n        },\r\n        /**\r\n         * A relative vertical position within target element a tick is pointing\r\n         * to.\r\n         *\r\n         * A scale is from 0 to 1, where 0 means top edge, and 1 bottom edge.\r\n         *\r\n         * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n         * of the slice), or outside 0-1 range, which will put tick anchor position\r\n         * outside target element.\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"locationY\", value, false, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelTick;\r\n}(Tick));\r\nexport { FunnelTick };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelTick\"] = FunnelTick;\r\n//# sourceMappingURL=FunnelTick.js.map","/**\r\n * Defines Funnel Chart Series.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\r\nimport { FunnelTick } from \"../elements/FunnelTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar FunnelSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FunnelSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FunnelSeriesDataItem\";\r\n        // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\r\n        _this.events.on(\"visibilitychanged\", function () {\r\n            if (_this.component) {\r\n                _this.component.invalidateDataItems();\r\n            }\r\n        }, _this, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FunnelSeriesDataItem.prototype, \"sliceLink\", {\r\n        /**\r\n         * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n         *\r\n         * @readonly\r\n         * @return Slice element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._sliceLink) {\r\n                var sliceLink_1 = this.component.sliceLinks.create();\r\n                this._sliceLink = sliceLink_1;\r\n                this._disposers.push(sliceLink_1);\r\n                sliceLink_1.parent = this.component.slicesContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.sliceLinks.removeValue(sliceLink_1);\r\n                    }\r\n                }));\r\n                this.addSprite(sliceLink_1);\r\n                sliceLink_1.visible = this.visible;\r\n            }\r\n            return this._sliceLink;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelSeriesDataItem;\r\n}(PercentSeriesDataItem));\r\nexport { FunnelSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar FunnelSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FunnelSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this._nextY = 0;\r\n        _this.className = \"FunnelSeries\";\r\n        _this.orientation = \"vertical\";\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.slicesContainer.width = percent(100);\r\n        _this.slicesContainer.height = percent(100);\r\n        _this._disposers.push(_this.slicesContainer.events.on(\"maxsizechanged\", _this.invalidateDataItems, _this, false));\r\n        _this.labelsOpposite = true;\r\n        _this.labelsContainer.layout = \"absolute\";\r\n        _this.bottomRatio = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a [[FunnelSlice]] element.\r\n     *\r\n     * @return Slice\r\n     */\r\n    FunnelSeries.prototype.createSlice = function () {\r\n        return new FunnelSlice();\r\n    };\r\n    /**\r\n     * Creates a [[FunnelTick]] element.\r\n     *\r\n     * @return Tick\r\n     */\r\n    FunnelSeries.prototype.createTick = function () {\r\n        return new FunnelTick();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    FunnelSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Funnel Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    FunnelSeries.prototype.createDataItem = function () {\r\n        return new FunnelSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits FunnelSlice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    FunnelSeries.prototype.initSlice = function (slice) {\r\n        slice.isMeasured = false;\r\n        slice.defaultState.properties.scale = 1;\r\n        slice.observe(\"scale\", this.handleSliceScale, this);\r\n        slice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n        slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n        var hoverState = slice.states.create(\"hover\");\r\n        hoverState.properties.expandDistance = 0.2;\r\n    };\r\n    /**\r\n     * [initLabel description]\r\n     *\r\n     * @todo Description\r\n     * @param label [description]\r\n     */\r\n    FunnelSeries.prototype.initLabel = function (label) {\r\n        _super.prototype.initLabel.call(this, label);\r\n        label.verticalCenter = \"middle\";\r\n        label.horizontalCenter = \"middle\";\r\n        label.isMeasured = true;\r\n        label.padding(5, 5, 5, 5);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelSeries.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this._nextY = 0;\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelSeries.prototype.validateDataElements = function () {\r\n        var _this = this;\r\n        var slicesContainer = this.slicesContainer;\r\n        var labelsContainer = this.labelsContainer;\r\n        var labelTemplate = this.labels.template;\r\n        if (this.alignLabels) {\r\n            labelTemplate.interactionsEnabled = true;\r\n            slicesContainer.isMeasured = true;\r\n            labelsContainer.isMeasured = true;\r\n        }\r\n        else {\r\n            labelTemplate.interactionsEnabled = false;\r\n            slicesContainer.isMeasured = false;\r\n            labelsContainer.isMeasured = false;\r\n        }\r\n        var total = 0;\r\n        var count = 0;\r\n        this.dataItems.each(function (dItem) {\r\n            if ($type.hasValue(dItem.value)) {\r\n                count++;\r\n                if (dItem.value > 0) {\r\n                    total += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\r\n                }\r\n                else {\r\n                    if (_this.ignoreZeroValues) {\r\n                        count--;\r\n                    }\r\n                    else {\r\n                        if (!dItem.visible || dItem.__disabled || dItem.isHiding) {\r\n                            count--;\r\n                        }\r\n                        else {\r\n                            total += 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._total = 1 / count * total;\r\n        this._count = count;\r\n        _super.prototype.validateDataElements.call(this);\r\n        this.arrangeLabels();\r\n    };\r\n    /**\r\n     * [getNextValue description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem  [description]\r\n     * @return [description]\r\n     */\r\n    FunnelSeries.prototype.getNextValue = function (dataItem) {\r\n        var index = dataItem.index;\r\n        var nextValue = dataItem.getWorkingValue(\"value\");\r\n        if (index < this.dataItems.length - 1) {\r\n            var nextItem = this.dataItems.getIndex(index + 1);\r\n            nextValue = nextItem.getWorkingValue(\"value\");\r\n            if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {\r\n                return this.getNextValue(nextItem);\r\n            }\r\n        }\r\n        return nextValue;\r\n    };\r\n    /**\r\n     * [formDataElement description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    FunnelSeries.prototype.formDataElement = function () {\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    FunnelSeries.prototype.validateDataElement = function (dataItem) {\r\n        if ($type.hasValue(dataItem.value)) {\r\n            // FunnelSlice\r\n            var slice = dataItem.slice;\r\n            slice.orientation = this.orientation;\r\n            var sliceLink = dataItem.sliceLink;\r\n            sliceLink.orientation = this.orientation;\r\n            var tick = dataItem.tick;\r\n            var label = dataItem.label;\r\n            tick.slice = slice;\r\n            tick.label = label;\r\n            this.decorateSlice(dataItem);\r\n            sliceLink.fill = slice.fill;\r\n            if (dataItem.index == this.dataItems.length - 1) {\r\n                sliceLink.disabled = true;\r\n            }\r\n            // do this at the end, otherwise bullets won't be positioned properly\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * [decorateSlice description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     */\r\n    FunnelSeries.prototype.decorateSlice = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        var sliceLink = dataItem.sliceLink;\r\n        var label = dataItem.label;\r\n        var tick = dataItem.tick;\r\n        var maxWidth = this.slicesContainer.innerWidth;\r\n        var maxHeight = this.slicesContainer.innerHeight;\r\n        var nextValue = this.getNextValue(dataItem);\r\n        var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n        var bottomRatio = this.bottomRatio;\r\n        var d = 1;\r\n        if (dataItem.value != 0) {\r\n            d = workingValue / Math.abs(dataItem.value);\r\n        }\r\n        else {\r\n            if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\r\n                d = 0.000001;\r\n            }\r\n        }\r\n        if (this.ignoreZeroValues && dataItem.value == 0) {\r\n            dataItem.__disabled = true;\r\n            return;\r\n        }\r\n        else {\r\n            dataItem.__disabled = false;\r\n        }\r\n        if (this._nextY == Infinity) {\r\n            this._nextY = 0;\r\n        }\r\n        if (this.orientation == \"vertical\") {\r\n            var linkHeight = sliceLink.pixelHeight * d;\r\n            maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n            slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n            slice.y = this._nextY;\r\n            slice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n            slice.x = maxWidth / 2;\r\n            if (!this.alignLabels) {\r\n                label.x = slice.x;\r\n            }\r\n            else {\r\n                label.x = undefined;\r\n            }\r\n            label.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n            this._nextY += slice.pixelHeight + linkHeight;\r\n            sliceLink.y = this._nextY - linkHeight;\r\n            sliceLink.x = slice.x;\r\n        }\r\n        else {\r\n            var linkWidth = sliceLink.pixelWidth * d;\r\n            maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n            slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n            slice.x = this._nextY;\r\n            slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\r\n            slice.y = maxHeight / 2;\r\n            if (!this.alignLabels) {\r\n                label.y = slice.y;\r\n            }\r\n            else {\r\n                label.y = this.labelsContainer.measuredHeight;\r\n            }\r\n            label.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n            this._nextY += slice.pixelWidth + linkWidth;\r\n            sliceLink.x = this._nextY - linkWidth;\r\n            sliceLink.y = slice.y;\r\n        }\r\n    };\r\n    FunnelSeries.prototype.getLastLabel = function (index) {\r\n        if (index > 0) {\r\n            var lastLabel = this.labels.getIndex(index);\r\n            if (lastLabel.__disabled || !lastLabel.visible) {\r\n                return this.getLastLabel(index - 1);\r\n            }\r\n            else {\r\n                return lastLabel;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * [arrangeLabels description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    FunnelSeries.prototype.arrangeLabels = function () {\r\n        if (this.alignLabels) {\r\n            var count = this.labels.length;\r\n            if (count > 1) {\r\n                var lastLabel = this.getLastLabel(count - 1);\r\n                if (lastLabel) {\r\n                    var lastY = lastLabel.pixelY;\r\n                    var lastX = lastLabel.pixelX;\r\n                    if (count > 1) {\r\n                        for (var i = count - 2; i >= 0; i--) {\r\n                            var label = this.labels.getIndex(i);\r\n                            if (label.visible && !label.__disabled) {\r\n                                if (label.invalid) {\r\n                                    label.validate();\r\n                                }\r\n                                if (this.orientation == \"vertical\") {\r\n                                    if (label.pixelY + label.measuredHeight > lastY) {\r\n                                        label.y = Math.min(1000000, lastY - label.measuredHeight);\r\n                                    }\r\n                                }\r\n                                // horizontal\r\n                                else {\r\n                                    if (label.pixelX + label.measuredWidth > lastX) {\r\n                                        label.x = Math.min(1000000, lastX - label.measuredWidth);\r\n                                    }\r\n                                }\r\n                                lastY = label.pixelY;\r\n                                lastX = label.pixelX;\r\n                            }\r\n                        }\r\n                        lastY = 0;\r\n                        lastX = 0;\r\n                        for (var i = 0; i < count; i++) {\r\n                            var label = this.labels.getIndex(i);\r\n                            if (label.visible && !label.__disabled) {\r\n                                if (label.invalid) {\r\n                                    label.validate();\r\n                                }\r\n                                if (this.orientation == \"vertical\") {\r\n                                    if (label.pixelY < lastY) {\r\n                                        label.y = Math.min(1000000, lastY);\r\n                                    }\r\n                                }\r\n                                // horizontal\r\n                                else {\r\n                                    if (label.pixelX < lastX) {\r\n                                        label.x = Math.min(1000000, lastX);\r\n                                    }\r\n                                }\r\n                                lastY += label.measuredHeight;\r\n                                lastX += label.measuredWidth;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    FunnelSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        var locationX = bullet.locationX;\r\n        if (!$type.isNumber(locationX)) {\r\n            locationX = 0.5;\r\n        }\r\n        var locationY = bullet.locationY;\r\n        if (!$type.isNumber(locationY)) {\r\n            locationY = 1;\r\n        }\r\n        bullet.x = slice.pixelX + slice.measuredWidth * locationX;\r\n        bullet.y = slice.pixelY + slice.measuredHeight * locationY;\r\n    };\r\n    Object.defineProperty(FunnelSeries.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n         *\r\n         * @default \"vertical\"\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"orientation\", value)) {\r\n                this.labelsOpposite = this.labelsOpposite;\r\n                this.invalidate();\r\n                if (value == \"vertical\") {\r\n                    this.ticks.template.locationX = 1;\r\n                    this.ticks.template.locationY = 0.5;\r\n                    this.labels.template.rotation = 0;\r\n                    this.layout = \"horizontal\";\r\n                }\r\n                else {\r\n                    this.ticks.template.locationX = 0.5;\r\n                    this.ticks.template.locationY = 1;\r\n                    this.labels.template.rotation = -90;\r\n                    this.layout = \"vertical\";\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"bottomRatio\", {\r\n        /**\r\n         * @return {number}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bottomRatio\");\r\n        },\r\n        /**\r\n         * Indicates how slice's bottom will change in relation to slices top AND\r\n         * next slices top.\r\n         *\r\n         * Basically it's a relative value (0-1) that indicates bottom width\r\n         * position between current slice's top width and the top withd of the next\r\n         * one.\r\n         *\r\n         * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n         * slice with).\r\n         *\r\n         * `0` (default) will mean that bottom will be the same as top, resulting in\r\n         * a prefectly square slice.\r\n         *\r\n         * From the data-viz standpoint `0` is a correct setting, since area of the\r\n         * slices will depict their value correctly.\r\n         *\r\n         * `1` will mean that slice will become trapezoid with its bottom matching\r\n         * width of the next slice.\r\n         *\r\n         * `0.5` will make bottom width be in the middle of width of current slice\r\n         * and the next slice.\r\n         *\r\n         * @default 0\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"bottomRatio\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"sliceLinks\", {\r\n        /**\r\n         * A list of elements linking each actual slice.\r\n         *\r\n         * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n         * so they have all the same configuration options.\r\n         *\r\n         * You can use `template` of this link, to specify how links will look.\r\n         *\r\n         * ```TypeScript\r\n         * series.sliceLinks.template.fillOpacity = 0.5;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.sliceLinks.template.fillOpacity = 0.5;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     \"type\": \"FunnelSeries\",\r\n         *      // ...\r\n         *      \"sliceLinks\": {\r\n         *        \"fillOpacity\": 0.5\r\n         *      }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Funnel links\r\n         */\r\n        get: function () {\r\n            if (!this._sliceLinks) {\r\n                var sliceLink = new FunnelSlice();\r\n                sliceLink.applyOnClones = true;\r\n                sliceLink.fillOpacity = 0.5;\r\n                sliceLink.expandDistance = -0.3;\r\n                sliceLink.hiddenState.properties.opacity = 0;\r\n                this._disposers.push(sliceLink);\r\n                this._sliceLinks = new ListTemplate(sliceLink);\r\n                this._disposers.push(new ListDisposer(this._sliceLinks));\r\n            }\r\n            return this._sliceLinks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    FunnelSeries.prototype.show = function (duration) {\r\n        var _this = this;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        var delay = 0;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            dataItem.show(interpolationDuration, delay, [\"value\"]);\r\n        });\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    FunnelSeries.prototype.hide = function (duration) {\r\n        var _this = this;\r\n        var fields = [\"value\"];\r\n        var value = 0;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var delay = 0;\r\n        var interpolationDuration = this.hiddenState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            dataItem.hide(interpolationDuration, delay, value, fields);\r\n        });\r\n        var animation = _super.prototype.hide.call(this, duration);\r\n        if (animation && !animation.isFinished()) {\r\n            animation.delay(delay);\r\n        }\r\n        return animation;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    FunnelSeries.prototype.setAlignLabels = function (value) {\r\n        _super.prototype.setAlignLabels.call(this, value);\r\n        this.ticks.template.disabled = !value;\r\n        var labelsContainer = this.labelsContainer;\r\n        if (labelsContainer) {\r\n            // do not align\r\n            if (!value) {\r\n                labelsContainer.width = percent(100);\r\n                labelsContainer.height = percent(100);\r\n            }\r\n            //align\r\n            else {\r\n                labelsContainer.height = undefined;\r\n                labelsContainer.width = undefined;\r\n                labelsContainer.margin(10, 10, 10, 10);\r\n            }\r\n        }\r\n        this.labelsOpposite = this.labelsOpposite;\r\n    };\r\n    Object.defineProperty(FunnelSeries.prototype, \"labelsOpposite\", {\r\n        /**\r\n         * @return Labels on opposite side?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"labelsOpposite\");\r\n        },\r\n        /**\r\n         * Put labels on the oppsite side of the series?\r\n         *\r\n         * This setting is only used if `alignLabels = true`.\r\n         *\r\n         * If set to `true` (default) labels will be drawn to the right (on vertical\r\n         * series), or to the bottom (on horizontal series).\r\n         *\r\n         * If set to `false`, labels will be positioned to the left or top\r\n         * respectively.\r\n         *\r\n         * @default true\r\n         * @since 4.1.13\r\n         * @param  value  Labels on opposite side?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"labelsOpposite\", value);\r\n            var labelTemplate = this.labels.template;\r\n            var labelAlign = \"none\";\r\n            var labelValign = \"none\";\r\n            if (!this.alignLabels) {\r\n                if (this.orientation == \"vertical\") {\r\n                    labelAlign = \"center\";\r\n                }\r\n                else {\r\n                    labelValign = \"middle\";\r\n                }\r\n            }\r\n            else {\r\n                // opposite (left/bottom)\r\n                if (value) {\r\n                    this.labelsContainer.toFront();\r\n                    // left\r\n                    if (this.orientation == \"vertical\") {\r\n                        this.ticks.template.locationX = 1;\r\n                        labelTemplate.horizontalCenter = \"left\";\r\n                        labelAlign = \"right\";\r\n                    }\r\n                    // bottom\r\n                    else {\r\n                        this.ticks.template.locationY = 1;\r\n                        labelTemplate.horizontalCenter = \"right\";\r\n                        labelValign = \"bottom\";\r\n                    }\r\n                }\r\n                // non oposite (right/top)\r\n                else {\r\n                    this.labelsContainer.toBack();\r\n                    // right\r\n                    if (this.orientation == \"vertical\") {\r\n                        this.ticks.template.locationX = 0;\r\n                        labelAlign = \"left\";\r\n                    }\r\n                    // top\r\n                    else {\r\n                        labelValign = \"top\";\r\n                        this.ticks.template.locationY = 0;\r\n                    }\r\n                }\r\n            }\r\n            labelTemplate.align = labelAlign;\r\n            labelTemplate.valign = labelValign;\r\n            this.validateLayout();\r\n            this.ticks.each(function (tick) {\r\n                tick.invalidate();\r\n            });\r\n            this.invalidateDataItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelSeries;\r\n}(PercentSeries));\r\nexport { FunnelSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n//# sourceMappingURL=FunnelSeries.js.map","/**\r\n * Defines Pyramid Series.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FunnelSeries, FunnelSeriesDataItem } from \"./FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PyramidSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PyramidSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PyramidSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PyramidSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PyramidSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PyramidSeriesDataItem;\r\n}(FunnelSeriesDataItem));\r\nexport { PyramidSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IPyramidSeriesEvents} for a list of available Events\r\n * @see {@link IPyramidSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar PyramidSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PyramidSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PyramidSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PyramidSeries\";\r\n        _this.topWidth = percent(0);\r\n        _this.bottomWidth = percent(100);\r\n        _this.pyramidHeight = percent(100);\r\n        _this.valueIs = \"area\";\r\n        _this.sliceLinks.template.width = 0;\r\n        _this.sliceLinks.template.height = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PyramidSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pyramid Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PyramidSeries.prototype.createDataItem = function () {\r\n        return new PyramidSeriesDataItem();\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PyramidSeries.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this._nextWidth = undefined;\r\n    };\r\n    /**\r\n     * [getNextValue description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     * @return [description]\r\n     */\r\n    PyramidSeries.prototype.getNextValue = function (dataItem) {\r\n        var index = dataItem.index;\r\n        var nextValue = dataItem.getWorkingValue(\"value\");\r\n        if (index < this.dataItems.length - 1) {\r\n            var nextItem = this.dataItems.getIndex(index + 1);\r\n            nextValue = nextItem.getWorkingValue(\"value\");\r\n        }\r\n        if (nextValue == 0) {\r\n            nextValue = 0.000001;\r\n        }\r\n        return nextValue;\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    PyramidSeries.prototype.validateDataElements = function () {\r\n        var _this = this;\r\n        var maxWidth = this.slicesContainer.innerWidth;\r\n        var maxHeight = this.slicesContainer.innerHeight;\r\n        this.dataItems.each(function (dataItem) {\r\n            if (dataItem.value > 0) {\r\n                var relValue = dataItem.getWorkingValue(\"value\") / dataItem.value;\r\n                var sliceLink = dataItem.sliceLink;\r\n                if (_this.orientation == \"vertical\") {\r\n                    maxHeight -= (sliceLink.pixelHeight * relValue);\r\n                }\r\n                else {\r\n                    maxWidth -= (sliceLink.pixelWidth * relValue);\r\n                }\r\n            }\r\n        });\r\n        this._pyramidHeight = $utils.relativeToValue(this.pyramidHeight, maxHeight);\r\n        this._pyramidWidth = $utils.relativeToValue(this.pyramidHeight, maxWidth);\r\n        if (this.orientation == \"vertical\") {\r\n            var y = (maxHeight - this._pyramidHeight) / 2;\r\n            this.slicesContainer.y = y;\r\n            this.labelsContainer.y = y;\r\n            this.ticksContainer.y = y;\r\n        }\r\n        else {\r\n            var x = (maxWidth - this._pyramidWidth) / 2;\r\n            this.slicesContainer.x = x;\r\n            this.labelsContainer.x = x;\r\n            this.ticksContainer.x = x;\r\n        }\r\n        _super.prototype.validateDataElements.call(this);\r\n    };\r\n    /**\r\n     * [decorateSlice description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     */\r\n    PyramidSeries.prototype.decorateSlice = function (dataItem) {\r\n        var sum = this.dataItem.values.value.absoluteSum;\r\n        if (sum == 0) {\r\n            return;\r\n        }\r\n        var slice = dataItem.slice;\r\n        var sliceLink = dataItem.sliceLink;\r\n        var label = dataItem.label;\r\n        var tick = dataItem.tick;\r\n        // TODO can this be removed ?\r\n        this.getNextValue(dataItem);\r\n        var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n        if (workingValue == 0) {\r\n            workingValue = 0.000001;\r\n        }\r\n        var pyramidWidth = this._pyramidWidth;\r\n        var pyramidHeight = this._pyramidHeight;\r\n        var maxWidth = this.slicesContainer.innerWidth;\r\n        var maxHeight = this.slicesContainer.innerHeight;\r\n        var linkWidth = sliceLink.pixelWidth;\r\n        var linkHeight = sliceLink.pixelHeight;\r\n        if (dataItem.value == 0 && this.ignoreZeroValues) {\r\n            dataItem.__disabled = true;\r\n        }\r\n        else {\r\n            dataItem.__disabled = false;\r\n        }\r\n        if (this.orientation == \"vertical\") {\r\n            var topWidth = $utils.relativeToValue(this.topWidth, maxWidth);\r\n            if (!$type.isNumber(this._nextWidth)) {\r\n                this._nextWidth = topWidth;\r\n            }\r\n            var bottomWidth = $utils.relativeToValue(this.bottomWidth, maxWidth);\r\n            var sliceTopWidth = this._nextWidth;\r\n            var angle = Math.atan2(pyramidHeight, topWidth - bottomWidth);\r\n            var c = Math.tan(Math.PI / 2 - angle);\r\n            if (c == 0) {\r\n                c = 0.00000001;\r\n            }\r\n            var sliceHeight = void 0;\r\n            var sliceBottomWidth = void 0;\r\n            if (this.valueIs == \"area\") {\r\n                var totalSquare = (topWidth + bottomWidth) / 2 * pyramidHeight;\r\n                var square = totalSquare * workingValue / sum;\r\n                var s = Math.abs(sliceTopWidth * sliceTopWidth - 2 * square * c);\r\n                sliceHeight = (sliceTopWidth - Math.sqrt(s)) / c;\r\n                sliceBottomWidth = (2 * square - sliceHeight * sliceTopWidth) / sliceHeight;\r\n            }\r\n            else {\r\n                sliceHeight = pyramidHeight * workingValue / sum;\r\n                sliceBottomWidth = sliceTopWidth - sliceHeight * c;\r\n            }\r\n            slice.height = sliceHeight;\r\n            slice.width = maxWidth;\r\n            slice.bottomWidth = sliceBottomWidth;\r\n            slice.topWidth = sliceTopWidth;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = slice.bottomWidth;\r\n            slice.y = this._nextY;\r\n            //slice.x = maxWidth / 2;\r\n            if (!this.alignLabels) {\r\n                label.x = maxWidth / 2;\r\n            }\r\n            else {\r\n                label.x = 0;\r\n            }\r\n            label.y = slice.pixelY + slice.pixelHeight * tick.locationY + slice.dy;\r\n            this._nextY += slice.pixelHeight + linkHeight * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);\r\n            sliceLink.y = this._nextY - linkHeight;\r\n            sliceLink.x = maxWidth / 2;\r\n        }\r\n        else {\r\n            var topWidth = $utils.relativeToValue(this.topWidth, maxHeight);\r\n            if (!$type.isNumber(this._nextWidth)) {\r\n                this._nextWidth = topWidth;\r\n            }\r\n            var bottomWidth = $utils.relativeToValue(this.bottomWidth, maxHeight);\r\n            var sliceTopWidth = this._nextWidth;\r\n            var angle = Math.atan2(pyramidWidth, topWidth - bottomWidth);\r\n            var c = Math.tan(Math.PI / 2 - angle);\r\n            if (c == 0) {\r\n                c = 0.00000001;\r\n            }\r\n            var sliceWidth = void 0;\r\n            var sliceBottomWidth = void 0;\r\n            if (this.valueIs == \"area\") {\r\n                var totalSquare = (topWidth + bottomWidth) / 2 * pyramidWidth;\r\n                var square = totalSquare * workingValue / sum;\r\n                sliceWidth = (sliceTopWidth - Math.sqrt(sliceTopWidth * sliceTopWidth - 2 * square * c)) / c;\r\n                sliceBottomWidth = (2 * square - sliceWidth * sliceTopWidth) / sliceWidth;\r\n            }\r\n            else {\r\n                sliceWidth = pyramidWidth * workingValue / sum;\r\n                sliceBottomWidth = sliceTopWidth - sliceWidth * c;\r\n            }\r\n            slice.width = sliceWidth;\r\n            slice.height = maxHeight;\r\n            slice.bottomWidth = sliceBottomWidth;\r\n            slice.topWidth = sliceTopWidth;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = slice.bottomWidth;\r\n            slice.x = this._nextY;\r\n            if (!this.alignLabels) {\r\n                label.y = maxHeight / 2;\r\n            }\r\n            else {\r\n                label.y = this.labelsContainer.measuredHeight;\r\n            }\r\n            label.x = slice.pixelX + slice.pixelWidth * tick.locationX + slice.dx;\r\n            this._nextY += slice.pixelWidth + linkWidth * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);\r\n            sliceLink.x = this._nextY - linkWidth;\r\n            sliceLink.y = maxHeight / 2;\r\n        }\r\n        this._nextWidth = slice.bottomWidth;\r\n    };\r\n    Object.defineProperty(PyramidSeries.prototype, \"topWidth\", {\r\n        /**\r\n         * @return {number | Percent}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"topWidth\");\r\n        },\r\n        /**\r\n         * Width of the pyramid's tip in pixels or relative (`Percent`).\r\n         *\r\n         * `0%` (default) means the pyramid will be perfectly pointy.\r\n         * `50%` will have a cut off / blunt top that is half the width of the chart.\r\n         * `100%` will take the whole width of the chart.\r\n         *\r\n         * If you need the downward-pointing pyramid, you might want to `topWidth` to\r\n         * `100%` and `bottomWidth` to `0%`.\r\n         *\r\n         * @default 0%\r\n         * @param {number | Percent}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"topWidth\", value, false, false, 10, false)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PyramidSeries.prototype, \"pyramidHeight\", {\r\n        /**\r\n         * @return {number | Percent}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pyramidHeight\");\r\n        },\r\n        /**\r\n         * Height of pyramid\r\n         *\r\n         *\r\n         * @default 100%\r\n         * @param {number | Percent}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"pyramidHeight\", value, false, false, 10, false)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PyramidSeries.prototype, \"bottomWidth\", {\r\n        /**\r\n         * @return {number | Percent}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bottomWidth\");\r\n        },\r\n        /**\r\n         * Width of the pyramid's bottom (bsae) in pixels or relative (`Percent`).\r\n         *\r\n         * `0%` means the pyramid's botto will be pointy.\r\n         * `50%` will have a cut off / blunt bottom that is half the width of the chart.\r\n         * `100%` (default) will take the whole width of the chart.\r\n         *\r\n         * If you need the downward-pointing pyramid, you might want to `topWidth` to\r\n         * `100%` and `bottomWidth` to `0%`.\r\n         *\r\n         * @param {number | Percent}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"bottomWidth\", value, false, false, 10, false)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PyramidSeries.prototype, \"valueIs\", {\r\n        /**\r\n         * @return {\"area\" | \"height\"}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"valueIs\");\r\n        },\r\n        /**\r\n         * Indicates how slice's value will influence its size.\r\n         *\r\n         * `\"area\"` (default) means that the whole area of the pyramid (counting in\r\n         * modifications by `topWidth` and `bottomWidth`) will be divvied up between\r\n         * slices based on their value.\r\n         *\r\n         * With this setting at `\"area\"` the area of the trapezoids of each slice\r\n         * will represent their value relatively to values of the other slices.\r\n         *\r\n         * This is a correct way to depict \"weight\" of each slice based on their\r\n         * values.\r\n         *\r\n         * `\"height\"` means whole height (as opposed to area) of the pyramid will be\r\n         * divvied up between slices. Actual slice width or area is not counted in.\r\n         *\r\n         * From the data-viz standpoint this does not make a lot of sense, since\r\n         * slices with lesser values might appear more prominent if they are placed\r\n         * towards thick end of the pyramid since their areas will be bigger.\r\n         *\r\n         * @default \"area\"\r\n         * @param {\"area\" | \"height\"}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"valueIs\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PyramidSeries;\r\n}(FunnelSeries));\r\nexport { PyramidSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PyramidSeries\"] = PyramidSeries;\r\nregistry.registeredClasses[\"PyramidSeriesDataItem\"] = PyramidSeriesDataItem;\r\n//# sourceMappingURL=PyramidSeries.js.map","/**\r\n * Defines Pictorial Stacked Series.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PyramidSeries, PyramidSeriesDataItem } from \"./PyramidSeries\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PictorialStackedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PictorialStackedSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PictorialStackedSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PictorialStackedSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PictorialStackedSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PictorialStackedSeriesDataItem;\r\n}(PyramidSeriesDataItem));\r\nexport { PictorialStackedSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a PictorialStacked series on a [[SlicedChart]].\r\n *\r\n * @see {@link IPictorialStackedSeriesEvents} for a list of available Events\r\n * @see {@link IPictorialStackedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar PictorialStackedSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PictorialStackedSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PictorialStackedSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PictorialStackedSeries\";\r\n        _this.topWidth = percent(100);\r\n        _this.bottomWidth = percent(100);\r\n        _this.valueIs = \"height\";\r\n        _this.applyTheme();\r\n        _this.startLocation = 0;\r\n        _this.endLocation = 1;\r\n        _this.align = \"center\";\r\n        _this.valign = \"middle\";\r\n        _this._maskSprite = _this.slicesContainer.createChild(Sprite);\r\n        _this._maskSprite.visible = false;\r\n        _this._maskSprite.zIndex = 100;\r\n        _this._maskSprite.shouldClone = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sizes the mask to fit the series.\r\n     *\r\n     * @ignore\r\n     */\r\n    PictorialStackedSeries.prototype.validateDataElements = function () {\r\n        var maxWidth = this.slicesContainer.maxWidth;\r\n        var maxHeight = this.slicesContainer.maxHeight;\r\n        var maskSprite = this._maskSprite;\r\n        //maskSprite.validatePosition(); // for some reason size of the maskSprite is 0x0 after we removed validatePosition in afterdraw\r\n        var pictureWidth = maskSprite.measuredWidth / maskSprite.scale;\r\n        var pictureHeight = maskSprite.measuredHeight / maskSprite.scale;\r\n        var scale = $math.min(maxHeight / pictureHeight, maxWidth / pictureWidth);\r\n        if (scale == Infinity) {\r\n            scale = 1; // can't return here, won't draw legend properly\r\n        }\r\n        scale = $math.max(0.001, scale);\r\n        var startLocation = this.startLocation;\r\n        var endLocation = this.endLocation;\r\n        var newWidth = $math.min(maxWidth, pictureWidth * scale);\r\n        var newHeight = $math.min(maxHeight, pictureHeight * scale);\r\n        maskSprite.scale = scale;\r\n        if (this.orientation == \"vertical\") {\r\n            this.topWidth = newWidth + 4;\r\n            this.bottomWidth = newWidth + 4;\r\n            this.pyramidHeight = newHeight * (endLocation - startLocation);\r\n            maskSprite.x = maxWidth / 2;\r\n            maskSprite.y = newHeight / 2;\r\n        }\r\n        else {\r\n            this.topWidth = newHeight + 4;\r\n            this.bottomWidth = newHeight + 4;\r\n            this.pyramidHeight = newWidth * (endLocation - startLocation);\r\n            maskSprite.valign = \"middle\";\r\n            maskSprite.x = newWidth / 2;\r\n            maskSprite.y = maxHeight / 2;\r\n        }\r\n        maskSprite.verticalCenter = \"middle\";\r\n        maskSprite.horizontalCenter = \"middle\";\r\n        _super.prototype.validateDataElements.call(this);\r\n        var y;\r\n        var x;\r\n        if (this.orientation == \"vertical\") {\r\n            if (this.valign == \"bottom\") {\r\n                y = (maxHeight - newHeight);\r\n            }\r\n            if (this.valign == \"middle\") {\r\n                y = (maxHeight - newHeight) / 2;\r\n            }\r\n            if (this.valign == \"top\") {\r\n                y = 0;\r\n            }\r\n            if (this.align == \"left\") {\r\n                x = -(maxWidth - newWidth) / 2;\r\n            }\r\n            if (this.align == \"center\") {\r\n                x = 0;\r\n            }\r\n            if (this.align == \"right\") {\r\n                x = (maxWidth - newWidth) / 2;\r\n            }\r\n            this.slices.template.dy = startLocation * newHeight;\r\n            if (this.alignLabels) {\r\n                this.slicesContainer.dx = x;\r\n            }\r\n        }\r\n        else {\r\n            if (this.valign == \"bottom\") {\r\n                y = (maxHeight - newHeight) / 2;\r\n            }\r\n            if (this.valign == \"middle\") {\r\n                y = 0;\r\n            }\r\n            if (this.valign == \"top\") {\r\n                y = -(maxHeight - newHeight) / 2;\r\n            }\r\n            if (this.align == \"left\") {\r\n                x = 0;\r\n            }\r\n            if (this.align == \"center\") {\r\n                x = (maxWidth - newWidth) / 2;\r\n            }\r\n            if (this.align == \"right\") {\r\n                x = (maxWidth - newWidth);\r\n            }\r\n            this.slices.template.dx = startLocation * newWidth;\r\n            if (this.alignLabels) {\r\n                this.slicesContainer.dy = y;\r\n            }\r\n        }\r\n        this.slicesContainer.x = x;\r\n        this.labelsContainer.x = x;\r\n        this.ticksContainer.x = x;\r\n        this.slicesContainer.y = y;\r\n        this.labelsContainer.y = y;\r\n        this.ticksContainer.y = y;\r\n        if (newWidth > 0 && newHeight > 0) {\r\n            this.slicesContainer.mask = maskSprite;\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PictorialStackedSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pyramid Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PictorialStackedSeries.prototype.createDataItem = function () {\r\n        return new PictorialStackedSeriesDataItem();\r\n    };\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"maskSprite\", {\r\n        /**\r\n         * A [[Sprite]] element that is used as a series mask.\r\n         *\r\n         * If set, this element's shape will be used to apply shape to the whole\r\n         * stacked pictorial series.\r\n         *\r\n         * You can use this element's `path` property to set an SVG path for the\r\n         * shape:\r\n         *\r\n         * ```TypeScript\r\n         * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n         * // ...\r\n         * series.maskSprite.path = iconPath;\r\n         * ```\r\n         * ```JavaScript\r\n         * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n         * // ...\r\n         * series.maskSprite.path = iconPath;\r\n         * ```\r\n         * ```JSON\r\n         * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n         * // ...\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     \"type\": \"PictorialStackedSeries\",\r\n         *     // ...\r\n         *     \"maskSprite\": {\r\n         *       \"path\": iconPath\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Mask sprite\r\n         */\r\n        get: function () {\r\n            return this._maskSprite;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Inits FunnelSlice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    PictorialStackedSeries.prototype.initSlice = function (slice) {\r\n        _super.prototype.initSlice.call(this, slice);\r\n        var hs = slice.states.getKey(\"hover\");\r\n        if (hs) {\r\n            hs.properties.expandDistance = 0;\r\n        }\r\n    };\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"startLocation\", {\r\n        /**\r\n         * @return  Start location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startLocation\");\r\n        },\r\n        /**\r\n         * Relative location to start series from.\r\n         *\r\n         * Range of values: 0 to 1.\r\n         *\r\n         * This setting indicates where actual slices will start relatively to the\r\n         * whole height/width of the series.\r\n         *\r\n         * For example, if we want slices to start at 30% from the top/left of the\r\n         * series, we can set `startLocation = 0.3`.\r\n         *\r\n         * To fill shape outside of the location range, use background of the\r\n         * property `slicesContainer`.\r\n         *\r\n         * ```TypeScript\r\n         * series.startLocation = 0.2;\r\n         * series.endLocation = 0.8;\r\n         * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n         * ```\r\n         * ```JavaScript\r\n         * series.startLocation = 0.2;\r\n         * series.endLocation = 0.8;\r\n         * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"startLocation\": 0.2,\r\n         *     \"endLocation\": 0.8,\r\n         *     \"slicesContainer\": {\r\n         *       \"background\": {\r\n         *         \"fill\": \"#eee\"\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 0\r\n         * @since 4.1.13\r\n         * @param  value  Start location\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startLocation\", value)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PictorialStackedSeries.prototype, \"endLocation\", {\r\n        /**\r\n         * @return End location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endLocation\");\r\n        },\r\n        /**\r\n         * Relative location to end series at.\r\n         *\r\n         * Range of values: 0 to 1.\r\n         *\r\n         * This setting indicates where actual slices will end relatively to the\r\n         * whole height/width of the series.\r\n         *\r\n         * For example, if we want slices to end at 70% from the top/left of the\r\n         * series, we can set `endLocation = 0.7`.\r\n         *\r\n         * To fill shape outside of the location range, use background of the\r\n         * property `slicesContainer`.\r\n         *\r\n         * ```TypeScript\r\n         * series.startLocation = 0.2;\r\n         * series.endLocation = 0.8;\r\n         * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n         * ```\r\n         * ```JavaScript\r\n         * series.startLocation = 0.2;\r\n         * series.endLocation = 0.8;\r\n         * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"startLocation\": 0.2,\r\n         *     \"endLocation\": 0.8,\r\n         *     \"slicesContainer\": {\r\n         *       \"background\": {\r\n         *         \"fill\": \"#eee\"\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @default 1\r\n         * @since 4.1.13\r\n         * @param  value  End location\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endLocation\", value)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PictorialStackedSeries;\r\n}(PyramidSeries));\r\nexport { PictorialStackedSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PictorialStackedSeries\"] = PictorialStackedSeries;\r\nregistry.registeredClasses[\"PictorialStackedSeriesDataItem\"] = PictorialStackedSeriesDataItem;\r\n//# sourceMappingURL=PictorialStackedSeries.js.map","/**\r\n * Module that defines everything related to building Cone Columns.\r\n * It is a container which has coneColumn element which is a Cone.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column } from \"./Column\";\r\nimport { Cone } from \"../../core/elements/3d/Cone\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates ConeColumns.\r\n *\r\n * @see {@link IConeColumnEvents} for a list of available events\r\n * @see {@link IConeColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar ConeColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ConeColumn, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeColumn() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeColumn\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ConeColumn.prototype.createAssets = function () {\r\n        this.coneColumn = this.createChild(Cone);\r\n        this.coneColumn.shouldClone = false;\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.coneColumn;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[ConeColumn]].\r\n     *\r\n     * @param source Source ConeColumn\r\n     */\r\n    ConeColumn.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.coneColumn) {\r\n            this.coneColumn.copyFrom(source.coneColumn);\r\n        }\r\n    };\r\n    return ConeColumn;\r\n}(Column));\r\nexport { ConeColumn };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ConeColumn\"] = ConeColumn;\r\n//# sourceMappingURL=ConeColumn.js.map","/**\r\n * ConeSeries module\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { ConeColumn } from \"../elements/ConeColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ConeSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ConeSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ConeSeriesDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { ConeSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a cone graph.\r\n *\r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ConeSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ConeSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns an element to use for Candlestick\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    ConeSeries.prototype.createColumnTemplate = function () {\r\n        return new ConeColumn();\r\n    };\r\n    /**\r\n     * Returns an SVG path to use as series mask.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    ConeSeries.prototype.getMaskPath = function () {\r\n        var dx = 0;\r\n        var dy = 0;\r\n        var column = this.columns.getIndex(0);\r\n        if (column) {\r\n            if (this.baseAxis == this.xAxis) {\r\n                dy = column.coneColumn.innerWidth / 2 + 1;\r\n            }\r\n            else {\r\n                dx = column.coneColumn.innerHeight / 2 + 1;\r\n            }\r\n            return $path.rectToPath({\r\n                x: -dx,\r\n                y: 0,\r\n                width: this.xAxis.axisLength + dx,\r\n                height: this.yAxis.axisLength + dy\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ConeSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        var column = dataItem.column;\r\n        if (column) {\r\n            var coneColumn = dataItem.column.coneColumn;\r\n            coneColumn.fill = dataItem.column.fill;\r\n            if (this.baseAxis == this.yAxis) {\r\n                coneColumn.orientation = \"horizontal\";\r\n            }\r\n            else {\r\n                coneColumn.orientation = \"vertical\";\r\n            }\r\n        }\r\n    };\r\n    return ConeSeries;\r\n}(ColumnSeries));\r\nexport { ConeSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ConeSeries\"] = ConeSeries;\r\nregistry.registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;\r\n//# sourceMappingURL=ConeSeries.js.map","/**\r\n * Module that defines everything related to building Curved Columns.\r\n * It is a container which has CurvedColumn element which is a Sprite.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column } from \"./Column\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates CurvedColumns.\r\n *\r\n * @see {@link ICurvedColumnEvents} for a list of available events\r\n * @see {@link ICurvedColumnAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar CurvedColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurvedColumn, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CurvedColumn() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CurvedColumn\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * [createAssets description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    CurvedColumn.prototype.createAssets = function () {\r\n        this.curvedColumn = this.createChild(Sprite);\r\n        this.curvedColumn.shouldClone = false;\r\n        this.setPropertyValue(\"tension\", 0.7);\r\n        this.width = percent(120);\r\n        this.height = percent(120);\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.curvedColumn;\r\n    };\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    CurvedColumn.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var w = this.realWidth;\r\n        var h = this.realHeight;\r\n        var x = this.realX - this.pixelX;\r\n        var y = this.realY - this.pixelY;\r\n        var points;\r\n        // TODO can this be removed ?\r\n        $utils.used(this.width);\r\n        var tensionX = 1;\r\n        var tensionY = 1;\r\n        if (this.orientation == \"vertical\") {\r\n            tensionX = this.tension;\r\n            points = [{ x: 0, y: h + y }, { x: w / 2, y: y }, { x: w, y: h + y }];\r\n        }\r\n        else {\r\n            tensionY = this.tension;\r\n            points = [{ x: x, y: 0 }, { x: x + w, y: h / 2 }, { x: x, y: h }];\r\n        }\r\n        var path = $path.moveTo(points[0]) + new $smoothing.Tension(tensionX, tensionY).smooth(points);\r\n        this.column.path = path;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[CurvedColumn]].\r\n     *\r\n     * @param source  Source CurvedColumn\r\n     */\r\n    CurvedColumn.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.curvedColumn) {\r\n            this.curvedColumn.copyFrom(source.curvedColumn);\r\n        }\r\n    };\r\n    Object.defineProperty(CurvedColumn.prototype, \"tension\", {\r\n        /**\r\n         * @return Tension (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tension\");\r\n        },\r\n        /**\r\n         * Horizontal tension of the curve.\r\n         *\r\n         * Tension defines how \"lose\" the line will be.\r\n         *\r\n         * 1 is the maximum tension which would result in pointy columns with\r\n         * straight edges.\r\n         *\r\n         * The smaller the tension th wider the column will be.\r\n         *\r\n         * @default 0.7\r\n         * @param value tension (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tension\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CurvedColumn.prototype, \"orientation\", {\r\n        /**\r\n         * Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the column.\r\n         *\r\n         * Available options: \"vertical\" (default) and \"horizontal\".\r\n         *\r\n         * @default \"vertical\"\r\n         * @param value  Orientation\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"orientation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CurvedColumn;\r\n}(Column));\r\nexport { CurvedColumn };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurvedColumn\"] = CurvedColumn;\r\n//# sourceMappingURL=CurvedColumn.js.map","/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { CurvedColumn } from \"../elements/CurvedColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar CurvedColumnSeriesDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurvedColumnSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CurvedColumnSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CurvedColumnSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return CurvedColumnSeriesDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { CurvedColumnSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar CurvedColumnSeries = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurvedColumnSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CurvedColumnSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CurvedColumnSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns an element to use for the curved column.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Element.\r\n     */\r\n    CurvedColumnSeries.prototype.createColumnTemplate = function () {\r\n        return new CurvedColumn();\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    CurvedColumnSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        var column = dataItem.column;\r\n        column = dataItem.column;\r\n        if (column) {\r\n            var curvedColumn = dataItem.column.curvedColumn;\r\n            curvedColumn.fill = dataItem.column.fill;\r\n            if (this.baseAxis == this.yAxis) {\r\n                column.orientation = \"horizontal\";\r\n            }\r\n            else {\r\n                column.orientation = \"vertical\";\r\n            }\r\n        }\r\n    };\r\n    return CurvedColumnSeries;\r\n}(ColumnSeries));\r\nexport { CurvedColumnSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\r\nregistry.registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;\r\n//# sourceMappingURL=CurvedColumnSeries.js.map","/**\r\n * DurationAxis module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ValueAxis, ValueAxisDataItem } from \"./ValueAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines data item for [[DurationAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar DurationAxisDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DurationAxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DurationAxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"DurationAxisDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return DurationAxisDataItem;\r\n}(ValueAxisDataItem));\r\nexport { DurationAxisDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to create an axis that shows time durations.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Time\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Time\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"DurationAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Time\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information about duration formatters.\r\n * @see {@link IDurationAxisEvents} for a list of available Events\r\n * @see {@link IDurationAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar DurationAxis = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DurationAxis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DurationAxis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A base unit (granularity) of data.\r\n         *\r\n         * Used to indicate what are the base units of your data.\r\n         */\r\n        _this._baseUnit = \"second\";\r\n        _this.className = \"DurationAxis\";\r\n        _this.setPropertyValue(\"maxZoomFactor\", 1000000);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Formats the value according to axis' own [[DurationFormatter]].\r\n     *\r\n     * @param value  Source value\r\n     * @return Formatted value\r\n     */\r\n    DurationAxis.prototype.formatLabel = function (value, format) {\r\n        return this.durationFormatter.format(value, format || this.axisDurationFormat);\r\n    };\r\n    /**\r\n     * Adjusts actual min and max scale values so that the axis starts and ends\r\n     * at \"nice\" values, unless `strictMinMax` is set.\r\n     *\r\n     * The `difference` can be something else than `max - min`, because of the\r\n     * axis breaks.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param min        [description]\r\n     * @param max        [description]\r\n     * @param difference [description]\r\n     * @param gridCount  [description]\r\n     * @param strictMode [description]\r\n     * @return [description]\r\n     */\r\n    DurationAxis.prototype.adjustMinMax = function (min, max, difference, gridCount, strictMode) {\r\n        var minMaxStep;\r\n        var timeUnit = this.baseUnit;\r\n        // we don't allow to go to smaller units, setting so to avoid invalidation\r\n        this.setPropertyValue(\"maxPrecision\", 0);\r\n        if (timeUnit == \"millisecond\" || timeUnit == \"second\" || timeUnit == \"minute\" || timeUnit == \"hour\") {\r\n            // will fail if 0\r\n            if (gridCount <= 1) {\r\n                gridCount = 1;\r\n            }\r\n            gridCount = Math.round(gridCount);\r\n            var initialMin = min;\r\n            var initialMax = max;\r\n            // in case min and max is the same, use max\r\n            if (difference === 0) {\r\n                difference = Math.abs(max);\r\n            }\r\n            var step = difference / gridCount;\r\n            var divisors = [60, 30, 20, 15, 10, 2, 1];\r\n            var realDivisor = 1;\r\n            if (timeUnit == \"hour\") {\r\n                divisors = [24, 12, 6, 4, 2, 1];\r\n            }\r\n            try {\r\n                for (var divisors_1 = tslib_1.__values(divisors), divisors_1_1 = divisors_1.next(); !divisors_1_1.done; divisors_1_1 = divisors_1.next()) {\r\n                    var divisor = divisors_1_1.value;\r\n                    if (difference / divisor > gridCount) {\r\n                        realDivisor = divisor;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (divisors_1_1 && !divisors_1_1.done && (_a = divisors_1.return)) _a.call(divisors_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            var count = Math.ceil(((max - min) / realDivisor) / gridCount);\r\n            var exponent = Math.log(Math.abs(count)) * Math.LOG10E;\r\n            var power = Math.pow(10, Math.floor(exponent)) / 10;\r\n            var reducedCount = count / power;\r\n            // find closest to divisor\r\n            var closest = $math.closest(divisors, reducedCount);\r\n            count = closest * power;\r\n            step = realDivisor * count;\r\n            // TODO can this be removed ?\r\n            this.durationFormatter.getValueUnit(step, this.baseUnit);\r\n            min = Math.floor(min / step) * step;\r\n            max = Math.ceil(max / step) * step;\r\n            if (strictMode) {\r\n                min -= step;\r\n                if (min < 0 && initialMin >= 0) {\r\n                    min = 0;\r\n                }\r\n                max += step;\r\n                if (max > 0 && initialMax <= 0) {\r\n                    max = 0;\r\n                }\r\n            }\r\n            minMaxStep = { min: min, max: max, step: step };\r\n        }\r\n        else {\r\n            minMaxStep = _super.prototype.adjustMinMax.call(this, min, max, difference, gridCount, strictMode);\r\n        }\r\n        // choose duration formatter based on step\r\n        this.axisDurationFormat = this.durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, this.baseUnit);\r\n        return minMaxStep;\r\n        var e_1, _a;\r\n    };\r\n    Object.defineProperty(DurationAxis.prototype, \"tooltipDurationFormat\", {\r\n        /**\r\n         * @return Duration format for axis labels\r\n         */\r\n        get: function () {\r\n            return this._tooltipDurationFormat;\r\n        },\r\n        /**\r\n         * A special duration format to apply axis tooltips.\r\n         *\r\n         * Will use same format as for labels, if not set.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information.\r\n         * @param value  Duration format for axis labels\r\n         */\r\n        set: function (value) {\r\n            this._tooltipDurationFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns text to show in a axis tooltip, based on specific position within\r\n     * axis.\r\n     *\r\n     * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n     * chart, or explicitly for this Axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position (px)\r\n     * @return Label (numeric value)\r\n     */\r\n    DurationAxis.prototype.getTooltipText = function (position) {\r\n        var value = $math.round(this.positionToValue(position), this._stepDecimalPlaces);\r\n        var valueStr = this.formatLabel(value, this.tooltipDurationFormat);\r\n        if (!this._adapterO) {\r\n            return valueStr;\r\n        }\r\n        else {\r\n            return this._adapterO.apply(\"getTooltipText\", valueStr);\r\n        }\r\n    };\r\n    Object.defineProperty(DurationAxis.prototype, \"baseUnit\", {\r\n        /**\r\n         * @return Base unit\r\n         */\r\n        get: function () {\r\n            return this._baseUnit;\r\n        },\r\n        /**\r\n         * A base unit (granularity) of data.\r\n         *\r\n         * Used to indicate what are the base units of your data.\r\n         *\r\n         * Available options: \"millisecond\", \"second\" (default), \"minute\", \"hour\",\r\n         * \"day\", \"week\", \"month\", \"year\".\r\n         *\r\n         * @default \"second\"\r\n         * @param timeUnit\r\n         */\r\n        set: function (timeUnit) {\r\n            if (this._baseUnit != timeUnit) {\r\n                this._baseUnit = timeUnit;\r\n                this.durationFormatter.baseUnit = timeUnit;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all properties and related data from a different instance of Axis.\r\n     *\r\n     * @param source Source Axis\r\n     */\r\n    DurationAxis.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.baseUnit = source.baseUnit;\r\n    };\r\n    return DurationAxis;\r\n}(ValueAxis));\r\nexport { DurationAxis };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DurationAxis\"] = DurationAxis;\r\nregistry.registeredClasses[\"DurationAxisDataItem\"] = DurationAxisDataItem;\r\n//# sourceMappingURL=DurationAxis.js.map","/**\r\n * Bullet module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar CircleBullet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CircleBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CircleBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CircleBullet\";\r\n        var circle = _this.createChild(Circle);\r\n        circle.shouldClone = false;\r\n        circle.radius = 5;\r\n        circle.isMeasured = false;\r\n        _this.circle = circle;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[CircleBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    CircleBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.circle.copyFrom(source.circle);\r\n    };\r\n    return CircleBullet;\r\n}(Bullet));\r\nexport { CircleBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;\r\n//# sourceMappingURL=CircleBullet.js.map","/**\r\n * Bullet module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar ErrorBullet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ErrorBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ErrorBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ErrorBullet\";\r\n        _this.errorLine = _this.createChild(Sprite);\r\n        _this.errorLine.shouldClone = false;\r\n        _this.width = 20;\r\n        _this.height = 20;\r\n        _this.strokeOpacity = 1;\r\n        _this.isDynamic = true;\r\n        return _this;\r\n    }\r\n    ErrorBullet.prototype.validatePosition = function () {\r\n        _super.prototype.validatePosition.call(this);\r\n        var w = this.pixelWidth / 2;\r\n        var h = this.pixelHeight / 2;\r\n        this.errorLine.path = $path.moveTo({ x: -w, y: -h }) + $path.lineTo({ x: w, y: -h }) + $path.moveTo({ x: 0, y: -h }) + $path.lineTo({ x: 0, y: h }) + $path.moveTo({ x: -w, y: h }) + $path.lineTo({ x: w, y: h });\r\n    };\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[ErrorBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    ErrorBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.errorLine.copyFrom(source.errorLine);\r\n    };\r\n    return ErrorBullet;\r\n}(Bullet));\r\nexport { ErrorBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;\r\n//# sourceMappingURL=ErrorBullet.js.map","/**\r\n * Functionality for drawing simple NavigationBar.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { TextLink } from \"../../core/elements/TextLink\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[NavigationBar]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar NavigationBarDataItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationBarDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NavigationBarDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"NavigationBarDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(NavigationBarDataItem.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.properties[\"name\"];\r\n        },\r\n        /**\r\n         * Name of the navigation bar item.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"name\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return NavigationBarDataItem;\r\n}(DataItem));\r\nexport { NavigationBarDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * NavigationBar class can be used to create a multi-level breadcrumb-style\r\n * navigation control.\r\n *\r\n * @see {@link INavigationBarEvents} for a list of available events\r\n * @see {@link INavigationBarAdapters} for a list of available Adapters\r\n * @todo Implement better\r\n * @important\r\n */\r\nvar NavigationBar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationBar, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NavigationBar() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"NavigationBar\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var textLink = new TextLink();\r\n        textLink.valign = \"middle\";\r\n        textLink.paddingTop = 8;\r\n        textLink.paddingBottom = 8;\r\n        _this.paddingBottom = 2;\r\n        _this.links = new ListTemplate(textLink);\r\n        _this._disposers.push(new ListDisposer(_this.links));\r\n        _this._disposers.push(textLink);\r\n        _this._linksIterator = new $iter.ListIterator(_this.links, function () { return _this.links.create(); });\r\n        _this._linksIterator.createNewItems = true;\r\n        var triangle = new Triangle();\r\n        triangle.direction = \"right\";\r\n        triangle.width = 8;\r\n        triangle.height = 12;\r\n        triangle.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        triangle.fillOpacity = 0.5;\r\n        triangle.valign = \"middle\";\r\n        triangle.marginLeft = 10;\r\n        triangle.marginRight = 10;\r\n        _this.separators = new ListTemplate(triangle);\r\n        _this._disposers.push(new ListDisposer(_this.separators));\r\n        _this._disposers.push(triangle);\r\n        var activeLink = new TextLink();\r\n        _this.activeLink = activeLink;\r\n        activeLink.copyFrom(textLink);\r\n        activeLink.valign = \"middle\";\r\n        activeLink.fontWeight = \"bold\";\r\n        _this.width = percent(100);\r\n        _this.layout = \"grid\";\r\n        _this.dataFields.name = \"name\";\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Completely redraws the navigation bar.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    NavigationBar.prototype.validateDataElements = function () {\r\n        this.removeChildren();\r\n        this._linksIterator.reset();\r\n        _super.prototype.validateDataElements.call(this);\r\n        //@todo: dispose\r\n    };\r\n    /**\r\n     * Creates a visual element for a data item (nav item).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    NavigationBar.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        var textLink;\r\n        if (dataItem.index < this.dataItems.length - 1) {\r\n            textLink = this._linksIterator.getLast();\r\n            textLink.parent = this;\r\n            var separator = this.separators.create();\r\n            separator.parent = this;\r\n            separator.valign = \"middle\";\r\n        }\r\n        else {\r\n            textLink = this.activeLink;\r\n            textLink.events.copyFrom(this.links.template.events);\r\n            textLink.hide(0);\r\n            textLink.show();\r\n            textLink.parent = this;\r\n        }\r\n        textLink.dataItem = dataItem;\r\n        textLink.text = dataItem.name;\r\n        textLink.validate();\r\n    };\r\n    return NavigationBar;\r\n}(Component));\r\nexport { NavigationBar };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NavigationBar\"] = NavigationBar;\r\nregistry.registeredClasses[\"NavigationBarDataItem\"] = NavigationBarDataItem;\r\n//# sourceMappingURL=NavigationBar.js.map","/**\r\n * Cursor module\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { system } from \"../../core/System\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Main Cursor class with common cursor functionality.\r\n *\r\n * Chart-specific cursors must extend this class.\r\n *\r\n * @see {@link ICursorEvents} for a list of available events\r\n * @see {@link ICursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n * @todo Should we allow changing `_generalBehavior`?\r\n */\r\nvar Cursor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Cursor, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Cursor() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Current cursor position during selection.\r\n         *\r\n         * @todo Better description\r\n         */\r\n        _this.point = { x: 0, y: 0 };\r\n        /**\r\n         * Specifies the rules when cursor needs to be moved or hidden.\r\n         */\r\n        _this._stick = \"none\";\r\n        _this.className = \"Cursor\";\r\n        // Set defaults\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.shouldClone = false;\r\n        _this.hide(0);\r\n        _this.trackable = true;\r\n        _this.clickable = true;\r\n        _this.isMeasured = false;\r\n        // Add events on body to trigger down and up events (to start zooming or\r\n        // selection)\r\n        var interaction = getInteraction();\r\n        _this._disposers.push(interaction.body.events.on(\"down\", _this.handleCursorDown, _this));\r\n        _this._disposers.push(interaction.body.events.on(\"up\", _this.handleCursorUp, _this));\r\n        _this._disposers.push(interaction.body.events.on(\"track\", _this.handleCursorMove, _this));\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Handle pointer movement in document and update cursor position as needed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event\r\n     */\r\n    Cursor.prototype.handleCursorMove = function (event) {\r\n        if (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch)) {\r\n            return;\r\n        }\r\n        if (((this._generalBehavior != \"zoom\" && this._generalBehavior != \"pan\") || !this.downPoint) && !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n            // We want to let zoom/pan continue even if cursor is outside chart area\r\n            if (!this.isHidden || !this.isHiding) {\r\n                this.hide();\r\n            }\r\n            return;\r\n        }\r\n        var local = $utils.documentPointToSprite(event.pointer.point, this);\r\n        if (this._stick == \"hard\" && this._stickPoint) {\r\n            local = this._stickPoint;\r\n        }\r\n        if (this._stick == \"soft\" && this._stickPoint) {\r\n            if (!this.fitsToBounds(local)) {\r\n                local = this._stickPoint;\r\n            }\r\n        }\r\n        this.triggerMove(local);\r\n        return local;\r\n    };\r\n    /**\r\n     * Hides actual SVG elements and handles hiding animations.\r\n     *\r\n     * @param duration  Fade out duration (ms)\r\n     * @return Fade out duration (ms)\r\n     * @ignore\r\n     */\r\n    Cursor.prototype.hideReal = function (duration) {\r\n        if ((this._stick == \"hard\" || this._stick == \"soft\") && this._stickPoint) {\r\n            return;\r\n        }\r\n        return _super.prototype.hideReal.call(this, duration);\r\n    };\r\n    /**\r\n     * Places the cursor at specific point.\r\n     *\r\n     * The second parameter has following options:\r\n     *\r\n     * `\"none\"` - placed cursor will only be there until mouse/touch moves, then\r\n     * it either moves to a new place (if pointer over plot area) or is hidden.\r\n     *\r\n     * `\"soft\"` - cursor will stay in the place if mouse/touch is happening\r\n     * outside chart, but will move to a new place whe plot area is hovered or\r\n     * touched.\r\n     *\r\n     * `\"hard\"` - cursor will stay in place no matter what, until it is moved by\r\n     * another `triggerMove()` call.\r\n     *\r\n     * @param point  Point to place cursor at\r\n     * @param stick  Level of cursor stickiness to the place\r\n     */\r\n    Cursor.prototype.triggerMove = function (point, stick) {\r\n        point.x = $math.round(point.x, 1);\r\n        point.y = $math.round(point.y, 1);\r\n        if (stick) {\r\n            this._stick = stick;\r\n        }\r\n        if (stick == \"hard\" || stick == \"soft\") {\r\n            this._stickPoint = point;\r\n        }\r\n        this.triggerMoveReal(point);\r\n    };\r\n    /**\r\n     * Places the cursor at specific point.\r\n     *\r\n     * @param point Point to place cursor at\r\n     */\r\n    Cursor.prototype.triggerMoveReal = function (point) {\r\n        if (this.point.x != point.x || this.point.y != point.y) {\r\n            this.point = point;\r\n            this.invalidatePosition();\r\n            // hide cursor if it's out of bounds\r\n            if (this.fitsToBounds(point)) {\r\n                this.show(0);\r\n            }\r\n            else {\r\n                // unless we are selecting (mouse is down)\r\n                if (!this.downPoint) {\r\n                    this.hide(0);\r\n                }\r\n            }\r\n            if (this.visible) {\r\n                this.getPositions();\r\n                this.dispatch(\"cursorpositionchanged\"); // not good to dispatch later (check step count example)\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Simulates pressing down (click/touch) action by a cursor.\r\n     *\r\n     * @param point               Point of action\r\n     */\r\n    Cursor.prototype.triggerDown = function (point) {\r\n        this.triggerDownReal(point);\r\n    };\r\n    /**\r\n     * Simulates pressing down (click/touch) action by a cursor.\r\n     *\r\n     * @param point               Point of action\r\n     */\r\n    Cursor.prototype.triggerDownReal = function (point) {\r\n        switch (this._generalBehavior) {\r\n            case \"zoom\":\r\n                this.dispatchImmediately(\"zoomstarted\");\r\n                break;\r\n            case \"select\":\r\n                this.dispatchImmediately(\"selectstarted\");\r\n                break;\r\n            case \"pan\":\r\n                this.dispatchImmediately(\"panstarted\");\r\n                getInteraction().setGlobalStyle(MouseCursorStyle.grabbing);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Simulates the action of release of the mouse down / touch.\r\n     *\r\n     * @param point               Point of action\r\n     */\r\n    Cursor.prototype.triggerUp = function (point) {\r\n        this.triggerUpReal(point);\r\n    };\r\n    /**\r\n     * Simulates the action of release of the mouse down / touch.\r\n     *\r\n     * @param point               Point of action\r\n     */\r\n    Cursor.prototype.triggerUpReal = function (point) {\r\n        system.requestFrame();\r\n        this.updatePoint(this.upPoint);\r\n        var interaction = getInteraction();\r\n        if ($math.getDistance(this._upPointOrig, this._downPointOrig) > interaction.getHitOption(this.interactions, \"hitTolerance\")) {\r\n            switch (this._generalBehavior) {\r\n                case \"zoom\":\r\n                    this.dispatch(\"zoomended\");\r\n                    break;\r\n                case \"select\":\r\n                    this.dispatch(\"selectended\");\r\n                    break;\r\n                case \"pan\":\r\n                    this.dispatch(\"panended\");\r\n                    interaction.setGlobalStyle(MouseCursorStyle.default);\r\n                    break;\r\n            }\r\n            this.downPoint = undefined;\r\n            this.updateSelection();\r\n        }\r\n        /*\r\n        else {\r\n            \r\n            if(this._generalBehavior == \"select\"){\r\n                this.dispatchImmediately(\"selectended\");\r\n            }\r\n            this.dispatchImmediately(\"behaviorcanceled\");\r\n            interaction.setGlobalStyle(MouseCursorStyle.default);\r\n            this.downPoint = undefined;\r\n        }*/\r\n    };\r\n    /**\r\n     * Updates selection dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Cursor.prototype.updateSelection = function () {\r\n    };\r\n    /**\r\n     * Updates cursors current positions.\r\n     */\r\n    Cursor.prototype.getPositions = function () {\r\n        // positions are used by axes or series\r\n        this.xPosition = this.point.x / this.innerWidth;\r\n        this.yPosition = 1 - this.point.y / this.innerHeight;\r\n    };\r\n    /**\r\n     * Handles pointer down event so we can start zoom or selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original event\r\n     */\r\n    Cursor.prototype.handleCursorDown = function (event) {\r\n        if (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch) || !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n            return;\r\n        }\r\n        // Get local point\r\n        var local = $utils.documentPointToSprite(event.pointer.point, this);\r\n        this._downPointOrig = { x: local.x, y: local.y };\r\n        // We need to cancel the event to prevent gestures on touch devices\r\n        if (event.event.cancelable && this.shouldPreventGestures(event.touch) && this.fitsToBounds(local)) {\r\n            event.event.preventDefault();\r\n        }\r\n        // Make this happen\r\n        this.triggerMove(local);\r\n        this.triggerDown(local);\r\n    };\r\n    /**\r\n     * Determines whether Cursor should prevent default action on move.\r\n     *\r\n     * Child classes should override this as necessary.\r\n     *\r\n     * @return Prevent default?\r\n     */\r\n    Cursor.prototype.shouldPreventGestures = function (touch) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Updates the coordinates of where pointer down event occurred\r\n     * (was pressed).\r\n     */\r\n    Cursor.prototype.updatePoint = function (point) {\r\n    };\r\n    /**\r\n     * Handles pointer up event - finishes zoom or selection action.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original event\r\n     */\r\n    Cursor.prototype.handleCursorUp = function (event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        if (((this._generalBehavior != \"zoom\" && this._generalBehavior != \"pan\") || !this.downPoint) && !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n            return;\r\n        }\r\n        var local = $utils.documentPointToSprite(event.pointer.point, this);\r\n        this._upPointOrig = { x: local.x, y: local.y };\r\n        this.triggerMove(local);\r\n        this.triggerUp(local);\r\n    };\r\n    Object.defineProperty(Cursor.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart;\r\n        },\r\n        /**\r\n         * A reference to a [[Chart]] the cursor belongs to.\r\n         *\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart = value;\r\n            if ($type.hasValue(this._chart.plotContainer)) {\r\n                getInteraction().lockElement(this._chart.plotContainer.interactions);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Cursor;\r\n}(Container));\r\nexport { Cursor };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Cursor\"] = Cursor;\r\n//# sourceMappingURL=Cursor.js.map","/**\r\n * Cursor for XY chart\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Cursor } from \"./Cursor\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A cursor used on [[XYChart]].\r\n *\r\n * @see {@link IXYCursorEvents} for a list of available events\r\n * @see {@link IXYCursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n */\r\nvar XYCursor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(XYCursor, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYCursor() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Vertical cursor line element.\r\n         */\r\n        _this._lineX = new MutableValueDisposer();\r\n        /**\r\n         * Horizontal cursor line element.\r\n         */\r\n        _this._lineY = new MutableValueDisposer();\r\n        /**\r\n         * Horizontal [[Axis]].\r\n         */\r\n        _this._xAxis = new MutableValueDisposer();\r\n        /**\r\n         * Vertical [[Axis]].\r\n         */\r\n        _this._yAxis = new MutableValueDisposer();\r\n        _this.className = \"XYCursor\";\r\n        // Defaults\r\n        _this.behavior = \"zoomX\";\r\n        _this.maxPanOut = 0.1;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create selection element\r\n        var selection = _this.createChild(Sprite);\r\n        selection.shouldClone = false;\r\n        selection.fillOpacity = 0.2;\r\n        selection.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        selection.isMeasured = false;\r\n        selection.visible = false;\r\n        selection.interactionsEnabled = false;\r\n        _this.selection = selection;\r\n        _this._disposers.push(_this.selection);\r\n        // Create cursor's vertical line\r\n        var lineX = _this.createChild(Sprite);\r\n        lineX.shouldClone = false;\r\n        lineX.stroke = interfaceColors.getFor(\"grid\");\r\n        lineX.fill = color();\r\n        lineX.strokeDasharray = \"3,3\";\r\n        lineX.isMeasured = false;\r\n        lineX.strokeOpacity = 0.4;\r\n        lineX.interactionsEnabled = false;\r\n        lineX.y = 0; // important\r\n        _this.lineX = lineX;\r\n        _this._disposers.push(_this.lineX);\r\n        // Create cursor's horizontal line\r\n        var lineY = _this.createChild(Sprite);\r\n        lineY.shouldClone = false;\r\n        lineY.stroke = interfaceColors.getFor(\"grid\");\r\n        lineY.fill = color();\r\n        lineY.strokeDasharray = \"3,3\";\r\n        lineY.isMeasured = false;\r\n        lineY.strokeOpacity = 0.4;\r\n        lineY.interactionsEnabled = false;\r\n        lineY.x = 0; // important\r\n        _this.lineY = lineY;\r\n        _this._disposers.push(_this.lineY);\r\n        // Add handler for size changes\r\n        _this.events.on(\"sizechanged\", _this.updateSize, _this, false);\r\n        _this._disposers.push(_this._lineX);\r\n        _this._disposers.push(_this._lineY);\r\n        _this._disposers.push(_this._xAxis);\r\n        _this._disposers.push(_this._yAxis);\r\n        _this.mask = _this;\r\n        _this.hideSeriesTooltipsOnSelection = true;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates cursor element dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateSize = function () {\r\n        if (this.lineX) {\r\n            this.lineX.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.innerHeight });\r\n        }\r\n        if (this.lineY) {\r\n            this.lineY.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.innerWidth, y: 0 });\r\n        }\r\n    };\r\n    /**\r\n     * Updates selection dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateSelection = function () {\r\n        if (this._usesSelection) {\r\n            var downPoint = this.downPoint;\r\n            var behavior = this.behavior;\r\n            if (downPoint) {\r\n                var point = this.point;\r\n                if (this.lineX) {\r\n                    point.x = this.lineX.pixelX;\r\n                }\r\n                if (this.lineY) {\r\n                    point.y = this.lineY.pixelY;\r\n                }\r\n                var selection = this.selection;\r\n                var x = Math.min(point.x, downPoint.x);\r\n                var y = Math.min(point.y, downPoint.y);\r\n                var w = $math.round(Math.abs(downPoint.x - point.x), this._positionPrecision);\r\n                var h = $math.round(Math.abs(downPoint.y - point.y), this._positionPrecision);\r\n                switch (behavior) {\r\n                    case \"zoomX\":\r\n                        y = 0;\r\n                        h = this.pixelHeight;\r\n                        break;\r\n                    case \"zoomY\":\r\n                        x = 0;\r\n                        w = this.pixelWidth;\r\n                        break;\r\n                    case \"selectX\":\r\n                        y = 0;\r\n                        h = this.pixelHeight;\r\n                        break;\r\n                    case \"selectY\":\r\n                        x = 0;\r\n                        w = this.pixelWidth;\r\n                        break;\r\n                }\r\n                selection.x = x;\r\n                selection.y = y;\r\n                selection.path = $path.rectangle(w, h);\r\n                selection.validatePosition(); // otherwise Edge shoes some incorrect size rectangle\r\n            }\r\n            else {\r\n                if (this._generalBehavior != \"select\") {\r\n                    this.selection.hide();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.fixPoint = function (point) {\r\n        point.x = Math.max(0, point.x);\r\n        point.y = Math.max(0, point.y);\r\n        point.x = Math.min(this.pixelWidth, point.x);\r\n        point.y = Math.min(this.pixelHeight, point.y);\r\n        return point;\r\n    };\r\n    /**\r\n     * Places the cursor at specific point.\r\n     *\r\n     * @param point Point to place cursor at\r\n     */\r\n    XYCursor.prototype.triggerMoveReal = function (point) {\r\n        _super.prototype.triggerMoveReal.call(this, point);\r\n        if ((this.snapToSeries && !this.snapToSeries.isHidden)) {\r\n        }\r\n        else {\r\n            this.updateLinePositions(point);\r\n        }\r\n        if (this.downPoint && $math.getDistance(this.downPoint, point) > 3) {\r\n            if (this._generalBehavior == \"pan\") {\r\n                this.getPanningRanges();\r\n                this.dispatch(\"panning\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYCursor.prototype.updateLinePositions = function (point) {\r\n        point = this.fixPoint(this.point);\r\n        if (this.lineX && this.lineX.visible && !this.xAxis) {\r\n            this.lineX.x = point.x;\r\n        }\r\n        if (this.lineY && this.lineY.visible && !this.yAxis) {\r\n            this.lineY.y = point.y;\r\n        }\r\n        this.updateSelection();\r\n    };\r\n    XYCursor.prototype.triggerDownReal = function (point) {\r\n        if (this.visible && !this.isHiding) {\r\n            if (this._generalBehavior == \"select\") {\r\n                this.selection.parent = this.parent;\r\n            }\r\n            if (this.fitsToBounds(point)) {\r\n                this.downPoint = { x: point.x, y: point.y };\r\n                this.updatePoint(point);\r\n                //this.updateLinePositions(point); // otherwise lines won't be in correct position and touch won't work fine\r\n                this.point.x = this.downPoint.x;\r\n                this.point.y = this.downPoint.y;\r\n                var selection = this.selection;\r\n                var selectionX = this.downPoint.x;\r\n                var selectionY = this.downPoint.y;\r\n                if (this._usesSelection) {\r\n                    selection.x = selectionX;\r\n                    selection.y = selectionY;\r\n                    selection.path = \"\";\r\n                    selection.show();\r\n                }\r\n                _super.prototype.triggerDownReal.call(this, point);\r\n            }\r\n            else {\r\n                this.downPoint = undefined;\r\n            }\r\n        }\r\n        else {\r\n            this.downPoint = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Updates the coordinates of where pointer down event occurred\r\n     * (was pressed).\r\n     */\r\n    XYCursor.prototype.updatePoint = function (point) {\r\n        if (this.lineX) {\r\n            point.x = this.lineX.pixelX;\r\n        }\r\n        if (this.lineY) {\r\n            point.y = this.lineY.pixelY;\r\n        }\r\n    };\r\n    XYCursor.prototype.triggerUpReal = function (point) {\r\n        if ($math.getDistance(this._upPointOrig, this._downPointOrig) > getInteraction().getHitOption(this.interactions, \"hitTolerance\")) {\r\n            if (this.downPoint) {\r\n                this.upPoint = point;\r\n                this.updatePoint(this.upPoint);\r\n                if (this._generalBehavior != \"pan\") {\r\n                    this.getRanges();\r\n                }\r\n                if (this._generalBehavior != \"select\") {\r\n                    this.selection.hide();\r\n                }\r\n                _super.prototype.triggerUpReal.call(this, point);\r\n            }\r\n        }\r\n        else {\r\n            if (this._generalBehavior != \"select\") {\r\n                this.selection.hide(0);\r\n            }\r\n            else {\r\n                this.xRange = undefined;\r\n                this.yRange = undefined;\r\n                this.dispatchImmediately(\"selectended\");\r\n            }\r\n            // reset cursor style, just in case\r\n            if (this._generalBehavior == \"pan\") {\r\n                var interaction = getInteraction();\r\n                interaction.setGlobalStyle(MouseCursorStyle.default);\r\n            }\r\n            this.dispatchImmediately(\"behaviorcanceled\");\r\n        }\r\n        this.downPoint = undefined;\r\n        this.dispatch(\"cursorpositionchanged\");\r\n    };\r\n    /**\r\n     * [getRanges description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    XYCursor.prototype.getPanningRanges = function () {\r\n        var startX = $math.round(this.downPoint.x / this.innerWidth, 5);\r\n        var startY = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\r\n        var currentX = $math.round(this.point.x / this.innerWidth, 5);\r\n        var currentY = 1 - $math.round(this.point.y / this.innerHeight, 5);\r\n        var deltaX = startX - currentX;\r\n        var deltaY = startY - currentY;\r\n        this.xRange = { start: deltaX, end: 1 + deltaX };\r\n        this.yRange = { start: deltaY, end: 1 + deltaY };\r\n        if (this.behavior == \"panX\") {\r\n            this.yRange.start = 0;\r\n            this.yRange.end = 1;\r\n        }\r\n        if (this.behavior == \"panY\") {\r\n            this.xRange.start = 0;\r\n            this.xRange.end = 1;\r\n        }\r\n    };\r\n    /**\r\n     * [getRanges description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    XYCursor.prototype.getRanges = function () {\r\n        if (this.lineX) {\r\n            this.upPoint.x = this.lineX.pixelX;\r\n        }\r\n        if (this.lineY) {\r\n            this.upPoint.y = this.lineY.pixelY;\r\n        }\r\n        // @todo Is this needed?\r\n        $utils.used(this.selection);\r\n        var startX = $math.round(this.downPoint.x / this.innerWidth, 5);\r\n        var endX = $math.round((this.upPoint.x) / this.innerWidth, 5);\r\n        var startY = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\r\n        var endY = 1 - $math.round((this.upPoint.y) / this.innerHeight, 5);\r\n        this.xRange = { start: $math.min(startX, endX), end: $math.max(startX, endX) };\r\n        this.yRange = { start: $math.min(startY, endY), end: $math.max(startY, endY) };\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"behavior\", {\r\n        /**\r\n         * Behavior\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"behavior\");\r\n        },\r\n        /**\r\n         * Cursor's behavior when it's moved with pointer down:\r\n         *\r\n         * * \"zoomX\" - zooms horizontally;\r\n         * * \"zoomY\" - zooms vertically;\r\n         * * \"zoomXY\" - zooms both horizontally and vertically;\r\n         * * \"selectX\" - selects a range horizontally;\r\n         * * \"selectY\" - selects a range vertically;\r\n         * * \"selectXY\" - selects a range both horizontally and vertically;\r\n         * * \"panX\" - moves (pans) current selection horizontally;\r\n         * * \"panY\" - moves (pans) current selection vertically;\r\n         * * \"panXY\" - moves (pans) current selection both horizontally and vertically;\r\n         * * \"none\" - does nothing with pointer down.\r\n         *\r\n         * E.g. \"zoomXY\" will mean that pressing a mouse (or touching) over plot area\r\n         * and dragging it will start zooming the chart.\r\n         *\r\n         * @param value Bheavior\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"behavior\", value, true);\r\n            this._usesSelection = false;\r\n            if (value.indexOf(\"zoom\") != -1) {\r\n                this._generalBehavior = \"zoom\";\r\n                this._usesSelection = true;\r\n            }\r\n            if (value.indexOf(\"select\") != -1) {\r\n                this._generalBehavior = \"select\";\r\n                this._usesSelection = true;\r\n            }\r\n            if (value.indexOf(\"pan\") != -1) {\r\n                this._generalBehavior = \"pan\";\r\n                this._usesSelection = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Determines whether Cursor should prevent default action on move.\r\n     *\r\n     * If cursor's behavior is \"none\", it should not obstruct the page scrolling.\r\n     *\r\n     * @return Prevent default?\r\n     */\r\n    XYCursor.prototype.shouldPreventGestures = function (touch) {\r\n        return (!this.interactions.isTouchProtected || !touch) && this.behavior != \"none\";\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"fullWidthLineX\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthLineX\");\r\n        },\r\n        /**\r\n         * Cursor's horizontal line is expanded to take full width of the related\r\n         * Axis' cell/category.\r\n         *\r\n         * NOTE: this setting will work properly if `xAxis` is set and only in case\r\n         * `xAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n         *\r\n         * @param value Full width?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthLineX\", value);\r\n            if (!value) {\r\n                this.updateSize();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"fullWidthLineY\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthLineY\");\r\n        },\r\n        /**\r\n         * Cursor's vertical line is expanded to take full width of the related\r\n         * Axis' cell/category.\r\n         *\r\n         * NOTE: this setting will work properly if `yAxis` is set and only in case\r\n         * `yAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n         *\r\n         * @param value Full width?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthLineY\", value);\r\n            if (!value) {\r\n                this.updateSize();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"hideSeriesTooltipsOnSelection\", {\r\n        /**\r\n         * @return hide tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideSeriesTooltipsOnSelection\");\r\n        },\r\n        /**\r\n         * If set to `true` this will hide series tooltips when selecting with cursor.\r\n         *\r\n         * @since 4.5.15\r\n         * @param  value  hide tooltips?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideSeriesTooltipsOnSelection\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"maxPanOut\", {\r\n        /**\r\n         * @return Full width?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxPanOut\");\r\n        },\r\n        /**\r\n         * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.\r\n         * This setting specifies relative value by how much we can pan out the plot\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxPanOut\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"xAxis\", {\r\n        /**\r\n         * @return X axis\r\n         */\r\n        get: function () {\r\n            return this._xAxis.get();\r\n        },\r\n        /**\r\n         * A reference to X [[Axis]].\r\n         *\r\n         * An XY cursor can live without `xAxis` set. You set xAxis for cursor when\r\n         * you have axis tooltip enabled and you want cursor line to be at the same\r\n         * position as tooltip.\r\n         *\r\n         * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n         * [[ValueAxis]].\r\n         *\r\n         * @todo Description (review)\r\n         * @param axis X axis\r\n         */\r\n        set: function (axis) {\r\n            var _this = this;\r\n            if (this._xAxis.get() != axis) {\r\n                this._xAxis.set(axis, new MultiDisposer([\r\n                    axis.tooltip.events.on(\"positionchanged\", this.handleXTooltipPosition, this, false),\r\n                    axis.events.on(\"rangechangestarted\", function (event) {\r\n                        _this.hide(0);\r\n                        _this.__disabled = true;\r\n                    }, undefined, false),\r\n                    axis.events.on(\"rangechangeended\", function (event) {\r\n                        _this.__disabled = false;\r\n                        _this.hide(0);\r\n                        _this.dispatch(\"cursorpositionchanged\");\r\n                    }, undefined, false)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"yAxis\", {\r\n        /**\r\n         * @return Y Axis\r\n         */\r\n        get: function () {\r\n            return this._yAxis.get();\r\n        },\r\n        /**\r\n         * A reference to Y [[Axis]].\r\n         *\r\n         * An XY cursor can live without `yAxis` set. You set xAxis for cursor when\r\n         * you have axis tooltip enabled and you want cursor line to be at the same\r\n         * position as tooltip.\r\n         *\r\n         * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n         * [[ValueAxis]].\r\n         *\r\n         * @todo Description (review)\r\n         * @param axis Y axis\r\n         */\r\n        set: function (axis) {\r\n            var _this = this;\r\n            if (this._yAxis.get() != axis) {\r\n                this._yAxis.set(axis, new MultiDisposer([\r\n                    axis.tooltip.events.on(\"positionchanged\", this.handleYTooltipPosition, this, false),\r\n                    axis.events.on(\"rangechangestarted\", function (event) {\r\n                        _this.hide(0);\r\n                        _this.__disabled = true;\r\n                    }, undefined, false),\r\n                    axis.events.on(\"rangechangeended\", function (event) {\r\n                        _this.__disabled = false;\r\n                        _this.hide(0);\r\n                        _this.dispatch(\"cursorpositionchanged\");\r\n                    }, undefined, false)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates Cursor's position when axis tooltip changes position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original Axis event\r\n     */\r\n    XYCursor.prototype.handleXTooltipPosition = function (event) {\r\n        var tooltip = this.xAxis.tooltip;\r\n        var point = $utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n        var x = point.x;\r\n        point.y = 1;\r\n        if (this.lineX) {\r\n            this.lineX.x = x;\r\n            if (!this.fitsToBounds(point)) {\r\n                this.hide();\r\n            }\r\n        }\r\n        if (this.xAxis && this.fullWidthLineX) {\r\n            var startPoint = this.xAxis.currentItemStartPoint;\r\n            var endPoint = this.xAxis.currentItemEndPoint;\r\n            if (startPoint && endPoint) {\r\n                this.lineX.x = x;\r\n                var width = endPoint.x - startPoint.x;\r\n                this.lineX.path = $path.rectangle(width, this.innerHeight, -width / 2);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates Cursor's position when Y axis changes position or scale.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Original Axis event\r\n     */\r\n    XYCursor.prototype.handleYTooltipPosition = function (event) {\r\n        var tooltip = this.yAxis.tooltip;\r\n        var point = $utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n        var y = point.y;\r\n        point.x = 1;\r\n        if (this.lineY) {\r\n            this.lineY.y = y;\r\n            if (!this.fitsToBounds(point)) {\r\n                this.hide();\r\n            }\r\n        }\r\n        if (this.yAxis && this.fullWidthLineY) {\r\n            var startPoint = this.yAxis.currentItemStartPoint;\r\n            var endPoint = this.yAxis.currentItemEndPoint;\r\n            if (startPoint && endPoint) {\r\n                this.lineY.y = y;\r\n                var height = endPoint.y - startPoint.y;\r\n                this.lineY.path = $path.rectangle(this.innerWidth, height, 0, -height / 2);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"lineX\", {\r\n        /**\r\n         * @return Line element\r\n         */\r\n        get: function () {\r\n            return this._lineX.get();\r\n        },\r\n        /**\r\n         * A Line element to use for X axis.\r\n         *\r\n         * @param lineX Line\r\n         */\r\n        set: function (lineX) {\r\n            if (lineX) {\r\n                lineX.setElement(this.paper.add(\"path\"));\r\n                this._lineX.set(lineX, lineX.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n                lineX.interactionsEnabled = false;\r\n                lineX.parent = this;\r\n            }\r\n            else {\r\n                this._lineX.reset();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"lineY\", {\r\n        /**\r\n         * @return Line element\r\n         */\r\n        get: function () {\r\n            return this._lineY.get();\r\n        },\r\n        /**\r\n         * A Line element to use Y axis.\r\n         *\r\n         * @param lineY Line\r\n         */\r\n        set: function (lineY) {\r\n            if (lineY) {\r\n                lineY.setElement(this.paper.add(\"path\"));\r\n                this._lineY.set(lineY, lineY.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n                lineY.parent = this;\r\n                lineY.interactionsEnabled = false;\r\n            }\r\n            else {\r\n                this._lineY.reset();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYCursor.prototype, \"selection\", {\r\n        /**\r\n         * @return Selection rectangle\r\n         */\r\n        get: function () {\r\n            return this._selection;\r\n        },\r\n        /**\r\n         * A selection element ([[Sprite]]).\r\n         *\r\n         * @param selection Selection rectangle\r\n         */\r\n        set: function (selection) {\r\n            this._selection = selection;\r\n            if (selection) {\r\n                selection.element = this.paper.add(\"path\");\r\n                selection.parent = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * Looks if `xAxis` and `yAxis` is set via ID in JSON config, and replaces\r\n     * with real references.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYCursor.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up axes\r\n            if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n                if (this.map.hasKey(config.xAxis)) {\r\n                    config.xAxis = this.map.getKey(config.xAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`\");\r\n                    delete config.xAxis;\r\n                }\r\n            }\r\n            if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n                if (this.map.hasKey(config.yAxis)) {\r\n                    config.yAxis = this.map.getKey(config.yAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`\");\r\n                    delete config.yAxis;\r\n                }\r\n            }\r\n            if ($type.hasValue(config.snapToSeries) && $type.isString(config.snapToSeries)) {\r\n                if (this.map.hasKey(config.snapToSeries)) {\r\n                    config.snapToSeries = this.map.getKey(config.snapToSeries);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYCursor] No series with id \\\"\" + config.snapToSeries + \"\\\" found for `series`\");\r\n                    delete config.snapToSeries;\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    Object.defineProperty(XYCursor.prototype, \"snapToSeries\", {\r\n        /**\r\n         * @return {XYSeries}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapToSeries\");\r\n        },\r\n        /**\r\n         * Specifies to which series cursor lines should be snapped. Works when one\r\n         * of the axis is `DateAxis` or `CategoryAxis`.\r\n         *\r\n         * @param {XYSeries}\r\n         */\r\n        set: function (series) {\r\n            if (this.setPropertyValue(\"snapToSeries\", series)) {\r\n                if (this._snapToDisposer) {\r\n                    this._snapToDisposer.dispose();\r\n                }\r\n                if (series) {\r\n                    this._snapToDisposer = series.events.on(\"tooltipshownat\", this.handleSnap, this, false);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [handleSnap description]\r\n     *\r\n     * @ignore\r\n     * @todo Description\r\n     */\r\n    XYCursor.prototype.handleSnap = function () {\r\n        var series = this.snapToSeries;\r\n        var x = series.getTooltipX();\r\n        var y = series.getTooltipY();\r\n        if (this.xAxis) {\r\n            if (this.xAxis.renderer.opposite) {\r\n                y -= this.pixelHeight;\r\n            }\r\n        }\r\n        this.point = { x: x, y: y };\r\n        this.getPositions();\r\n        var xx = x;\r\n        var yy = y;\r\n        x -= this.pixelWidth;\r\n        if (this.yAxis) {\r\n            if (this.yAxis.renderer.opposite) {\r\n                x += this.pixelWidth;\r\n            }\r\n        }\r\n        var tooltip = series.tooltip;\r\n        var duration = tooltip.animationDuration;\r\n        var easing = tooltip.animationEasing;\r\n        if (series.baseAxis == series.xAxis) {\r\n            series.yAxis.showTooltipAtPosition(this.yPosition);\r\n        }\r\n        if (series.baseAxis == series.yAxis) {\r\n            series.xAxis.showTooltipAtPosition(this.xPosition);\r\n        }\r\n        this.lineX.animate([{ property: \"y\", to: y }], duration, easing);\r\n        this.lineY.animate([{ property: \"x\", to: x }], duration, easing);\r\n        if (!this.xAxis) {\r\n            this.lineX.animate([{ property: \"x\", to: xx }], duration, easing);\r\n        }\r\n        if (!this.yAxis) {\r\n            this.lineY.animate([{ property: \"y\", to: yy }], duration, easing);\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    XYCursor.prototype.dispose = function () {\r\n        this.hide(0);\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return XYCursor;\r\n}(Cursor));\r\nexport { XYCursor };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYCursor\"] = XYCursor;\r\n//# sourceMappingURL=XYCursor.js.map","import * as tslib_1 from \"tslib\";\r\nimport { XYCursor } from \"./XYCursor\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Cursor for [[RadarChart]].\r\n *\r\n * @see {@link IRadarCursorEvents} for a list of available events\r\n * @see {@link IRadarCursorAdapters} for a list of available Adapters\r\n */\r\nvar RadarCursor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadarCursor, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarCursor() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"RadarCursor\";\r\n        _this.radius = percent(100);\r\n        _this.innerRadius = percent(0);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        _this.mask = undefined;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Checks if point is within bounds of a container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point  Point to check\r\n     * @return Fits within container?\r\n     */\r\n    RadarCursor.prototype.fitsToBounds = function (point) {\r\n        var radius = $math.getDistance(point);\r\n        //if(!$math.isAngleInRange(angle, this.startAngle, this.endAngle)){\r\n        //return false;\r\n        //}\r\n        if (radius < this.truePixelRadius + 1 && radius > this.pixelInnerRadius - 1) { // ok to add/remove some\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(RadarCursor.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Start angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * Starting angle of the cursor's radial line.\r\n         *\r\n         * @param value Start angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"endAngle\", {\r\n        /**\r\n         * @return End angle\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endAngle\");\r\n        },\r\n        /**\r\n         * End angle of the cursor's radial line.\r\n         *\r\n         * @param value End angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RadarCursor.prototype.triggerMoveReal = function (point) {\r\n        if (!this.xAxis || (this.xAxis && (!this.xAxis.cursorTooltipEnabled || this.xAxis.tooltip.disabled))) {\r\n            this.updateLineX(this.point);\r\n        }\r\n        if (!this.yAxis || (this.yAxis && (!this.yAxis.cursorTooltipEnabled || this.yAxis.tooltip.disabled))) {\r\n            this.updateLineY(this.point);\r\n        }\r\n        this.updateSelection();\r\n        _super.prototype.triggerMoveReal.call(this, point);\r\n    };\r\n    /**\r\n     * (Re)draws the horizontal (circular) cursor's line.\r\n     *\r\n     * @param point New target point\r\n     */\r\n    RadarCursor.prototype.updateLineX = function (point) {\r\n        var radius = this.pixelRadius;\r\n        var startAngle = this.startAngle;\r\n        var endAngle = this.endAngle;\r\n        var innerRadius = this.pixelInnerRadius;\r\n        if (radius > 0 && $type.isNumber(startAngle) && $type.isNumber(endAngle) && $type.isNumber(innerRadius)) {\r\n            var angle = $math.fitAngleToRange($math.getAngle(point), startAngle, endAngle);\r\n            var path = void 0;\r\n            if (this.lineX && this.lineX.visible) {\r\n                this.lineX.moveTo({ x: 0, y: 0 });\r\n                // fill\r\n                if (this.xAxis && this.fullWidthLineX) {\r\n                    var startPoint = this.xAxis.currentItemStartPoint;\r\n                    var endPoint = this.xAxis.currentItemEndPoint;\r\n                    if (startPoint && endPoint) {\r\n                        var fillStartAngle = $math.fitAngleToRange($math.getAngle(startPoint), startAngle, endAngle);\r\n                        var fillEndAngle = $math.fitAngleToRange($math.getAngle(endPoint), startAngle, endAngle);\r\n                        var arc = fillEndAngle - fillStartAngle;\r\n                        // clockwise\r\n                        // this is needed, normalizeAngle doesn't solve it\r\n                        if (startAngle < endAngle) {\r\n                            if (arc < 0) {\r\n                                arc += 360;\r\n                            }\r\n                        }\r\n                        // ccw\r\n                        else {\r\n                            if (arc > 0) {\r\n                                arc -= 360;\r\n                            }\r\n                        }\r\n                        angle -= arc / 2;\r\n                        path = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) })\r\n                            + $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) })\r\n                            + $path.arcTo(angle, arc, radius)\r\n                            + $path.lineTo({ x: innerRadius * $math.cos(angle + arc), y: innerRadius * $math.sin(angle + arc) })\r\n                            + $path.arcTo(angle + arc, -arc, innerRadius);\r\n                    }\r\n                }\r\n                // line\r\n                if (!path) {\r\n                    path = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) }) + $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n                }\r\n                this.lineX.path = path;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * (Re)draws the vertical (radial) cursor's line.\r\n     *\r\n     * @param point New target point\r\n     */\r\n    RadarCursor.prototype.updateLineY = function (point) {\r\n        if (this.lineY && this.lineY.visible) {\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var truePixelRadius = this.truePixelRadius;\r\n            var radius = $math.fitToRange($math.getDistance(point), 0, this.truePixelRadius);\r\n            if ($type.isNumber(radius) && $type.isNumber(startAngle)) {\r\n                this.lineY.moveTo({ x: 0, y: 0 });\r\n                var path = void 0;\r\n                var arc = endAngle - startAngle;\r\n                if (this.yAxis && this.fullWidthLineY) {\r\n                    // fill\r\n                    var startPoint = this.yAxis.currentItemStartPoint;\r\n                    var endPoint = this.yAxis.currentItemEndPoint;\r\n                    if (startPoint && endPoint) {\r\n                        var innerRadius = $math.fitToRange($math.getDistance(startPoint), 0, truePixelRadius);\r\n                        radius = $math.fitToRange($math.getDistance(endPoint), 0, truePixelRadius);\r\n                        path = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, arc, radius);\r\n                        path += $path.moveTo({ x: innerRadius * $math.cos(endAngle), y: innerRadius * $math.sin(endAngle) }) + $path.arcTo(endAngle, -arc, innerRadius);\r\n                    }\r\n                }\r\n                if (!path) {\r\n                    path = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, radius);\r\n                }\r\n                this.lineY.path = path;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates selection dimensions on size change.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarCursor.prototype.updateSelection = function () {\r\n        if (this._usesSelection) {\r\n            var downPoint = this.downPoint;\r\n            if (downPoint) {\r\n                var point = this.point;\r\n                var radius = this.pixelRadius;\r\n                var truePixelRadius = this.truePixelRadius;\r\n                var innerRadius = this.pixelInnerRadius;\r\n                var startAngle = Math.min(this.startAngle, this.endAngle);\r\n                var endAngle = Math.max(this.startAngle, this.endAngle);\r\n                var downAngle = $math.fitAngleToRange($math.getAngle(downPoint), startAngle, endAngle);\r\n                var angle = $math.fitAngleToRange($math.getAngle(point), startAngle, endAngle);\r\n                var downRadius = $math.getDistance(downPoint);\r\n                if (downRadius < truePixelRadius) {\r\n                    var currentRadius = $math.fitToRange($math.getDistance(point), 0, truePixelRadius);\r\n                    this._prevAngle = angle;\r\n                    var path = $path.moveTo({ x: 0, y: 0 });\r\n                    var downSin = $math.sin(downAngle);\r\n                    var downCos = $math.cos(downAngle);\r\n                    var sin = $math.sin(angle);\r\n                    var cos = $math.cos(angle);\r\n                    var behavior = this.behavior;\r\n                    if (behavior == \"zoomX\" || behavior == \"selectX\") {\r\n                        path += $path.lineTo({ x: radius * downCos, y: radius * downSin }) + $path.arcTo(downAngle, angle - downAngle, radius) + $path.lineTo({ x: innerRadius * cos, y: innerRadius * sin }) + $path.arcTo(angle, downAngle - angle, innerRadius);\r\n                    }\r\n                    else if (behavior == \"zoomY\" || behavior == \"selectY\") {\r\n                        path = $path.moveTo({ x: currentRadius * $math.cos(startAngle), y: currentRadius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, currentRadius) + $path.lineTo({ x: downRadius * $math.cos(endAngle), y: downRadius * $math.sin(endAngle) }) + $path.arcTo(endAngle, startAngle - endAngle, downRadius) + $path.closePath();\r\n                    }\r\n                    else if (behavior == \"zoomXY\") {\r\n                        path = $path.moveTo({ x: currentRadius * $math.cos(downAngle), y: currentRadius * $math.sin(downAngle) }) + $path.arcTo(downAngle, angle - downAngle, currentRadius) + $path.lineTo({ x: downRadius * $math.cos(angle), y: downRadius * $math.sin(angle) }) + $path.arcTo(angle, downAngle - angle, downRadius) + $path.closePath();\r\n                    }\r\n                    this.selection.path = path;\r\n                }\r\n                this.selection.moveTo({ x: 0, y: 0 });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates cursors current positions.\r\n     */\r\n    RadarCursor.prototype.getPositions = function () {\r\n        // positions are used by axes or series\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            var innerRadius = this.pixelInnerRadius;\r\n            var radius = this.truePixelRadius - innerRadius;\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var angle = $math.fitAngleToRange($math.getAngle(this.point), startAngle, endAngle);\r\n            var xPosition = ((angle - startAngle) / (endAngle - startAngle));\r\n            this.xPosition = xPosition;\r\n            this.yPosition = $math.fitToRange(($math.getDistance(this.point) - innerRadius) / radius, 0, 1);\r\n        }\r\n    };\r\n    /**\r\n     * Overriding inherited method, so that nothing happens when it's triggered.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarCursor.prototype.updatePoint = function (point) {\r\n    };\r\n    /**\r\n     * Updates Cursor's position when axis tooltip changes horizontal position.\r\n     *\r\n     * @param event Axis event\r\n     */\r\n    RadarCursor.prototype.handleXTooltipPosition = function (event) {\r\n        if (this.xAxis.cursorTooltipEnabled) {\r\n            var tooltip = this.xAxis.tooltip;\r\n            this.updateLineX($utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this));\r\n        }\r\n    };\r\n    /**\r\n     * Updates Cursor's position when axis tooltip changes vertical position.\r\n     *\r\n     * @todo Description\r\n     * @param event Axis event\r\n     */\r\n    RadarCursor.prototype.handleYTooltipPosition = function (event) {\r\n        if (this.yAxis.cursorTooltipEnabled) {\r\n            var tooltip = this.yAxis.tooltip;\r\n            this.updateLineY($utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this));\r\n        }\r\n    };\r\n    /**\r\n     * needs to be overriden\r\n     * @ignore\r\n     */\r\n    RadarCursor.prototype.updateLinePositions = function (point) {\r\n    };\r\n    /**\r\n     * [getRanges description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    RadarCursor.prototype.getRanges = function () {\r\n        var downPoint = this.downPoint;\r\n        if (downPoint) {\r\n            var upPoint = this.upPoint;\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                var radius = this.pixelRadius;\r\n                var startAngle = this.startAngle;\r\n                var endAngle = this.endAngle;\r\n                var downAngle = $math.fitAngleToRange($math.getAngle(downPoint), this.startAngle, this.endAngle);\r\n                var upAngle = $math.fitAngleToRange($math.getAngle(upPoint), this.startAngle, this.endAngle);\r\n                var downRadius = $math.fitToRange($math.getDistance(downPoint), 0, radius);\r\n                var upRadius = $math.fitToRange($math.getDistance(upPoint), 0, radius);\r\n                var startX = 0;\r\n                var endX = 1;\r\n                var startY = 0;\r\n                var endY = 1;\r\n                var behavior = this.behavior;\r\n                if (behavior == \"zoomX\" || behavior == \"selectX\" || behavior == \"zoomXY\" || behavior == \"selectXY\") {\r\n                    var arc = endAngle - startAngle;\r\n                    startX = $math.round((downAngle - startAngle) / arc, 5);\r\n                    endX = $math.round((upAngle - startAngle) / arc, 5);\r\n                }\r\n                if (behavior == \"zoomY\" || behavior == \"selectY\" || behavior == \"zoomXY\" || behavior == \"selectXY\") {\r\n                    startY = $math.round(downRadius / radius, 5);\r\n                    endY = $math.round(upRadius / radius, 5);\r\n                }\r\n                this.xRange = { start: Math.min(startX, endX), end: Math.max(startX, endX) };\r\n                this.yRange = { start: Math.min(startY, endY), end: Math.max(startY, endY) };\r\n                if (this.behavior == \"selectX\" || this.behavior == \"selectY\" || this.behavior == \"selectXY\") {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.selection.hide();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Overriding inherited method, so that nothing happens when `updateSize`\r\n     * is triggered.\r\n     *\r\n     * RadarCursor is quite complicated and needs own sizing logic.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarCursor.prototype.updateSize = function () { };\r\n    Object.defineProperty(RadarCursor.prototype, \"radius\", {\r\n        /**\r\n         * @return Outer radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius of the cursor's circular line.\r\n         * Absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Outer radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, false, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"pixelRadius\", {\r\n        /**\r\n         * Outer radius of the circular line in pixels.\r\n         *\r\n         * @return Outer radius (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            return $utils.relativeRadiusToValue(this.radius, this.truePixelRadius);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"truePixelRadius\", {\r\n        /**\r\n         * [truePixelRadius description]\r\n         *\r\n         * @todo Description\r\n         * @return Outer radius (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            return $utils.relativeToValue(percent(100), $math.min(this.innerWidth / 2, this.innerHeight / 2));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Inner radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the cursor's circular line.\r\n         * Absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Inner radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, false, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadarCursor.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * Inner radius of the circular line in pixels.\r\n         *\r\n         * @return Inner radius (px)\r\n         * @readonly\r\n         */\r\n        get: function () {\r\n            var innerRadius = this.innerRadius;\r\n            if (innerRadius instanceof Percent) {\r\n                innerRadius = percent(100 * innerRadius.value * this.chart.innerRadiusModifyer);\r\n            }\r\n            return $utils.relativeRadiusToValue(innerRadius, this.truePixelRadius) || 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadarCursor.prototype.fixPoint = function (point) {\r\n        // overriding xy method\r\n        return point;\r\n    };\r\n    return RadarCursor;\r\n}(XYCursor));\r\nexport { RadarCursor };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarCursor\"] = RadarCursor;\r\n//# sourceMappingURL=RadarCursor.js.map","/**\r\n * Module: gauge\r\n */\r\n/**\r\n * Elements: types\r\n */\r\nexport { GaugeChartDataItem, GaugeChart } from \"./.internal/charts/types/GaugeChart\";\r\nexport { RadarChartDataItem, RadarChart } from \"./.internal/charts/types/RadarChart\";\r\nexport { XYChartDataItem, XYChart } from \"./.internal/charts/types/XYChart\";\r\nexport { SerialChartDataItem, SerialChart } from \"./.internal/charts/types/SerialChart\";\r\nexport { PieChart3DDataItem, PieChart3D } from \"./.internal/charts/types/PieChart3D\";\r\nexport { PieChartDataItem, PieChart } from \"./.internal/charts/types/PieChart\";\r\nexport { SlicedChart, SlicedChartDataItem } from \"./.internal/charts/types/SlicedChart\";\r\nexport { FlowDiagramDataItem, FlowDiagram } from \"./.internal/charts/types/FlowDiagram\";\r\nexport { SankeyDiagramDataItem, SankeyDiagram } from \"./.internal/charts/types/SankeyDiagram\";\r\nexport { ChordDiagramDataItem, ChordDiagram } from \"./.internal/charts/types/ChordDiagram\";\r\nexport { TreeMapDataItem, TreeMap } from \"./.internal/charts/types/TreeMap\";\r\nexport { XYChart3DDataItem, XYChart3D } from \"./.internal/charts/types/XYChart3D\";\r\n/**\r\n * Elements: charts\r\n */\r\nexport { ChartDataItem, Chart } from \"./.internal/charts/Chart\";\r\nexport { LegendDataItem, Legend, LegendSettings } from \"./.internal/charts/Legend\";\r\nexport { HeatLegend } from \"./.internal/charts/elements/HeatLegend\";\r\n/**\r\n * Elements: series\r\n */\r\nexport { SeriesDataItem, Series } from \"./.internal/charts/series/Series\";\r\nexport { XYSeriesDataItem, XYSeries } from \"./.internal/charts/series/XYSeries\";\r\nexport { LineSeriesDataItem, LineSeries } from \"./.internal/charts/series/LineSeries\";\r\nexport { LineSeriesSegment } from \"./.internal/charts/series/LineSeriesSegment\";\r\nexport { CandlestickSeriesDataItem, CandlestickSeries } from \"./.internal/charts/series/CandlestickSeries\";\r\nexport { OHLCSeriesDataItem, OHLCSeries } from \"./.internal/charts/series/OHLCSeries\";\r\nexport { ColumnSeriesDataItem, ColumnSeries } from \"./.internal/charts/series/ColumnSeries\";\r\nexport { StepLineSeriesDataItem, StepLineSeries } from \"./.internal/charts/series/StepLineSeries\";\r\nexport { RadarSeriesDataItem, RadarSeries } from \"./.internal/charts/series/RadarSeries\";\r\nexport { RadarColumnSeriesDataItem, RadarColumnSeries } from \"./.internal/charts/series/RadarColumnSeries\";\r\nexport { PieSeriesDataItem, PieSeries } from \"./.internal/charts/series/PieSeries\";\r\nexport { FunnelSeries, FunnelSeriesDataItem } from \"./.internal/charts/series/FunnelSeries\";\r\nexport { PyramidSeries, PyramidSeriesDataItem } from \"./.internal/charts/series/PyramidSeries\";\r\nexport { PictorialStackedSeries, PictorialStackedSeriesDataItem } from \"./.internal/charts/series/PictorialStackedSeries\";\r\nexport { PieTick } from \"./.internal/charts/elements/PieTick\";\r\nexport { FunnelSlice } from \"./.internal/charts/elements/FunnelSlice\";\r\nexport { PieSeries3DDataItem, PieSeries3D } from \"./.internal/charts/series/PieSeries3D\";\r\nexport { TreeMapSeriesDataItem, TreeMapSeries } from \"./.internal/charts/series/TreeMapSeries\";\r\nexport { ColumnSeries3DDataItem, ColumnSeries3D } from \"./.internal/charts/series/ColumnSeries3D\";\r\nexport { ConeSeriesDataItem, ConeSeries } from \"./.internal/charts/series/ConeSeries\";\r\nexport { CurvedColumnSeries, CurvedColumnSeriesDataItem } from \"./.internal/charts/series/CurvedColumnSeries\";\r\n/**\r\n * Elements: axes\r\n */\r\nexport { AxisDataItem, Axis } from \"./.internal/charts/axes/Axis\";\r\nexport { Grid } from \"./.internal/charts/axes/Grid\";\r\nexport { AxisTick } from \"./.internal/charts/axes/AxisTick\";\r\nexport { AxisLabel } from \"./.internal/charts/axes/AxisLabel\";\r\nexport { AxisLine } from \"./.internal/charts/axes/AxisLine\";\r\nexport { AxisFill } from \"./.internal/charts/axes/AxisFill\";\r\nexport { AxisRenderer } from \"./.internal/charts/axes/AxisRenderer\";\r\nexport { AxisBreak } from \"./.internal/charts/axes/AxisBreak\";\r\nexport { AxisBullet } from \"./.internal/charts/axes/AxisBullet\";\r\nexport { ValueAxisDataItem, ValueAxis } from \"./.internal/charts/axes/ValueAxis\";\r\nexport { CategoryAxisDataItem, CategoryAxis } from \"./.internal/charts/axes/CategoryAxis\";\r\nexport { CategoryAxisBreak } from \"./.internal/charts/axes/CategoryAxisBreak\";\r\nexport { DateAxisDataItem, DateAxis } from \"./.internal/charts/axes/DateAxis\";\r\nexport { DurationAxisDataItem, DurationAxis } from \"./.internal/charts/axes/DurationAxis\";\r\nexport { DateAxisBreak } from \"./.internal/charts/axes/DateAxisBreak\";\r\nexport { ValueAxisBreak } from \"./.internal/charts/axes/ValueAxisBreak\";\r\nexport { AxisRendererX } from \"./.internal/charts/axes/AxisRendererX\";\r\nexport { AxisRendererY } from \"./.internal/charts/axes/AxisRendererY\";\r\nexport { AxisRendererRadial } from \"./.internal/charts/axes/AxisRendererRadial\";\r\nexport { AxisLabelCircular } from \"./.internal/charts/axes/AxisLabelCircular\";\r\nexport { AxisRendererCircular } from \"./.internal/charts/axes/AxisRendererCircular\";\r\nexport { AxisFillCircular } from \"./.internal/charts/axes/AxisFillCircular\";\r\nexport { GridCircular } from \"./.internal/charts/axes/GridCircular\";\r\nexport { AxisRendererX3D } from \"./.internal/charts/axes/AxisRendererX3D\";\r\nexport { AxisRendererY3D } from \"./.internal/charts/axes/AxisRendererY3D\";\r\n/**\r\n * Elements: elements\r\n */\r\nexport { Tick } from \"./.internal/charts/elements/Tick\";\r\nexport { Bullet } from \"./.internal/charts/elements/Bullet\";\r\nexport { LabelBullet } from \"./.internal/charts/elements/LabelBullet\";\r\nexport { CircleBullet } from \"./.internal/charts/elements/CircleBullet\";\r\nexport { ErrorBullet } from \"./.internal/charts/elements/ErrorBullet\";\r\nexport { XYChartScrollbar } from \"./.internal/charts/elements/XYChartScrollbar\";\r\nexport { ClockHand } from \"./.internal/charts/elements/ClockHand\";\r\nexport { FlowDiagramNode } from \"./.internal/charts/elements/FlowDiagramNode\";\r\nexport { FlowDiagramLink } from \"./.internal/charts/elements/FlowDiagramLink\";\r\nexport { SankeyNode } from \"./.internal/charts/elements/SankeyNode\";\r\nexport { SankeyLink } from \"./.internal/charts/elements/SankeyLink\";\r\nexport { ChordNode } from \"./.internal/charts/elements/ChordNode\";\r\nexport { ChordLink } from \"./.internal/charts/elements/ChordLink\";\r\nexport { NavigationBarDataItem, NavigationBar } from \"./.internal/charts/elements/NavigationBar\";\r\nexport { Column } from \"./.internal/charts/elements/Column\";\r\nexport { Candlestick } from \"./.internal/charts/elements/Candlestick\";\r\nexport { OHLC } from \"./.internal/charts/elements/OHLC\";\r\nexport { RadarColumn } from \"./.internal/charts/elements/RadarColumn\";\r\nexport { Column3D } from \"./.internal/charts/elements/Column3D\";\r\nexport { ConeColumn } from \"./.internal/charts/elements/ConeColumn\";\r\nexport { CurvedColumn } from \"./.internal/charts/elements/CurvedColumn\";\r\n/**\r\n * Elements: cursors\r\n */\r\nexport { XYCursor } from \"./.internal/charts/cursors/XYCursor\";\r\nexport { Cursor } from \"./.internal/charts/cursors/Cursor\";\r\nexport { RadarCursor } from \"./.internal/charts/cursors/RadarCursor\";\r\n//# sourceMappingURL=charts.js.map","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container customized\"},[_c('div',{staticClass:\"title\"},[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',{staticClass:\"actived\"},[_vm._v(\"上传情况\")])],1)],1),_c('div',{staticClass:\"box padding-modified\"},[_c('div',{staticClass:\"iptBox\"},[_c('el-row',{staticClass:\"w-100 flex-center\"},[_c('el-col',{attrs:{\"span\":2}},[_c('el-checkbox',{staticClass:\"margin-left-10\"},[_vm._v(\"全部\")])],1),_c('el-col',{staticClass:\"margin-left-20 flex-center\",attrs:{\"span\":3}},[_c('div',[_vm._v(\"按年\")]),_c('el-input',{staticClass:\"w-80 margin-left-10\",attrs:{\"type\":\"number\"},model:{value:(_vm.yearVal),callback:function ($$v) {_vm.yearVal=$$v},expression:\"yearVal\"}})],1),_c('el-col',{staticClass:\"margin-left-20 flex-center\",attrs:{\"span\":3}},[_c('div',[_vm._v(\"按月\")]),_c('el-input',{staticClass:\"w-80 margin-left-10\",attrs:{\"type\":\"number\"},model:{value:(_vm.monthVal),callback:function ($$v) {_vm.monthVal=$$v},expression:\"monthVal\"}})],1),_c('el-col',{staticClass:\"margin-left-20\",attrs:{\"span\":8}},[_c('el-button',{staticClass:\"margin-left-20\",attrs:{\"size\":\"small\",\"type\":\"primary\",\"plain\":\"\"}},[_vm._v(\"开始统计\")]),_c('el-button',{staticClass:\"margin-left-20\",attrs:{\"size\":\"small\",\"type\":\"success\",\"plain\":\"\"}},[_vm._v(\"排序 (升)\")]),_c('el-button',{staticClass:\"margin-left-20\",attrs:{\"size\":\"small\",\"type\":\"success\",\"plain\":\"\"}},[_vm._v(\"排序 (降)\")])],1)],1)],1),_c('el-row',{staticClass:\"w-100\"},[_c('div',{ref:\"chartdiv\",staticClass:\"w-100 chart-container\"})]),_c('el-row',{staticClass:\"w-100\"},[_c('el-col',{attrs:{\"span\":12}},[_c('div',{ref:\"chartdiv1\",staticClass:\"chart-container second-container\"})]),_c('el-col',{attrs:{\"span\":12}},[_c('div',{ref:\"chartdiv2\",staticClass:\"chart-container margin-left-10 third-container\"})])],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default [{\r\n  \"town\": \"镇农产品质量安全董监管站\",\r\n  \"amount\": 676\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站1\",\r\n  \"amount\": 712\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站2\",\r\n  \"amount\": 312\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站3\",\r\n  \"amount\": 2216\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站4\",\r\n  \"amount\": 1245\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站5\",\r\n  \"amount\": 1752\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站6\",\r\n  \"amount\": 301\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站7\",\r\n  \"amount\": 23\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站8\",\r\n  \"amount\": 17\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站9\",\r\n  \"amount\": 11536\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站10\",\r\n  \"amount\": 5796\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站11\",\r\n  \"amount\": 398\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站12\",\r\n  \"amount\": 969\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站13\",\r\n  \"amount\": 750\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站14\",\r\n  \"amount\": 3\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站15\",\r\n  \"amount\": 13777\r\n}, {\r\n  \"town\": \"镇农产品质量安全董监管站16\",\r\n  \"amount\": 3093\r\n}];","export default [{\r\n  \"month\": \"2018-09\",\r\n  \"income\": 1200,\r\n  \"expenses\": 21.1\r\n}, {\r\n  \"month\": \"2018-10\",\r\n  \"income\": 900,\r\n  \"expenses\": 300\r\n}, {\r\n  \"month\": \"2018-11\",\r\n  \"income\": 750,\r\n  \"expenses\": 500\r\n}, {\r\n  \"month\": \"2018-12\",\r\n  \"income\": 800,\r\n  \"expenses\": 23.1\r\n}, {\r\n  \"month\": \"2019-01\",\r\n  \"income\": 1300,\r\n  \"expenses\": 28.2\r\n}, {\r\n  \"month\": \"2019-02\",\r\n  \"income\": 1500,\r\n  \"expenses\": 31.9\r\n}, {\r\n  \"month\": \"2019-03\",\r\n  \"income\": 1650,\r\n  \"expenses\": 31.9\r\n}, {\r\n  \"month\": \"2019-04\",\r\n  \"income\": 1350,\r\n  \"expenses\": 31.9\r\n}, {\r\n  \"month\": \"2019-05\",\r\n  \"income\": 615,\r\n  \"expenses\": 31.9\r\n}, {\r\n  \"month\": \"2019-06\",\r\n  \"income\": 723,\r\n  \"expenses\": 31.9\r\n}, {\r\n  \"month\": \"2019-07\",\r\n  \"income\": 500,\r\n  \"expenses\": 31.9\r\n}, {\r\n  \"month\": \"2019-08\",\r\n  \"income\": 1232,\r\n  \"expenses\": 31.9\r\n}];","<template>\r\n  <div class=\"container customized\">\r\n    <div class=\"title\">\r\n      <el-breadcrumb separator=\"/\">\r\n        <el-breadcrumb-item class=\"actived\">上传情况</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n    <div class=\"box padding-modified\">\r\n      <div class=\"iptBox\">\r\n        <el-row class=\"w-100 flex-center\">\r\n          <el-col :span=\"2\">\r\n            <el-checkbox class=\"margin-left-10\">全部</el-checkbox>\r\n          </el-col>\r\n          <el-col :span=\"3\" class=\"margin-left-20 flex-center\">\r\n            <div>按年</div>\r\n            <el-input v-model=\"yearVal\" class=\"w-80 margin-left-10\" type=\"number\"></el-input>\r\n          </el-col>\r\n          <el-col :span=\"3\" class=\"margin-left-20 flex-center\">\r\n            <div>按月</div>\r\n            <el-input v-model=\"monthVal\" class=\"w-80 margin-left-10\" type=\"number\"></el-input>\r\n          </el-col>\r\n          <el-col :span=\"8\" class=\"margin-left-20\">\r\n            <el-button size=\"small\" type=\"primary\" plain class=\"margin-left-20\">开始统计</el-button>\r\n            <el-button size=\"small\" type=\"success\" plain class=\"margin-left-20\">排序 (升)</el-button>\r\n            <el-button size=\"small\" type=\"success\" plain class=\"margin-left-20\">排序 (降)</el-button>\r\n          </el-col>\r\n        </el-row>\r\n      </div>\r\n\r\n      <el-row class=\"w-100\">\r\n        <div class=\"w-100 chart-container\" ref=\"chartdiv\"></div>\r\n      </el-row>\r\n      <el-row class=\"w-100\">\r\n        <el-col :span=\"12\">\r\n          <div class=\"chart-container second-container\" ref=\"chartdiv1\"></div>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <div class=\"chart-container margin-left-10 third-container\" ref=\"chartdiv2\"></div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Request from \"@/services/api/request.js\";\r\nimport Pagination from \"@/components/common/pagination\";\r\nimport Auth from \"@/services/authentication/auth.js\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport chartData from \"./chartData1\";\r\nimport chartData1 from \"./chartData2\";\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport default {\r\n  name: \"uploadSituation\",\r\n  // components: { Pagination },\r\n  data() {\r\n    return {\r\n      page: {\r\n        pageIndex: 1,\r\n        pageSize: 50\r\n      },\r\n      yearVal: null,\r\n      monthVal: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.makeXYChart();\r\n    this.makePieChart();\r\n    this.makeLineChart();\r\n  },\r\n  methods: {\r\n    createGrid(value, valueAxis) {\r\n      var range = valueAxis.axisRanges.create();\r\n      range.value = value;\r\n      range.label.text = this.formatNumber(value);\r\n    },\r\n    formatNumber(value) {\r\n      return value / 1000 + \"K\";\r\n    },\r\n    makeXYChart() {\r\n      let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\r\n      chart.data = chartData;\r\n      let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n      let title = chart.titles.create();\r\n      title.text = \"农产品质量安全董监管站\";\r\n      title.fontSize = 20;\r\n      title.marginBottom = 30;\r\n      title.fontWeight = \"bold\";\r\n      categoryAxis.dataFields.category = \"town\";\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.renderer.minGridDistance = 20;\r\n      categoryAxis.renderer.labels.template.rotation = -45;\r\n      categoryAxis.renderer.labels.template.horizontalCenter = \"right\";\r\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      valueAxis.title.text = \"镇农产品质量安全董监管站(管站)\";\r\n      valueAxis.min = 0;\r\n      valueAxis.max = 15000;\r\n      valueAxis.renderer.minGridDistance = 5;\r\n      valueAxis.renderer.grid.template.disabled = true;\r\n      valueAxis.renderer.labels.template.disabled = true;\r\n      // Create series\r\n      let series = chart.series.push(new am4charts.ColumnSeries());\r\n      series.dataFields.valueY = \"amount\";\r\n      series.dataFields.categoryX = \"town\";\r\n      series.name = \"amount\";\r\n      series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\r\n      series.columns.template.fillOpacity = 1;\r\n      let valueLabel = series.bullets.push(new am4charts.LabelBullet());\r\n      valueLabel.label.text = \"{amount}\";\r\n      valueLabel.label.dy = -10;\r\n      let columnTemplate = series.columns.template;\r\n      columnTemplate.strokeWidth = 2;\r\n      columnTemplate.strokeOpacity = 1;\r\n      this.createGrid(0, valueAxis);\r\n      this.createGrid(5000, valueAxis);\r\n      this.createGrid(10000, valueAxis);\r\n      this.createGrid(15000, valueAxis);\r\n    },\r\n    makePieChart() {\r\n      let chart = am4core.create(this.$refs.chartdiv1, am4charts.PieChart);\r\n      chart.data = chartData;\r\n      chart.responsive.enabled = true;\r\n      // Add and configure Series\r\n      let pieSeries = chart.series.push(new am4charts.PieSeries());\r\n      let title = chart.titles.create();\r\n      title.text = \"农产品质量安全董监管站\";\r\n      title.fontSize = 20;\r\n      title.marginBottom = -20;\r\n      title.marginTop = 10;\r\n      title.fontWeight = \"bold\";\r\n      pieSeries.dataFields.radiusValue = 80;\r\n      pieSeries.radius = 150;\r\n      pieSeries.dataFields.value = \"amount\";\r\n      pieSeries.dataFields.category = \"town\";\r\n      pieSeries.slices.template.stroke = am4core.color(\"#fff\");\r\n      pieSeries.slices.template.strokeWidth = 2;\r\n      pieSeries.slices.template.strokeOpacity = 1;\r\n\r\n      // This creates initial animation\r\n      pieSeries.hiddenState.properties.opacity = 1;\r\n      pieSeries.hiddenState.properties.endAngle = -90;\r\n      pieSeries.hiddenState.properties.startAngle = -90;\r\n    },\r\n    makeLineChart() {\r\n      let chart = am4core.create(this.$refs.chartdiv2, am4charts.XYChart);\r\n      chart.data = chartData1;\r\n      let title = chart.titles.create();\r\n      title.text = \"最近12个月每月上传数据统计\";\r\n      title.fontSize = 20;\r\n      title.marginBottom = 30;\r\n      title.fontWeight = \"bold\";\r\n      let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.renderer.ticks.template.disabled = true;\r\n      categoryAxis.renderer.line.opacity = 0;\r\n      categoryAxis.renderer.grid.template.disabled = true;\r\n      categoryAxis.renderer.minGridDistance = 40;\r\n      categoryAxis.dataFields.category = \"month\";\r\n      categoryAxis.startLocation = 0.3;\r\n      categoryAxis.endLocation = 0.7;\r\n\r\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      valueAxis.tooltip.disabled = true;\r\n      valueAxis.title.text = \"镇农产品质量安全董监管站(管站)\";\r\n      valueAxis.renderer.line.opacity = 0;\r\n      valueAxis.renderer.ticks.template.disabled = true;\r\n      valueAxis.min = 0;\r\n      valueAxis.max = 1700;\r\n\r\n      let lineSeries = chart.series.push(new am4charts.LineSeries());\r\n      lineSeries.dataFields.categoryX = \"month\";\r\n      lineSeries.dataFields.valueY = \"income\";\r\n      lineSeries.tooltipText = \"数量: {valueY.value}\";\r\n      lineSeries.fillOpacity = 0.6;\r\n      lineSeries.stroke = am4core.color(\"#2381e4\");\r\n      lineSeries.strokeWidth = 3;\r\n      lineSeries.fill = am4core.color(\"#90bff2\");\r\n\r\n      let bullet = lineSeries.bullets.push(new am4charts.CircleBullet());\r\n      bullet.circle.radius = 6;\r\n      bullet.circle.stroke = am4core.color(\"#2381e4\");\r\n      bullet.circle.fill = am4core.color(\"#2381e4\");\r\n      bullet.circle.strokeWidth = 3;\r\n\r\n      chart.cursor = new am4charts.XYCursor();\r\n      chart.cursor.behavior = \"panX\";\r\n      chart.cursor.lineX.opacity = 0;\r\n      chart.cursor.lineY.opacity = 0;\r\n\r\n      chart.scrollbarX = new am4core.Scrollbar();\r\n      chart.scrollbarX.parent = chart.bottomAxesContainer;\r\n    }\r\n  }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./uploadSituation.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./uploadSituation.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./uploadSituation.vue?vue&type=template&id=85482bc8&\"\nimport script from \"./uploadSituation.vue?vue&type=script&lang=js&\"\nexport * from \"./uploadSituation.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}