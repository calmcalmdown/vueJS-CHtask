{"version":3,"sources":["webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Image.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyarc.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Morpher.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Polygon.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Preloader.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Slider.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/PlayButton.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradientModifier.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinePattern.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RectPattern.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/ColorizeFilter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/BlurFilter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/FocusFilter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/CirclePattern.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/PatternSet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Plugin.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/AmChartsLogo.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Instance.js","webpack:///./node_modules/@amcharts/amcharts4/core.js"],"names":["_super","Image","_this","call","this","className","element","paper","add","applyTheme","width","height","prototype","draw","href","innerWidth","innerHeight","widthRatio","heightRatio","attr","attrNS","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable","x","y","pixelWidth","pixelHeight","Sprite","registeredClasses","Polyarc","controlPointDistance","controlPointPosition","makePath","_distance","segments","length","path","_realSegments","i","len","points","realPoints","push","p","pointA","pointB","distanceAB","cpDistance","angle","cpx","cpy","controlPoint1","cpx2","cpy2","controlPoint2","stepCount","Math","ceil","prevPoint","i_1","point","Polyline","Morpher","morphable","_bboxes","morphDuration","morphEasing","morphToSingle","scaleRatio","morphToPolygon","toPoints","duration","easing","currentPoints","sortPoints","_morphFromPointsReal","_morphToPointsReal","normalizePoints","animation","Animation","property","from","to","_disposers","start","pointsA","pointsB","surfaceA","holeA","bboxA","middleX","middleY","addPoints","distance","Infinity","splitAt","a","newDistance","partA","slice","partB","concat","sort","b","bbox1","bbox2","bboxes","surface","morphToCircle","radius","commonBBox","hole","fromPoints","bbox","realRadius","min","startAngle","count","realAngle","pointOnCircle","hlen","mustHaveCount","addToSegmentCount","round","newPoints","point0","point1","percent","extraPoint","lastPoint","morphToRectangle","realWidth","realHeight","i_2","i_3","_morphProgress","currentArea","surfaceFrom","holeFrom","surfaceTo","holeTo","currentSurface","i_4","slen","currentPoint","currentHole","i_5","morphBack","_animations","Base","Polygon","shapeRendering","_currentPoints","valueStr","split","s","segment","areaHole","areaArr","holeArr","pointsArr","area","areaAndHole","coords","pointsArr_1","left","right","top","bottom","h","setPath","_bbox","group","getBBox","measureElement","_morpher","Preloader","interfaceColors","InterfaceColorSet","sliceContainer","createChild","Container","shouldClone","backgroundSlice","Slice","arc","fill","getFor","fillOpacity","innerRadius","isMeasured","progressSlice","label","Label","horizontalCenter","verticalCenter","align","valign","background","opacity","contentAlign","contentValign","delay","hiddenState","states","create","properties","visible","hide","__disabled","validateLayout","text","_started","undefined","events","once","isFinished","interactionsEnabled","Date","getTime","show","Slider","thumb","endGrip","startGrip","on","_start","position","_isBusy","__start","Scrollbar","PlayButton","padding","showSystemTooltip","cornerRadius","stroke","strokeOpacity","getKey","playIcon","Triangle","direction","marginLeft","marginRight","icon","stopIcon","RoundedRectangle","togglable","activeState","transitionDuration","defaultState","applyInternalDefaults","readerTitle","language","translate","Button","RadialGradientModifier","gradient","RadialGradient","copyFrom","source","clone","GradientModifier","LinePattern","_line","addElement","rotation","w","gap","step","strokeWidth","Pattern","RectPattern","rectHeight","rectWidth","_rect","ColorizeFilter","feColorMatrix","filterPrimitives","intensity","applyFilter","r","g","ii","color","rgb","Filter","BlurFilter","feGaussianBlur","blur","scale","FocusFilter","feFlood","feMorphology","feComposite","feBlend","setSprite","_sprite","removeStyle","addStyle","CirclePattern","_circle","PatternSet","_list","_currentStep","_startIndex","_currentPass","baseColor","Color","list","getLinePattern","getRectPattern","getCirclePattern","sqrt","size","thickness","strokeDashArray","pattern","strokeDasharray","outline","reset","next","getIndex","currentStep","generatePatterns","processConfig","config","Plugin","_disposed","init","isDisposed","dispose","disposer","shift","AmChartsLogo","d","url","urlTarget","aColor","alternative","hex","aGradient","LinearGradient","addColor","aStroke","m","Polyspline","tensionX","tensionY","desaturateFilter","DesaturateFilter","filters","desaturateFilterHover","saturation","hoverState","htmlElement","classType","htmlContainer","innerHTML","svgDiv_1","SVGContainer","Paper","container_1","svgContainer","append","relativeWidth","relativeHeight","container","sprite_1","topParent","uid","invalidSprites","invalidDatas","invalidPositions","invalidLayouts","baseId","isBaseSprite","focusFilter","baseSprites","baseSpritesByUid","maskRectangle","max","event","previousWidth","previousHeight","deepInvalidate","loopTimer_1","loop_1","dom","setTimeout","addDisposer","Disposer","clearTimeout","tooltipContainer_1","tooltipContainer","tooltip","Tooltip","setBounds","maxWidth","maxHeight","preloader_1","preloader","hasLicense","logo_1","ev","isHidden","isHiding","logo","numberFormatter","isStandaloneInstance","onlyShowOnViewport","viewportTarget","queue","addToQueue","disposers","window","viewPortHandler","vpDisposer","log","Error","disposeAllCharts","pop","sprite","indexOf","disableType","queueHandler","removeFromQueue","index","splice","nextSprite","enableType","showOnInit","Component","invalidateData","reinit","appear","classError","chart","raiseCriticalError","createFromConfig","finalType","type","useTheme","themes","unuseTheme","unuseAllThemes","addLicense","license","licenses"],"mappings":"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","file":"js/chunk-2d0d6586.7b0faa3c.js","sourcesContent":["/**\r\n * Functionality for adding images in SVG tree.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to add `<image>` elements to SVG.\r\n *\r\n * @see {@link IImageEvents} for a list of available events\r\n * @see {@link IImageAdapters} for a list of available Adapters\r\n */\r\nvar Image = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Image, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Image() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Image\";\r\n        _this.element = _this.paper.add(\"image\");\r\n        _this.applyTheme();\r\n        _this.width = 50;\r\n        _this.height = 50;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws an `<image>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Image.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this.href) {\r\n            var width = this.innerWidth;\r\n            var height = this.innerHeight;\r\n            if ($type.isNumber(this.widthRatio)) {\r\n                width = height * this.widthRatio;\r\n                this.width = width;\r\n            }\r\n            if ($type.isNumber(this.heightRatio)) {\r\n                height = width * this.heightRatio;\r\n                this.height = height;\r\n            }\r\n            this.element.attr({\r\n                \"width\": width,\r\n                \"height\": height\r\n            });\r\n            this.element.attrNS($dom.XLINK, \"xlink:href\", this.href);\r\n        }\r\n    };\r\n    Object.defineProperty(Image.prototype, \"href\", {\r\n        /**\r\n         * @return Image URI\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"href\");\r\n        },\r\n        /**\r\n         * An image URI.\r\n         *\r\n         * @param value  Image URI\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"href\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"widthRatio\", {\r\n        /**\r\n         * @return Ratio\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"widthRatio\");\r\n        },\r\n        /**\r\n         * Sets image `width` relatively to its `height`.\r\n         *\r\n         * If image's `height = 100` and `widthRatio = 0.5` the actual width will be\r\n         * `50`.\r\n         *\r\n         * @param value  Ratio\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"widthRatio\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"heightRatio\", {\r\n        /**\r\n         * @return Ratio\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"heightRatio\");\r\n        },\r\n        /**\r\n         * Sets image `height` relatively to its `width`.\r\n         *\r\n         * If image's `width = 100` and `heightRatio = 0.5` the actual height will be\r\n         * `50`.\r\n         *\r\n         * @param value  Ratio\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"heightRatio\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Image.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            return {\r\n                x: 0,\r\n                y: 0,\r\n                width: this.pixelWidth,\r\n                height: this.pixelHeight\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Image;\r\n}(Sprite));\r\nexport { Image };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Image\"] = Image;\r\n//# sourceMappingURL=Image.js.map","/**\r\n * Module for a multi-part arched line.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Polyline } from \"./Polyline\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a multi-part arched line.\r\n *\r\n * @see {@link IPolyarcEvents} for a list of available events\r\n * @see {@link IPolyarcAdapters} for a list of available Adapters\r\n */\r\nvar Polyarc = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Polyarc, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Polyarc() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Polyarc\";\r\n        _this.controlPointDistance = 0.5;\r\n        _this.controlPointPosition = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creats and adds an SVG path for the arc.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Polyarc.prototype.makePath = function () {\r\n        this._distance = 0;\r\n        var segments = this.segments;\r\n        if (segments && segments.length > 0) {\r\n            var path = \"\";\r\n            this._realSegments = [];\r\n            for (var i = 0, len = segments.length; i < len; i++) {\r\n                var points = segments[i];\r\n                var realPoints = [];\r\n                this._realSegments.push(realPoints);\r\n                if (points.length > 0) {\r\n                    path += $path.moveTo(points[0]);\r\n                    for (var p = 1; p < points.length; p++) {\r\n                        var pointA = points[p - 1];\r\n                        var pointB = points[p];\r\n                        var distanceAB = $math.getDistance(pointB, pointA);\r\n                        var cpDistance = distanceAB * this.controlPointDistance;\r\n                        var controlPointPosition = this.controlPointPosition;\r\n                        var angle = -$math.getAngle(pointA, pointB);\r\n                        var cpx = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 0.5 - cpDistance * $math.sin(angle);\r\n                        var cpy = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 0.5 - cpDistance * $math.cos(angle);\r\n                        var controlPoint1 = { x: cpx, y: cpy };\r\n                        var cpx2 = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 1.5 - cpDistance * $math.sin(angle);\r\n                        var cpy2 = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 1.5 - cpDistance * $math.cos(angle);\r\n                        var controlPoint2 = { x: cpx2, y: cpy2 };\r\n                        path += $path.cubicCurveTo(pointB, controlPoint1, controlPoint2);\r\n                        // we add a lot of points in order to get the position/angle later\r\n                        var stepCount = Math.ceil(distanceAB);\r\n                        var prevPoint = pointA;\r\n                        if (stepCount > 0) {\r\n                            for (var i_1 = 0; i_1 <= stepCount; i_1++) {\r\n                                var point = $math.getPointOnCubicCurve(pointA, pointB, controlPoint1, controlPoint2, i_1 / stepCount);\r\n                                realPoints.push(point);\r\n                                this._distance += $math.getDistance(prevPoint, point);\r\n                                prevPoint = point;\r\n                            }\r\n                        }\r\n                        else {\r\n                            realPoints.push(pointA);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.path = path;\r\n        }\r\n    };\r\n    Object.defineProperty(Polyarc.prototype, \"controlPointPosition\", {\r\n        /**\r\n         * @return Position (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"controlPointPosition\");\r\n        },\r\n        /**\r\n         * Relative position along the line the control point is. (0-1)\r\n         *\r\n         * @default 0.5\r\n         * @param value  Position (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"controlPointPosition\", value);\r\n            this.makePath();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Polyarc.prototype, \"controlPointDistance\", {\r\n        /**\r\n         * @return Distance (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"controlPointDistance\");\r\n        },\r\n        /**\r\n         * Relative distance of the control point. (0-1)\r\n         *\r\n         * Default is half the length of the line. (0.5)\r\n         *\r\n         * @default 0.5\r\n         * @param value  Distance (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"controlPointDistance\", value);\r\n            this.makePath();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Polyarc;\r\n}(Polyline));\r\nexport { Polyarc };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polyarc\"] = Polyarc;\r\n//# sourceMappingURL=Polyarc.js.map","/**\r\n * Morpher module contains functionality that allows morphing one polygon to\r\n * another.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Animation, AnimationDisposer } from \"../utils/Animation\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * Morpher can be used to morph one polygon to some other polygon.\r\n */\r\nvar Morpher = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Morpher, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param morphable An object to morph\r\n     */\r\n    function Morpher(morphable) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A storage for measurements.\r\n         */\r\n        _this._bboxes = [];\r\n        /**\r\n         * Duration of the morphing animation in milliseconds.\r\n         */\r\n        _this.morphDuration = 800;\r\n        /**\r\n         * An easing function to use for morphing animation.\r\n         *\r\n         * @see {@link Ease}\r\n         */\r\n        _this.morphEasing = $ease.cubicOut;\r\n        /**\r\n         * If set to `true`, all separate parts of the multi-part polygon will\r\n         * morph into a single circle or polygon when using built-in methods\r\n         * `morphToCircle()` or `morphToPolygon()`.\r\n         *\r\n         * Otherwise each separate part of polygon will morph to individual target\r\n         * circle or polgyon.\r\n         */\r\n        _this.morphToSingle = true;\r\n        /**\r\n         * A ratio to scale morphed object in relation to the source object.\r\n         */\r\n        _this.scaleRatio = 1;\r\n        _this.className = \"Morpher\";\r\n        _this.morphable = morphable;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Morphs a polygon to another polygon.\r\n     *\r\n     * @param toPoints  Corner points of the target shape\r\n     * @param duration  Duration in milliseconds\r\n     * @param easing    Easing function\r\n     * @return Animation\r\n     */\r\n    Morpher.prototype.morphToPolygon = function (toPoints, duration, easing) {\r\n        var points = this.morphable.currentPoints;\r\n        if (points && toPoints) {\r\n            this.sortPoints(points);\r\n            this.sortPoints(toPoints);\r\n            this._morphFromPointsReal = [];\r\n            this._morphToPointsReal = [];\r\n            if (!$type.hasValue(duration)) {\r\n                duration = this.morphDuration;\r\n            }\r\n            if (!$type.hasValue(easing)) {\r\n                easing = this.morphEasing;\r\n            }\r\n            this._morphFromPointsReal = this.normalizePoints(toPoints, points);\r\n            this._morphToPointsReal = this.normalizePoints(points, toPoints);\r\n            this.morphable.currentPoints = this._morphFromPointsReal;\r\n            var animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n            this._disposers.push(animation);\r\n            animation.start();\r\n            return animation;\r\n        }\r\n    };\r\n    /**\r\n     * [normalizePoints description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param pointsA  Point A\r\n     * @param pointsB  Point B\r\n     * @return Normalized points\r\n     */\r\n    Morpher.prototype.normalizePoints = function (pointsA, pointsB) {\r\n        for (var i = 0, len = pointsA.length; i < len; i++) {\r\n            var surfaceA = pointsA[i][0];\r\n            var holeA = pointsA[i][1];\r\n            var bboxA = $type.getValue($math.getBBox(surfaceA));\r\n            var middleX = bboxA.x + bboxA.width;\r\n            var middleY = bboxA.y + bboxA.height;\r\n            // check if we have the same in PointsB\r\n            if (!pointsB[i]) {\r\n                pointsB[i] = [];\r\n            }\r\n            // check if we have surface in pointsB\r\n            if (surfaceA && !pointsB[i][0]) {\r\n                pointsB[i][0] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];\r\n            }\r\n            if (pointsB[i][0]) {\r\n                pointsB[i][0] = this.addPoints(pointsB[i][0], surfaceA.length);\r\n                var distance = Infinity;\r\n                var splitAt = 0;\r\n                for (var a = 0; a < pointsB[i][0].length; a++) {\r\n                    var newDistance = $math.getDistance(pointsB[i][0][a], surfaceA[0]);\r\n                    if (newDistance < distance) {\r\n                        splitAt = a;\r\n                        distance = newDistance;\r\n                    }\r\n                }\r\n                var partA = pointsB[i][0].slice(0, splitAt);\r\n                var partB = pointsB[i][0].slice(splitAt);\r\n                pointsB[i][0] = partB.concat(partA);\r\n            }\r\n            if (holeA) {\r\n                if (!pointsB[i][1]) {\r\n                    pointsB[i][1] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];\r\n                }\r\n                pointsB[i][1] = this.addPoints(pointsB[i][1], holeA.length);\r\n            }\r\n        }\r\n        return pointsB;\r\n    };\r\n    /**\r\n     * [sortPoints description]\r\n     *\r\n     * @ignore Exclude from doc\r\n     * @todo Description\r\n     * @param points  [description]\r\n     * @return                        common bbox of points\r\n     */\r\n    Morpher.prototype.sortPoints = function (points) {\r\n        points.sort(function (a, b) {\r\n            var bbox1 = $type.getValue($math.getBBox(a[0]));\r\n            var bbox2 = $type.getValue($math.getBBox(b[0]));\r\n            if (bbox1.width * bbox1.height > bbox2.width * bbox2.height) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        });\r\n        var bboxes = [];\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var surface = points[i][0];\r\n            if (surface) {\r\n                bboxes.push($type.getValue($math.getBBox(surface)));\r\n            }\r\n        }\r\n        return $math.getCommonRectangle(bboxes);\r\n    };\r\n    /**\r\n     * Morphs polygon to a circle (it is actually a polygon which makes a circle).\r\n     *\r\n     * @param radius    Target circle radius (px)\r\n     * @param duration  Duration (ms)\r\n     * @param easing    Easing function\r\n     * @return Animation\r\n     */\r\n    Morpher.prototype.morphToCircle = function (radius, duration, easing) {\r\n        var points = this.morphable.points;\r\n        var commonBBox = this.sortPoints(points);\r\n        this._morphFromPointsReal = [];\r\n        this._morphToPointsReal = [];\r\n        if (!$type.hasValue(duration)) {\r\n            duration = this.morphDuration;\r\n        }\r\n        if (!$type.hasValue(easing)) {\r\n            easing = this.morphEasing;\r\n        }\r\n        // surface\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var surface = points[i][0];\r\n            var hole = points[i][1];\r\n            this._morphFromPointsReal[i] = [];\r\n            this._morphToPointsReal[i] = [];\r\n            if (surface) {\r\n                var toPoints = surface;\r\n                var fromPoints = surface;\r\n                var bbox = $type.getValue($math.getBBox(fromPoints)); // this._bboxes[i];\r\n                if (this.morphToSingle) {\r\n                    bbox = $type.getValue(commonBBox);\r\n                }\r\n                var middleX = bbox.x + bbox.width / 2;\r\n                var middleY = bbox.y + bbox.height / 2;\r\n                var realRadius = radius;\r\n                if (!$type.isNumber(realRadius)) {\r\n                    realRadius = Math.min(bbox.width / 2, bbox.height / 2);\r\n                }\r\n                toPoints = [];\r\n                // find angle for the first point\r\n                var startAngle = $math.getAngle({ x: middleX, y: middleY }, surface[0]);\r\n                var count = 100;\r\n                if (surface.length > count) {\r\n                    count = surface.length;\r\n                }\r\n                fromPoints = this.addPoints(surface, count);\r\n                count = fromPoints.length; // add Points might increase number a bit\r\n                var angle = 360 / (count - 1);\r\n                for (var a = 0; a < count; a++) {\r\n                    var realAngle = angle * a + startAngle;\r\n                    var pointOnCircle = { x: middleX + realRadius * $math.cos(realAngle), y: middleY + realRadius * $math.sin(realAngle) };\r\n                    toPoints[a] = pointOnCircle;\r\n                }\r\n                if (hole && hole.length > 0) {\r\n                    for (var i_1 = 0, hlen = hole.length; i_1 < hlen; i_1++) {\r\n                        toPoints.push({ x: middleX, y: middleY });\r\n                    }\r\n                }\r\n                this._morphFromPointsReal[i][0] = fromPoints;\r\n                this._morphToPointsReal[i][0] = toPoints;\r\n            }\r\n        }\r\n        this.morphable.currentPoints = this._morphFromPointsReal;\r\n        var animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n        this._disposers.push(animation);\r\n        animation.start();\r\n        return animation;\r\n    };\r\n    /**\r\n     * [addPoints description]\r\n     *\r\n     * @ignore Exclude from doc\r\n     * @todo Description\r\n     * @param points         [description]\r\n     * @param mustHaveCount  [description]\r\n     * @return [description]\r\n     */\r\n    Morpher.prototype.addPoints = function (points, mustHaveCount) {\r\n        var addToSegmentCount = Math.round(mustHaveCount / points.length);\r\n        var newPoints = [];\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var point0 = points[i];\r\n            var point1 = void 0;\r\n            if (i == points.length - 1) {\r\n                point1 = points[0];\r\n            }\r\n            else {\r\n                point1 = points[i + 1];\r\n            }\r\n            newPoints.push(point0);\r\n            for (var p = 1; p < addToSegmentCount; p++) {\r\n                var percent = p / addToSegmentCount;\r\n                var extraPoint = { x: point0.x + (point1.x - point0.x) * percent, y: point0.y + (point1.y - point0.y) * percent };\r\n                newPoints.push(extraPoint);\r\n            }\r\n            // stop adding in case we already added more than left in original\r\n            if (newPoints.length + points.length - i == mustHaveCount) {\r\n                addToSegmentCount = 0;\r\n            }\r\n        }\r\n        if (newPoints.length < mustHaveCount && points.length > 0) {\r\n            var lastPoint = points[points.length - 1];\r\n            for (var p = newPoints.length; p < mustHaveCount; p++) {\r\n                // add same as last\r\n                newPoints.push({ x: lastPoint.x, y: lastPoint.y });\r\n            }\r\n        }\r\n        return newPoints;\r\n    };\r\n    /**\r\n     * Morphs polygon into a rectangular polygon.\r\n     *\r\n     * @param width     Width of the target rectangle (px)\r\n     * @param height    Height of the target rectangle (px)\r\n     * @param duration  Duration (ms)\r\n     * @param easing    Easing function\r\n     * @return Animation\r\n     */\r\n    Morpher.prototype.morphToRectangle = function (width, height, duration, easing) {\r\n        var points = this.morphable.points;\r\n        this.sortPoints(points);\r\n        this._morphFromPointsReal = [];\r\n        this._morphToPointsReal = [];\r\n        if (!$type.hasValue(duration)) {\r\n            duration = this.morphDuration;\r\n        }\r\n        if (!$type.hasValue(easing)) {\r\n            easing = this.morphEasing;\r\n        }\r\n        //\t\tlet biggestBBox: IRectangle = this._bboxes[this._biggestIndex];\r\n        // surface\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var surface = points[i][0];\r\n            var hole = points[i][1];\r\n            this._morphFromPointsReal[i] = [];\r\n            this._morphToPointsReal[i] = [];\r\n            if (surface) {\r\n                var toPoints = surface;\r\n                var fromPoints = surface;\r\n                var bbox = this._bboxes[i];\r\n                // we only work with first area. TODO: maybe we should find the biggest one?\r\n                if (this.morphToSingle) {\r\n                    //if (i != this._biggestIndex) {\r\n                    //\tbbox = { x: biggestBBox.x + biggestBBox.width / 2, y: biggestBBox.y + biggestBBox.height / 2, width: 0, height: 0 };\r\n                    //}\r\n                }\r\n                var x = bbox.x;\r\n                var y = bbox.y;\r\n                var realWidth = width;\r\n                var realHeight = height;\r\n                if (!$type.isNumber(realWidth)) {\r\n                    realWidth = bbox.width;\r\n                }\r\n                if (!$type.isNumber(realHeight)) {\r\n                    realHeight = bbox.height;\r\n                }\r\n                toPoints = [{ x: x, y: y }, { x: x + realWidth, y: y }, { x: x + realWidth, y: y + realHeight }, { x: x, y: y + realHeight }];\r\n                toPoints = this.addPoints(toPoints, surface.length);\r\n                // if polygon has less points then count, add\r\n                if (surface.length < 4) {\r\n                    for (var i_2 = surface.length; i_2 < 4; i_2++) {\r\n                        toPoints.push({ x: surface[i_2].x, y: surface[i_2].y });\r\n                    }\r\n                }\r\n                if (hole && hole.length > 0) {\r\n                    var middleX = bbox.x + bbox.width / 2;\r\n                    var middleY = bbox.y + bbox.height / 2;\r\n                    for (var i_3 = 0, hlen = hole.length; i_3 < hlen; i_3++) {\r\n                        toPoints.push({ x: middleX, y: middleY });\r\n                    }\r\n                }\r\n                this._morphFromPointsReal[i][0] = fromPoints;\r\n                this._morphToPointsReal[i][0] = toPoints;\r\n            }\r\n        }\r\n        this.morphable.currentPoints = this._morphFromPointsReal;\r\n        var animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n        this._disposers.push(animation);\r\n        animation.start();\r\n        return animation;\r\n    };\r\n    Object.defineProperty(Morpher.prototype, \"morphProgress\", {\r\n        /**\r\n         * Returns the progress of morph transition.\r\n         *\r\n         * @return Progress (0-1)\r\n         */\r\n        get: function () {\r\n            return this._morphProgress;\r\n        },\r\n        /**\r\n         * Progress of the morph transition.\r\n         *\r\n         * Setting this will also trigger actual transformation.\r\n         *\r\n         * @param value  Progress (0-1)\r\n         */\r\n        set: function (value) {\r\n            this._morphProgress = value;\r\n            var currentPoints = [];\r\n            if (value != null) {\r\n                var fromPoints = this._morphFromPointsReal;\r\n                var toPoints = this._morphToPointsReal;\r\n                if (fromPoints != null && toPoints != null) {\r\n                    for (var i = 0, len = fromPoints.length; i < len; i++) {\r\n                        var currentArea = [];\r\n                        currentPoints.push(currentArea);\r\n                        var surfaceFrom = fromPoints[i][0];\r\n                        var holeFrom = fromPoints[i][1];\r\n                        var surfaceTo = toPoints[i][0];\r\n                        var holeTo = toPoints[i][1];\r\n                        if (surfaceFrom && surfaceFrom.length > 0 && surfaceTo && surfaceTo.length > 0) {\r\n                            var currentSurface = [];\r\n                            for (var i_4 = 0, slen = surfaceFrom.length; i_4 < slen; i_4++) {\r\n                                var point0 = surfaceFrom[i_4];\r\n                                var point1 = surfaceTo[i_4];\r\n                                var currentPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value };\r\n                                currentSurface.push(currentPoint);\r\n                            }\r\n                            currentArea[0] = currentSurface;\r\n                        }\r\n                        if (holeFrom && holeFrom.length > 0 && holeTo && holeTo.length > 0) {\r\n                            var currentHole = [];\r\n                            for (var i_5 = 0, hlen = holeFrom.length; i_5 < hlen; i_5++) {\r\n                                var point0 = holeFrom[i_5];\r\n                                var point1 = holeTo[i_5];\r\n                                var currentPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value };\r\n                                currentHole.push(currentPoint);\r\n                            }\r\n                            currentArea[1] = currentHole;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.morphable.currentPoints = currentPoints;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Restores the polygon to its original appearance.\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param easing    Easing function\r\n     * @return Animation\r\n     */\r\n    Morpher.prototype.morphBack = function (duration, easing) {\r\n        this._morphToPointsReal = this._morphFromPointsReal;\r\n        this._morphFromPointsReal = this.morphable.currentPoints;\r\n        if (!$type.hasValue(duration)) {\r\n            duration = this.morphDuration;\r\n        }\r\n        if (!$type.hasValue(easing)) {\r\n            easing = this.morphEasing;\r\n        }\r\n        var animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n        this._disposers.push(animation);\r\n        animation.start();\r\n        return animation;\r\n    };\r\n    Object.defineProperty(Morpher.prototype, \"animations\", {\r\n        /**\r\n         * Returns a list of morph animations currently being played.\r\n         *\r\n         * @return List of animations\r\n         */\r\n        get: function () {\r\n            if (!this._animations) {\r\n                this._animations = [];\r\n                this._disposers.push(new AnimationDisposer(this._animations));\r\n            }\r\n            return this._animations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Morpher;\r\n}(BaseObject));\r\nexport { Morpher };\r\n//# sourceMappingURL=Morpher.js.map","/**\r\n * Polygon module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Morpher } from \"../utils/Morpher\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a polygon.\r\n *\r\n * @see {@link IPolygonEvents} for a list of available events\r\n * @see {@link IPolygonAdapters} for a list of available Adapters\r\n */\r\nvar Polygon = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Polygon, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Polygon() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Polygon\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.shapeRendering = \"auto\";\r\n        _this._currentPoints = [];\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Polygon.prototype, \"points\", {\r\n        /**\r\n         * @return Polygon points\r\n         */\r\n        get: function () {\r\n            var points = this.getPropertyValue(\"points\");\r\n            var path = this.path;\r\n            if (path && (!points || points.length == 0)) {\r\n                var valueStr = path.slice(1, path.length - 1);\r\n                var segments = valueStr.split(\"ZM\");\r\n                for (var s = 0; s < segments.length; s++) {\r\n                    var segment = segments[s];\r\n                    if (segment.length > 0) {\r\n                        var areaHole = segment.split(\"M\");\r\n                        var areaArr = areaHole[0];\r\n                        var holeArr = areaHole[1];\r\n                        if (areaArr && areaArr.length > 0) {\r\n                            var pointsArr = areaArr.split(\"L\");\r\n                            if (pointsArr.length > 0) {\r\n                                var area = [];\r\n                                var areaAndHole = [area];\r\n                                points.push(areaAndHole);\r\n                                for (var p = 0; p < pointsArr.length; p++) {\r\n                                    var coords = pointsArr[p].split(\",\");\r\n                                    area.push({ x: +coords[0], y: +coords[1] });\r\n                                }\r\n                                if (holeArr && holeArr.length > 0) {\r\n                                    var pointsArr_1 = holeArr.split(\"L\");\r\n                                    if (pointsArr_1.length > 0) {\r\n                                        var hole = [];\r\n                                        areaAndHole.push(hole);\r\n                                        for (var p = pointsArr_1.length - 1; p >= 0; p--) {\r\n                                            var coords = pointsArr_1[p].split(\",\");\r\n                                            hole.push({ x: +coords[0], y: +coords[1] });\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.setPropertyValue(\"points\", points);\r\n                this._currentPoints = points;\r\n            }\r\n            return points;\r\n        },\r\n        /**\r\n         * An array of X/Y coordinates for each elbow of the polygon.\r\n         *\r\n         * @todo Example\r\n         * @param points  Polygon points\r\n         */\r\n        set: function (points) {\r\n            this.setPropertyValue(\"points\", points, true);\r\n            this._currentPoints = points;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Polygon.prototype, \"currentPoints\", {\r\n        /**\r\n         * @return Polygon points\r\n         */\r\n        get: function () {\r\n            if ((!this._currentPoints || this._currentPoints.length == 0) && this.path) {\r\n                this._currentPoints = this.points;\r\n            }\r\n            return this._currentPoints;\r\n        },\r\n        /**\r\n         * Current points. Used when morphing the element, so that original `points`\r\n         * are not overwritten.\r\n         *\r\n         * @param points  Polygon points\r\n         */\r\n        set: function (points) {\r\n            if (this._currentPoints != points) {\r\n                this._currentPoints = points;\r\n                this.draw();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Polygon.prototype.draw = function () {\r\n        var path = \"\";\r\n        var points = this._currentPoints;\r\n        var left;\r\n        var right;\r\n        var top;\r\n        var bottom;\r\n        if (points.length > 0) {\r\n            // separate areas\r\n            for (var i = 0, len = points.length; i < len; i++) {\r\n                // surface\r\n                var surface = points[i][0];\r\n                var hole = points[i][1];\r\n                if (surface && surface.length > 0) {\r\n                    var point = surface[0];\r\n                    path += $path.moveTo(point);\r\n                    for (var s = 0; s < surface.length; s++) {\r\n                        point = surface[s];\r\n                        path += $path.lineTo(point);\r\n                        if (!$type.isNumber(right) || (right < point.x)) {\r\n                            right = point.x;\r\n                        }\r\n                        if (!$type.isNumber(left) || (left > point.x)) {\r\n                            left = point.x;\r\n                        }\r\n                        if (!$type.isNumber(top) || (top > point.y)) {\r\n                            top = point.y;\r\n                        }\r\n                        if (!$type.isNumber(bottom) || (bottom < point.y)) {\r\n                            bottom = point.y;\r\n                        }\r\n                    }\r\n                }\r\n                // hole\r\n                if (hole && hole.length > 0) {\r\n                    var point = hole[0];\r\n                    path += $path.moveTo(point);\r\n                    for (var h = 0, hlen = hole.length; h < hlen; h++) {\r\n                        point = hole[h];\r\n                        path += $path.lineTo(point);\r\n                    }\r\n                }\r\n            }\r\n            if (path) {\r\n                path += $path.closePath();\r\n            }\r\n            this.bbox.x = left;\r\n            this.bbox.y = top;\r\n            this.bbox.width = right - left;\r\n            this.bbox.height = bottom - top;\r\n            _super.prototype.setPath.call(this, path);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Polygon.prototype.setPath = function (value) {\r\n        if (_super.prototype.setPath.call(this, value)) {\r\n            this.points = [];\r\n            this._bbox = this.group.getBBox();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Measures element\r\n     */\r\n    Polygon.prototype.measureElement = function () {\r\n        // Overriding to avoid extra measurement.\r\n    };\r\n    Object.defineProperty(Polygon.prototype, \"centerPoint\", {\r\n        /**\r\n         * A calculated center point for the shape.\r\n         *\r\n         * @readonly\r\n         * @return Center\r\n         */\r\n        get: function () {\r\n            return { x: this.bbox.x + this.bbox.width / 2, y: this.bbox.y + this.bbox.height / 2 };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Polygon.prototype, \"morpher\", {\r\n        /**\r\n         * A [[Morpher]] instance that is used to morph polygon into some other\r\n         * shape.\r\n         *\r\n         * @readonly\r\n         * @return Morpher instance\r\n         */\r\n        get: function () {\r\n            if (!this._morpher) {\r\n                this._morpher = new Morpher(this);\r\n                this._disposers.push(this._morpher);\r\n            }\r\n            return this._morpher;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Polygon;\r\n}(Sprite));\r\nexport { Polygon };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polygon\"] = Polygon;\r\n//# sourceMappingURL=Polygon.js.map","/**\r\n * Preloader module.\r\n *\r\n * Preloader is a progress indicator.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Slice } from \"./Slice\";\r\nimport { Label } from \"./Label\";\r\nimport { registry } from \"../Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IPreloaderEvents} for a list of available events\r\n * @see {@link IPreloaderAdapters} for a list of available Adapters\r\n */\r\nvar Preloader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Preloader, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Preloader() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"Preloader\";\r\n        // Set dimensions\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create main container\r\n        var sliceContainer = _this.createChild(Container);\r\n        sliceContainer.shouldClone = false;\r\n        // Add background (100%) slice\r\n        var backgroundSlice = sliceContainer.createChild(Slice);\r\n        backgroundSlice.shouldClone = false;\r\n        backgroundSlice.radius = 53;\r\n        backgroundSlice.arc = 360;\r\n        backgroundSlice.fill = interfaceColors.getFor(\"fill\");\r\n        backgroundSlice.fillOpacity = 0.8;\r\n        backgroundSlice.innerRadius = 42;\r\n        backgroundSlice.isMeasured = false;\r\n        _this.backgroundSlice = backgroundSlice;\r\n        // Add progress slice\r\n        var progressSlice = sliceContainer.createChild(Slice);\r\n        progressSlice.shouldClone = false;\r\n        progressSlice.radius = 50;\r\n        progressSlice.innerRadius = 45;\r\n        progressSlice.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        progressSlice.fillOpacity = 0.2;\r\n        progressSlice.isMeasured = false;\r\n        _this.progressSlice = progressSlice;\r\n        // Add text label element\r\n        var label = sliceContainer.createChild(Label);\r\n        label.shouldClone = false;\r\n        label.horizontalCenter = \"middle\";\r\n        label.verticalCenter = \"middle\";\r\n        label.isMeasured = false;\r\n        label.fill = interfaceColors.getFor(\"text\");\r\n        label.align = \"center\";\r\n        label.valign = \"middle\";\r\n        label.fillOpacity = 0.4;\r\n        _this.label = label;\r\n        // Set defaults\r\n        _this.background.opacity = 1;\r\n        _this.background.fill = interfaceColors.getFor(\"background\");\r\n        _this.contentAlign = \"center\";\r\n        _this.contentValign = \"middle\";\r\n        _this.delay = 300;\r\n        // Create hidden state\r\n        var hiddenState = _this.states.create(\"hidden\");\r\n        hiddenState.properties.opacity = 0;\r\n        // Hide by default\r\n        _this.visible = false;\r\n        _this.hide(0);\r\n        _this.__disabled = true;\r\n        // Make it disposable\r\n        // @todo Maybe it's enough to just dispose `sliceContainer`?\r\n        _this._disposers.push(_this.backgroundSlice);\r\n        _this._disposers.push(_this.progressSlice);\r\n        _this._disposers.push(_this.label);\r\n        _this._disposers.push(sliceContainer);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Preloader.prototype, \"progress\", {\r\n        /**\r\n         * @return Progress (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"progress\");\r\n        },\r\n        /**\r\n         * Current preload progress. (0-1)\r\n         *\r\n         * * 0 - 0%\r\n         * * 0.5 - 50%\r\n         * * 1 - 100%\r\n         *\r\n         * Setting this to a value less than 1, will automatically reveal the\r\n         * preloader, while setting it to 1 (100%) will hide it.\r\n         *\r\n         * @param value Progress (0-1)\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            this.__disabled = false;\r\n            this.validateLayout(); // show not in center without this\r\n            this.setPropertyValue(\"progress\", value);\r\n            /*if (!this.visible && value == 1) {\r\n                return;\r\n            }*/\r\n            this.progressSlice.arc = 360 * value;\r\n            if (this.label) {\r\n                this.label.text = Math.round(value * 100) + \"%\";\r\n            }\r\n            if (value >= 1) {\r\n                // Cancel the timeout\r\n                if (this._started) {\r\n                    this._started = undefined;\r\n                }\r\n                // TODO remove closure ?\r\n                registry.events.once(\"enterframe\", function () {\r\n                    var animation = _this.hide();\r\n                    if (animation && !animation.isFinished()) {\r\n                        animation.events.once(\"animationended\", function () {\r\n                            _this.__disabled = true;\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.__disabled = true;\r\n                    }\r\n                });\r\n                this.interactionsEnabled = false;\r\n                this.setPropertyValue(\"progress\", 0);\r\n            }\r\n            else if (value > 0) {\r\n                if (this.delay) {\r\n                    if (!this._started) {\r\n                        this._started = new Date().getTime();\r\n                    }\r\n                    else if ((this._started + this.delay) <= new Date().getTime()) {\r\n                        this.__disabled = false;\r\n                        this.show();\r\n                        this.interactionsEnabled = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this.__disabled = false;\r\n                    this.show();\r\n                    this.interactionsEnabled = true;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Preloader.prototype, \"delay\", {\r\n        /**\r\n         * @return Delay (ms)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"delay\");\r\n        },\r\n        /**\r\n         * Delay display of preloader by X milliseconds.\r\n         *\r\n         * When loading starts (`progress` is set to <1) and finishes (`progress` is\r\n         * set to 1) before `delay` ms, the loader is never shown.\r\n         *\r\n         * This is used to avoid brief flashing of the preload for very quick loads.\r\n         *\r\n         * @default 1000\r\n         * @param value  Delay (ms)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"delay\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Preloader;\r\n}(Container));\r\nexport { Preloader };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Preloader\"] = Preloader;\r\n//# sourceMappingURL=Preloader.js.map","/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\r\nvar Slider = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Slider, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Slider() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Slider\";\r\n        _this.thumb.opacity = 0;\r\n        _this.thumb.interactionsEnabled = false;\r\n        _this.endGrip.opacity = 0;\r\n        _this.endGrip.interactionsEnabled = false;\r\n        _this.startGrip.events.on(\"drag\", function () {\r\n            _this.endGrip.x = _this.startGrip.x;\r\n            _this.endGrip.y = _this.startGrip.y;\r\n        });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Slider.prototype, \"__end\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._start;\r\n        },\r\n        set: function (value) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slider.prototype, \"end\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._start;\r\n        },\r\n        /**\r\n         * Relative position (0-1) of the end grip.\r\n         *\r\n         * @param position  Position (0-1)\r\n         */\r\n        set: function (position) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slider.prototype, \"start\", {\r\n        /**\r\n         * @return Position (0-1)\r\n         */\r\n        get: function () {\r\n            return this._start;\r\n        },\r\n        /**\r\n         * Relative position (0-1) of the start grip.\r\n         *\r\n         * @param position  Position (0-1)\r\n         */\r\n        set: function (position) {\r\n            if (!this._isBusy) {\r\n                this.__start = position;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Slider;\r\n}(Scrollbar));\r\nexport { Slider };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slider\"] = Slider;\r\n//# sourceMappingURL=Slider.js.map","/**\r\n * Play button functionality.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button } from \"./Button\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Triangle } from \"./Triangle\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IPlayButtonEvents} for a list of available events\r\n * @see {@link IPlayButtonAdapters} for a list of available Adapters\r\n */\r\nvar PlayButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PlayButton, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PlayButton() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PlayButton\";\r\n        _this.padding(12, 12, 12, 12);\r\n        _this.showSystemTooltip = true;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var background = _this.background;\r\n        background.cornerRadius(25, 25, 25, 25);\r\n        background.fill = interfaceColors.getFor(\"primaryButton\");\r\n        background.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\r\n        background.strokeOpacity = 0;\r\n        background.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n        background.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n        // Create a play icon\r\n        var playIcon = new Triangle();\r\n        playIcon.direction = \"right\";\r\n        playIcon.width = 9;\r\n        playIcon.height = 11;\r\n        playIcon.marginLeft = 1;\r\n        playIcon.marginRight = 1;\r\n        playIcon.horizontalCenter = \"middle\";\r\n        playIcon.verticalCenter = \"middle\";\r\n        playIcon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n        playIcon.fill = playIcon.stroke;\r\n        _this.icon = playIcon;\r\n        // Create a play icon\r\n        var stopIcon = new RoundedRectangle();\r\n        stopIcon.width = 11;\r\n        stopIcon.height = 11;\r\n        stopIcon.horizontalCenter = \"middle\";\r\n        stopIcon.verticalCenter = \"middle\";\r\n        stopIcon.cornerRadius(0, 0, 0, 0);\r\n        stopIcon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n        stopIcon.fill = playIcon.stroke;\r\n        _this.togglable = true;\r\n        var activeState = _this.states.create(\"active\");\r\n        activeState.transitionDuration = 0;\r\n        activeState.properties.icon = stopIcon;\r\n        _this.defaultState.transitionDuration = 0;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PlayButton.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Play\");\r\n        }\r\n    };\r\n    return PlayButton;\r\n}(Button));\r\nexport { PlayButton };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PlayButton\"] = PlayButton;\r\n//# sourceMappingURL=PlayButton.js.map","import * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadialGradient } from \"./RadialGradient\";\r\nimport { GradientModifier } from \"./GradientModifier\";\r\nimport { registry } from \"../../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class can be used to modify radial gradient steps, changing visual\r\n * properties like lightness, brightness, opacity of each set.\r\n *\r\n * It can also set offsets for each gradient step.\r\n *\r\n * E.g. if I want to fill a columns in a column series to be a solid fill from\r\n * top to 80% of height, then gradually fades out, I can use the following\r\n * gradient modifier as a `fillModifier`:\r\n *\r\n * ```TypeScript\r\n * let fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JavaScript\r\n * var fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JSON\r\n * \"series\": [{\r\n *   \"type\": \"ColumnSeries\",\r\n *   \"columns\": {\r\n *     \"fillModifier\": {\r\n *       \"type\": \"LinearGradientModifier\",\r\n *       \"opacities\": [1, 1, 0],\r\n *       \"offsets\": [0, 0.8, 1]\r\n *     }\r\n *   }\r\n * }]\r\n * ```\r\n */\r\nvar RadialGradientModifier = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RadialGradientModifier, _super);\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function RadialGradientModifier() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadialGradientModifier\";\r\n        _this.gradient = new RadialGradient();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    RadialGradientModifier.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.gradient = source.gradient.clone();\r\n    };\r\n    return RadialGradientModifier;\r\n}(GradientModifier));\r\nexport { RadialGradientModifier };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadialGradientModifier\"] = RadialGradientModifier;\r\n//# sourceMappingURL=RadialGradientModifier.js.map","import * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $path from \"../../rendering/Path\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Line pattern.\r\n */\r\nvar LinePattern = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LinePattern, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LinePattern() {\r\n        var _this = _super.call(this) || this;\r\n        _this.properties[\"gap\"] = 0;\r\n        _this._line = _this.paper.add(\"path\");\r\n        _this.addElement(_this._line);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the pattern.\r\n     */\r\n    LinePattern.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n            this.properties[\"shapeRendering\"] = \"auto\";\r\n        }\r\n        if (this._line) {\r\n            var w = this.width;\r\n            var h = this.height;\r\n            var path = \"\";\r\n            if (!this.gap) {\r\n                if (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n                    path = $path.moveTo({ x: -w, y: h / 2 }) + $path.lineTo({ x: w * 2, y: h / 2 });\r\n                    this.properties[\"rotationX\"] = this.width / 2;\r\n                    this.properties[\"rotationY\"] = this.height / 2;\r\n                }\r\n                else {\r\n                    path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n                }\r\n            }\r\n            else {\r\n                var step = this.gap + this.strokeWidth;\r\n                var count = this.height / step;\r\n                for (var i = -count / 2; i < count * 1.5; i++) {\r\n                    if (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n                        path += $path.moveTo({ x: -w, y: (i + 0.5) * step }) + $path.lineTo({ x: w * 2, y: (i + 0.5) * step });\r\n                        this.properties[\"rotationX\"] = this.width / 2;\r\n                        this.properties[\"rotationY\"] = this.height / 2;\r\n                    }\r\n                    else {\r\n                        path += $path.moveTo({ x: -w, y: i * step }) + $path.lineTo({ x: w * 2, y: i * step });\r\n                    }\r\n                }\r\n            }\r\n            this._line.attr({ \"d\": path });\r\n        }\r\n    };\r\n    Object.defineProperty(LinePattern.prototype, \"gap\", {\r\n        /**\r\n         * @return gap\r\n         */\r\n        get: function () {\r\n            return this.properties[\"gap\"];\r\n        },\r\n        /**\r\n         * Number of pixels between pattern lines.\r\n         *\r\n         * The pattern will automatically draw required number of lines to fill\r\n         * pattern area maintaining `gap` distance between them.\r\n         *\r\n         * 0 (zero) means only single line will be drawn.\r\n         *\r\n         * @default 0\r\n         * @since 4.7.7\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"gap\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LinePattern;\r\n}(Pattern));\r\nexport { LinePattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinePattern\"] = LinePattern;\r\n//# sourceMappingURL=LinePattern.js.map","/**\r\n * Rectangular pattern module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Rectangular pattern\r\n */\r\nvar RectPattern = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RectPattern, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RectPattern() {\r\n        var _this = _super.call(this) || this;\r\n        _this.rectHeight = 1;\r\n        _this.rectWidth = 1;\r\n        _this._rect = _this.paper.add(\"rect\");\r\n        _this.addElement(_this._rect);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the rectangular element.\r\n     */\r\n    RectPattern.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        this.properties[\"rotationX\"] = this.width / 2;\r\n        this.properties[\"rotationY\"] = this.height / 2;\r\n        if (this._rect) {\r\n            this._rect.attr({ \"width\": this.rectWidth, \"height\": this.rectHeight, \"x\": (this.width - this.rectWidth) / 2, \"y\": (this.height - this.rectHeight) / 2 });\r\n        }\r\n    };\r\n    Object.defineProperty(RectPattern.prototype, \"rectWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rectWidth\"];\r\n        },\r\n        /**\r\n         * Rectangle width in pixels.\r\n         *\r\n         * @param value Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rectWidth\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RectPattern.prototype, \"rectHeight\", {\r\n        /**\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rectHeight\"];\r\n        },\r\n        /**\r\n         * Rectangle height in pixels.\r\n         *\r\n         * @param value Height (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rectHeight\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RectPattern;\r\n}(Pattern));\r\nexport { RectPattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;\r\n//# sourceMappingURL=RectPattern.js.map","/**\r\n * Module for \"Colorize\" filter.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter } from \"./Filter\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\r\nvar ColorizeFilter = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ColorizeFilter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColorizeFilter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColorizeFilter\";\r\n        // Create elements\r\n        // NOTE: we do not need to add each individual element to `_disposers`\r\n        // because `filterPrimitives` has an event handler which automatically adds\r\n        // anything added to it to `_disposers`\r\n        _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\r\n        _this.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n        //this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\r\n        _this.filterPrimitives.push(_this.feColorMatrix);\r\n        // Set default properties\r\n        _this.intensity = 1;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)applies colors to the already existing filter by modifying filyer's\r\n     * color matrix element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColorizeFilter.prototype.applyFilter = function () {\r\n        var i = this.intensity;\r\n        var ii = 1 - i;\r\n        var r;\r\n        var g;\r\n        var b;\r\n        var color = this.color;\r\n        if (color && color.rgb) {\r\n            r = color.rgb.r / 255 * i;\r\n            g = color.rgb.g / 255 * i;\r\n            b = color.rgb.b / 255 * i;\r\n        }\r\n        else {\r\n            r = 0;\r\n            g = 0;\r\n            b = 0;\r\n        }\r\n        this.feColorMatrix.attr({ \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\" });\r\n    };\r\n    Object.defineProperty(ColorizeFilter.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"color\"];\r\n        },\r\n        /**\r\n         * Target color to apply to the element.\r\n         *\r\n         * Depending on the `intensity`, all colors of the target element will steer\r\n         * towards this color.\r\n         *\r\n         * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"color\"] = value;\r\n            this.applyFilter();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorizeFilter.prototype, \"intensity\", {\r\n        /**\r\n         * @return Intensity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties.intensity;\r\n        },\r\n        /**\r\n         * Intensity of the color (0-1).\r\n         *\r\n         * The bigger the number the more of a `color` target's colors will become.\r\n         *\r\n         * 0 means the colors will remain as they are.\r\n         * 1 means all colors will become the target `color`.\r\n         *\r\n         * @default 1\r\n         * @param value  Intensity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties.intensity = value;\r\n            this.applyFilter();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColorizeFilter;\r\n}(Filter));\r\nexport { ColorizeFilter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;\r\n//# sourceMappingURL=ColorizeFilter.js.map","/**\r\n * Module for \"Blur\" filter.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter } from \"./Filter\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"Blur\" filter.\r\n */\r\nvar BlurFilter = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlurFilter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function BlurFilter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"BlurFilter\";\r\n        // Create elements\r\n        // NOTE: we do not need to add each individual element to `_disposers`\r\n        // because `filterPrimitives` has an event handler which automatically adds\r\n        // anything added to it to `_disposers`\r\n        _this.feGaussianBlur = _this.paper.add(\"feGaussianBlur\");\r\n        _this.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n        _this.filterPrimitives.push(_this.feGaussianBlur);\r\n        // Set default properties\r\n        _this.width = 200;\r\n        _this.height = 200;\r\n        _this.blur = 1.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BlurFilter.prototype, \"blur\", {\r\n        /**\r\n         * @return Blur\r\n         */\r\n        get: function () {\r\n            return this.properties.blur;\r\n        },\r\n        /**\r\n         * Blur value.\r\n         *\r\n         * The bigger the value, the blurrier the target element will become.\r\n         *\r\n         * @default 1.5\r\n         * @param value Blur\r\n         */\r\n        set: function (value) {\r\n            this.properties.blur = value;\r\n            this.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return BlurFilter;\r\n}(Filter));\r\nexport { BlurFilter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;\r\n//# sourceMappingURL=BlurFilter.js.map","/**\r\n * Module for \"Focus\" filter.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Filter } from \"./Filter\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"Focus\" filter.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n */\r\nvar FocusFilter = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FocusFilter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FocusFilter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FocusFilter\";\r\n        // Create elements\r\n        // NOTE: we do not need to add each individual element to `_disposers`\r\n        // because `filterPrimitives` has an event handler which automatically adds\r\n        // anything added to it to `_disposers`\r\n        _this.feFlood = _this.paper.add(\"feFlood\");\r\n        _this.feFlood.attr({ \"flood-color\": new InterfaceColorSet().getFor(\"primaryButtonHover\"), \"result\": \"base\" });\r\n        _this.filterPrimitives.push(_this.feFlood);\r\n        _this.feMorphology = _this.paper.add(\"feMorphology\");\r\n        _this.feMorphology.attr({ \"result\": \"bigger\", \"in\": \"SourceGraphic\", \"operator\": \"dilate\", \"radius\": \"2\" });\r\n        _this.filterPrimitives.push(_this.feMorphology);\r\n        _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\r\n        _this.feColorMatrix.attr({ \"result\": \"mask\", \"in\": \"bigger\", \"type\": \"matrix\", \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\" });\r\n        _this.filterPrimitives.push(_this.feColorMatrix);\r\n        _this.feComposite = _this.paper.add(\"feComposite\");\r\n        _this.feComposite.attr({ \"result\": \"drop\", \"in\": \"base\", \"in2\": \"mask\", \"operator\": \"in\" });\r\n        _this.filterPrimitives.push(_this.feComposite);\r\n        _this.feBlend = _this.paper.add(\"feBlend\");\r\n        _this.feBlend.attr({ \"in\": \"SourceGraphic\", \"in2\": \"drop\", \"mode\": \"normal\" });\r\n        _this.filterPrimitives.push(_this.feBlend);\r\n        // Set default properties\r\n        _this.width = 130;\r\n        _this.height = 130;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FocusFilter.prototype, \"stroke\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"stroke\"];\r\n        },\r\n        /**\r\n         * Stroke (outline) color.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"stroke\"] = value;\r\n            this.feFlood.attr({ \"flood-color\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FocusFilter.prototype, \"strokeWidth\", {\r\n        /**\r\n         * @return Outline thickness (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeWidth\"];\r\n        },\r\n        /**\r\n         * Stroke (outline) thickness in pixels.\r\n         *\r\n         * @param value  Outline thickness (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeWidth\"] = value;\r\n            this.feMorphology.attr({ \"radius\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FocusFilter.prototype, \"opacity\", {\r\n        /**\r\n         * @return Outline opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"opacity\"];\r\n        },\r\n        /**\r\n         * Opacity of the outline. (0-1)\r\n         *\r\n         * @param value  Outline opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"opacity\"] = value;\r\n            this.feColorMatrix.attr({ \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" + value + \" 0\" });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets filter's target element.\r\n     *\r\n     * In addition it also disables built-in focus outline on element this\r\n     * filter is applied to.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Element filter is being attached to\r\n     */\r\n    FocusFilter.prototype.setSprite = function (value) {\r\n        if (this._sprite && this._sprite != value) {\r\n            this._sprite.group.removeStyle(\"outline\");\r\n        }\r\n        value.group.addStyle({\r\n            \"outline\": \"none\"\r\n        });\r\n        _super.prototype.setSprite.call(this, value);\r\n    };\r\n    return FocusFilter;\r\n}(Filter));\r\nexport { FocusFilter };\r\n//# sourceMappingURL=FocusFilter.js.map","/**\r\n * Rectangular pattern module.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Circular pattern\r\n */\r\nvar CirclePattern = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CirclePattern, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CirclePattern() {\r\n        var _this = _super.call(this) || this;\r\n        _this.properties[\"radius\"] = 2;\r\n        _this._circle = _this.paper.add(\"circle\");\r\n        _this.addElement(_this._circle);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the circle element.\r\n     */\r\n    CirclePattern.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this._circle) {\r\n            this._circle.attr({ \"r\": this.radius, \"cx\": this.width / 2, \"cy\": this.height / 2 });\r\n        }\r\n    };\r\n    Object.defineProperty(CirclePattern.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"radius\"];\r\n        },\r\n        /**\r\n         * Circle radius in pixels.\r\n         *\r\n         * @param value Radius (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"radius\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CirclePattern;\r\n}(Pattern));\r\nexport { CirclePattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CirclePattern\"] = CirclePattern;\r\n//# sourceMappingURL=CirclePattern.js.map","/**\r\n * This module contains PatternSet object definition\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Color } from \"./Color\";\r\nimport { InterfaceColorSet } from \"./InterfaceColorSet\";\r\nimport { LinePattern } from \"../rendering/fills/LinePattern\";\r\nimport { RectPattern } from \"../rendering/fills/RectPattern\";\r\nimport { CirclePattern } from \"../rendering/fills/CirclePattern\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines an interable list of distinctive patterns that can be used in\r\n * conjunction to colors to generate various fill patterns.\r\n *\r\n * @important\r\n * @since 4.7.5\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nvar PatternSet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PatternSet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PatternSet() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the list of the colors in this set. (preset or auto-generated)\r\n         */\r\n        _this._list = [];\r\n        /**\r\n         * Current step.\r\n         */\r\n        _this._currentStep = 0;\r\n        /**\r\n         * If set to non-zero value, the PatternSet will start iterating patterns from\r\n         * that particular index, not the first pattern in the list.\r\n         */\r\n        _this._startIndex = 0;\r\n        /**\r\n         * Current pass in cycle. Once all patterns in the list are iterated,\r\n         * iteration restarts from beginning and currentPass is incremented.\r\n         */\r\n        _this._currentPass = 0;\r\n        /**\r\n         * A base color. If there are no colors pre-set in the color list, ColorSet\r\n         * will use this color as a base when generating new ones, applying\r\n         * `stepOptions` and `passOptions` to this base color.\r\n         */\r\n        _this.baseColor = new Color({\r\n            r: 103,\r\n            g: 183,\r\n            b: 220\r\n        });\r\n        _this.className = \"PatternSet\";\r\n        // Set base color to be used for pattern elements\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Set default patterns\r\n        _this.list = [\r\n            _this.getLinePattern(1000, 45, 1, 6),\r\n            _this.getRectPattern(10, 0, 4),\r\n            _this.getLinePattern(1000, -45, 1, 6),\r\n            _this.getCirclePattern(11, 2, true),\r\n            _this.getLinePattern(6, 90, 1),\r\n            _this.getRectPattern(12, 45, 6, true),\r\n            _this.getLinePattern(6, 0, 1),\r\n            _this.getRectPattern(7, 0, 4),\r\n            _this.getLinePattern(1000, 45, 2, 3, \"4,2\"),\r\n            _this.getCirclePattern(9, 3, false),\r\n            _this.getLinePattern(1000, -45, 2, 3, \"4,2\"),\r\n            _this.getRectPattern(10, 45, Math.sqrt(50)),\r\n            _this.getLinePattern(1000, -45, 2, 1),\r\n            _this.getRectPattern(10, 0, 9),\r\n            _this.getLinePattern(1000, 45, 2, 1),\r\n            _this.getLinePattern(1000, 0, 3, 1),\r\n            _this.getRectPattern(10, 45, 10),\r\n            _this.getLinePattern(1000, 90, 3, 1)\r\n        ];\r\n        _this.baseColor = interfaceColors.getFor(\"stroke\");\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    PatternSet.prototype.getLinePattern = function (size, rotation, thickness, gap, strokeDashArray) {\r\n        var pattern = new LinePattern();\r\n        pattern.width = size;\r\n        pattern.height = size;\r\n        pattern.stroke = this.baseColor;\r\n        pattern.gap = gap;\r\n        pattern.strokeDasharray = strokeDashArray;\r\n        pattern.strokeWidth = thickness;\r\n        pattern.rotation = rotation;\r\n        return pattern;\r\n    };\r\n    PatternSet.prototype.getRectPattern = function (size, rotation, thickness, outline) {\r\n        var pattern = new RectPattern();\r\n        pattern.width = size;\r\n        pattern.height = size;\r\n        pattern.rectWidth = thickness;\r\n        pattern.rectHeight = thickness;\r\n        if (outline) {\r\n            pattern.stroke = this.baseColor;\r\n            pattern.strokeWidth = 1;\r\n            pattern.fillOpacity = 0;\r\n        }\r\n        else {\r\n            pattern.fill = this.baseColor;\r\n            pattern.strokeWidth = 0;\r\n        }\r\n        if (rotation != 0) {\r\n            pattern.shapeRendering = \"auto\";\r\n        }\r\n        pattern.rotation = rotation;\r\n        return pattern;\r\n    };\r\n    PatternSet.prototype.getCirclePattern = function (size, radius, outline) {\r\n        var pattern = new CirclePattern();\r\n        pattern.width = size;\r\n        pattern.height = size;\r\n        pattern.shapeRendering = \"auto\";\r\n        pattern.radius = radius;\r\n        if (outline) {\r\n            pattern.stroke = this.baseColor;\r\n            pattern.strokeWidth = 1;\r\n            pattern.fillOpacity = 0;\r\n        }\r\n        else {\r\n            pattern.fill = this.baseColor;\r\n            pattern.strokeWidth = 0;\r\n        }\r\n        return pattern;\r\n    };\r\n    Object.defineProperty(PatternSet.prototype, \"list\", {\r\n        /**\r\n         * @return Pattern list\r\n         */\r\n        get: function () {\r\n            return this._list;\r\n        },\r\n        /**\r\n         * List of pre-defined patterns to be used in set.\r\n         *\r\n         * @param value Pattern list\r\n         */\r\n        set: function (value) {\r\n            this._list = value;\r\n            this.reset();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the next pattern in list.\r\n     *\r\n     * @return Pattern\r\n     */\r\n    PatternSet.prototype.next = function () {\r\n        var pattern = this.getIndex(this.currentStep);\r\n        this._currentStep++;\r\n        return pattern;\r\n    };\r\n    /**\r\n     * Returns a color at specific index in the list.\r\n     *\r\n     * @param  i  Index\r\n     * @return Pattern\r\n     */\r\n    PatternSet.prototype.getIndex = function (i) {\r\n        var pattern;\r\n        while (this.list.length <= i) {\r\n            this.generatePatterns();\r\n        }\r\n        pattern = this.list[i];\r\n        return pattern.clone();\r\n    };\r\n    /**\r\n     * Generates a new set of patterns.\r\n     */\r\n    PatternSet.prototype.generatePatterns = function () {\r\n        var count = this.list.length / (this._currentPass + 1);\r\n        this._currentPass++;\r\n        for (var i = 0; i < count; i++) {\r\n            this.list.push(this.list[i].clone());\r\n        }\r\n    };\r\n    /**\r\n     * Resets internal iterator.\r\n     *\r\n     * Calling `next()` after this will return the very first color in the color\r\n     * list, even if it was already returned before.\r\n     */\r\n    PatternSet.prototype.reset = function () {\r\n        this._currentStep = this._startIndex;\r\n    };\r\n    Object.defineProperty(PatternSet.prototype, \"currentStep\", {\r\n        /**\r\n         * @return Step\r\n         */\r\n        get: function () {\r\n            return this._currentStep;\r\n        },\r\n        /**\r\n         * Sets current color iteration. You can use this property to skip some\r\n         * colors from iteration. E.g. setting it to `10` will skip first ten\r\n         * colors.\r\n         *\r\n         * Please note that the number is zero-based.\r\n         *\r\n         * @param value  Step\r\n         */\r\n        set: function (value) {\r\n            this._currentStep = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PatternSet.prototype, \"startIndex\", {\r\n        /**\r\n         * @return Index\r\n         */\r\n        get: function () {\r\n            return this._startIndex;\r\n        },\r\n        /**\r\n         * If set to non-zero value, the ColorSet will start iterating colors from\r\n         * that particular index, not the first color in the list.\r\n         *\r\n         * @default 0\r\n         * @param  value  Index\r\n         */\r\n        set: function (value) {\r\n            this._startIndex = value;\r\n            this.reset();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    PatternSet.prototype.processConfig = function (config) {\r\n        // if (config) {\r\n        // \t// Set up axis ranges\r\n        // \tif ($type.hasValue(config.list) && $type.isArray(config.list)) {\r\n        // \t\tfor (let i = 0, len = config.list.length; i < len; i++) {\r\n        // \t\t\tif (!(config.list[i] instanceof Color)) {\r\n        // \t\t\t\tconfig.list[i] = color(config.list[i]);\r\n        // \t\t\t}\r\n        // \t\t}\r\n        // \t}\r\n        // }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return PatternSet;\r\n}(BaseObject));\r\nexport { PatternSet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PatternSet\"] = PatternSet;\r\n//# sourceMappingURL=PatternSet.js.map","/**\r\n * A plugin base class.\r\n */\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This is a base class that provides core functionality for plugins.\r\n *\r\n * The easiest way to start off with a new plugin is to extend this class.\r\n *\r\n * It will provide all the mandatory functionality, such as disposers.\r\n *\r\n * @since 4.2.2\r\n */\r\nvar Plugin = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Plugin() {\r\n        /**\r\n         * Is this object disposed?\r\n         */\r\n        this._disposed = false;\r\n        /**\r\n         * List of IDisposer which will be disposed when the BaseObject is disposed.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this._disposers = [];\r\n        // Nothing to do here\r\n    }\r\n    /**\r\n     * Decorates series with required events and adapters used to hijack its\r\n     * data.\r\n     */\r\n    Plugin.prototype.init = function () {\r\n        // Does nothing\r\n        // Override it\r\n    };\r\n    /**\r\n     * Returns if this element is already disposed.\r\n     *\r\n     * @return Is disposed?\r\n     */\r\n    Plugin.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Disposes this object and related stuff.\r\n     */\r\n    Plugin.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            var a = this._disposers;\r\n            this._disposers = null;\r\n            while (a.length !== 0) {\r\n                var disposer = a.shift();\r\n                disposer.dispose();\r\n            }\r\n        }\r\n    };\r\n    return Plugin;\r\n}());\r\nexport { Plugin };\r\n//# sourceMappingURL=Plugin.js.map","/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Polyspline } from \"./Polyspline\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\r\nvar AmChartsLogo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AmChartsLogo, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AmChartsLogo() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"AmChartsLogo\";\r\n        _this.valign = \"bottom\";\r\n        var d = 0.3;\r\n        _this.opacity = 0.3;\r\n        _this.defaultState.properties.opacity = 0.4;\r\n        _this.url = \"https://www.amcharts.com/\";\r\n        _this.urlTarget = \"_blank\";\r\n        _this.showSystemTooltip = true;\r\n        _this.readerTitle = \"Chart created using amCharts library\";\r\n        _this.width = 220 * d;\r\n        _this.height = 70 * d;\r\n        _this.background.opacity = 0;\r\n        var aColor = color(\"#474758\");\r\n        if (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\r\n            aColor = color(\"#ffffff\");\r\n        }\r\n        var aGradient = new LinearGradient();\r\n        aGradient.addColor(aColor);\r\n        aGradient.addColor(aColor, 1, 0.75);\r\n        aGradient.addColor(color(\"#3cabff\"), 1, 0.755);\r\n        aGradient.rotation = -10;\r\n        var aStroke = aGradient;\r\n        var m = _this.createChild(Polyspline);\r\n        m.shouldClone = false;\r\n        m.isMeasured = false;\r\n        m.segments = [[{ x: 50 * d, y: 50 * d }, { x: 90 * d, y: 50 * d }, { x: 120 * d, y: 20 * d }, { x: 135 * d, y: 35 * d }, { x: 150 * d, y: 20 * d }, { x: 180 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]];\r\n        m.strokeWidth = 6 * d;\r\n        m.tensionX = 0.8;\r\n        m.tensionY = 1;\r\n        m.stroke = color(\"#3cabff\");\r\n        var a = _this.createChild(Polyspline);\r\n        a.shouldClone = false;\r\n        a.isMeasured = false;\r\n        a.segments = [[{ x: 20 * d, y: 50 * d }, { x: 50 * d, y: 50 * d }, { x: 90 * d, y: 12 * d }, { x: 133 * d, y: 50 * d }, { x: 170 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]];\r\n        a.strokeWidth = 6 * d;\r\n        a.tensionX = 0.75;\r\n        a.tensionY = 1;\r\n        a.stroke = aStroke;\r\n        _this._disposers.push(a);\r\n        var desaturateFilter = new DesaturateFilter();\r\n        _this.filters.push(desaturateFilter);\r\n        var desaturateFilterHover = new DesaturateFilter();\r\n        desaturateFilterHover.saturation = 1;\r\n        var hoverState = _this.states.create(\"hover\");\r\n        hoverState.properties.opacity = 1;\r\n        hoverState.filters.push(desaturateFilterHover);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return AmChartsLogo;\r\n}(Container));\r\nexport { AmChartsLogo };\r\n//# sourceMappingURL=AmChartsLogo.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $log from \"./Log\";\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\r\nfunction createChild(htmlElement, classType) {\r\n    var htmlContainer = $dom.getElement(htmlElement);\r\n    if (htmlContainer) {\r\n        htmlContainer.innerHTML = \"\";\r\n        //htmlContainer.style.overflow = \"hidden\";\r\n        var svgDiv_1 = new SVGContainer(htmlContainer);\r\n        var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n        // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n        // svg area - this is often needed when working with small charts.\r\n        // main container which holds content container and tooltips container\r\n        var container_1 = new Container();\r\n        container_1.htmlContainer = htmlContainer;\r\n        container_1.svgContainer = svgDiv_1;\r\n        container_1.width = percent(100);\r\n        container_1.height = percent(100);\r\n        container_1.background.fillOpacity = 0;\r\n        container_1.paper = paper;\r\n        paper.append(container_1.group);\r\n        // this is set from parent container, but this one doesn't have, so do it manually.\r\n        container_1.relativeWidth = 1;\r\n        container_1.relativeHeight = 1;\r\n        svgDiv_1.container = container_1;\r\n        // creating classType instance\r\n        var sprite_1 = container_1.createChild(classType);\r\n        sprite_1.topParent = container_1;\r\n        var uid = sprite_1.uid;\r\n        registry.invalidSprites[uid] = [];\r\n        registry.invalidDatas[uid] = [];\r\n        registry.invalidPositions[uid] = [];\r\n        registry.invalidLayouts[uid] = [];\r\n        container_1.baseId = uid;\r\n        sprite_1.isBaseSprite = true;\r\n        sprite_1.focusFilter = new FocusFilter();\r\n        registry.baseSprites.push(sprite_1);\r\n        registry.baseSpritesByUid[uid] = sprite_1;\r\n        sprite_1.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv_1.width, 0), height: Math.max(svgDiv_1.height, 0) };\r\n        // this solves issues with display:none, as all children are measured as 0x0\r\n        container_1.events.on(\"maxsizechanged\", function (event) {\r\n            if (event.previousWidth == 0 || event.previousHeight == 0) {\r\n                container_1.deepInvalidate();\r\n            }\r\n            if (sprite_1.maskRectangle) {\r\n                sprite_1.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv_1.width, 0), height: Math.max(svgDiv_1.height, 0) };\r\n            }\r\n        });\r\n        var loopTimer_1 = null;\r\n        // Checks to see whether the chart was properly disposed or not\r\n        var loop_1 = function () {\r\n            if (!sprite_1.isDisposed()) {\r\n                if ($dom.getRoot(sprite_1.dom) == null) {\r\n                    $log.warn(\"Chart was not disposed\", sprite_1.uid);\r\n                    loopTimer_1 = null;\r\n                }\r\n                else {\r\n                    loopTimer_1 = setTimeout(loop_1, 1000);\r\n                }\r\n            }\r\n            else {\r\n                loopTimer_1 = null;\r\n            }\r\n        };\r\n        loop_1();\r\n        sprite_1.addDisposer(new Disposer(function () {\r\n            if (loopTimer_1 !== null) {\r\n                clearTimeout(loopTimer_1);\r\n            }\r\n            $array.remove(registry.baseSprites, sprite_1);\r\n            registry.baseSpritesByUid[sprite_1.uid] = undefined;\r\n        }));\r\n        // TODO figure out a better way of doing this\r\n        sprite_1.addDisposer(container_1);\r\n        // tooltip container\r\n        var tooltipContainer_1 = container_1.createChild(Container);\r\n        tooltipContainer_1.topParent = container_1;\r\n        tooltipContainer_1.width = percent(100);\r\n        tooltipContainer_1.height = percent(100);\r\n        tooltipContainer_1.isMeasured = false;\r\n        container_1.tooltipContainer = tooltipContainer_1;\r\n        sprite_1.tooltip = new Tooltip();\r\n        sprite_1.tooltip.hide(0);\r\n        sprite_1.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });\r\n        tooltipContainer_1.events.on(\"maxsizechanged\", function () {\r\n            $type.getValue(sprite_1.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });\r\n        }, undefined, false);\r\n        //@todo: maybe we don't need to create one by default but only on request?\r\n        var preloader_1 = new Preloader();\r\n        preloader_1.events.on(\"inited\", function () {\r\n            preloader_1.__disabled = true;\r\n        }, undefined, false);\r\n        container_1.preloader = preloader_1;\r\n        //if (!options.commercialLicense) {\r\n        if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\r\n            var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\r\n            tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\r\n                if ((tooltipContainer_1.maxWidth <= 100) || (tooltipContainer_1.maxHeight <= 50)) {\r\n                    logo_1.hide();\r\n                }\r\n                else if (logo_1.isHidden || logo_1.isHiding) {\r\n                    logo_1.show();\r\n                }\r\n            }, undefined, false);\r\n            sprite_1.logo = logo_1;\r\n            logo_1.align = \"left\";\r\n            logo_1.valign = \"bottom\";\r\n        }\r\n        $utils.used(sprite_1.numberFormatter); // need to create one.\r\n        // Set this as an autonomouse instance\r\n        // Controls like Preloader, Export will use this.\r\n        container_1.isStandaloneInstance = true;\r\n        if (options.onlyShowOnViewport) {\r\n            if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\r\n                sprite_1.__disabled = true;\r\n                sprite_1.tooltipContainer.__disabled = true;\r\n                var disposers = [\r\n                    $dom.addEventListener(window, \"DOMContentLoaded\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"load\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"resize\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"scroll\", function () { viewPortHandler(sprite_1); })\r\n                ];\r\n                if (options.viewportTarget) {\r\n                    disposers.push($dom.addEventListener(options.viewportTarget, \"resize\", function () { viewPortHandler(sprite_1); }));\r\n                    disposers.push($dom.addEventListener(options.viewportTarget, \"scroll\", function () { viewPortHandler(sprite_1); }));\r\n                }\r\n                var disposer = new MultiDisposer(disposers);\r\n                sprite_1.addDisposer(disposer);\r\n                sprite_1.vpDisposer = disposer;\r\n            }\r\n            else if (options.queue) {\r\n                addToQueue(sprite_1);\r\n            }\r\n        }\r\n        else if (options.queue) {\r\n            addToQueue(sprite_1);\r\n        }\r\n        return sprite_1;\r\n    }\r\n    else {\r\n        system.log(\"html container not found\");\r\n        throw new Error(\"html container not found\");\r\n    }\r\n}\r\n/**\r\n * Disposes all of the currently active charts.\r\n */\r\nexport function disposeAllCharts() {\r\n    while (registry.baseSprites.length !== 0) {\r\n        registry.baseSprites.pop().dispose();\r\n    }\r\n}\r\nexport function addToQueue(sprite) {\r\n    if (registry.queue.indexOf(sprite) == -1) {\r\n        sprite.__disabled = true;\r\n        sprite.tooltipContainer.__disabled = true;\r\n        sprite.events.disableType(\"appeared\");\r\n        if (registry.queue.length == 0) {\r\n            queueHandler(sprite);\r\n        }\r\n        sprite.addDisposer(new Disposer(function () {\r\n            removeFromQueue(sprite);\r\n        }));\r\n        registry.queue.push(sprite);\r\n    }\r\n}\r\nexport function removeFromQueue(sprite) {\r\n    var index = registry.queue.indexOf(sprite);\r\n    if (index >= 0) {\r\n        registry.queue.splice(registry.queue.indexOf(sprite), 1);\r\n        var nextSprite = registry.queue[index];\r\n        if (nextSprite) {\r\n            queueHandler(nextSprite);\r\n        }\r\n    }\r\n}\r\nexport function viewPortHandler(sprite) {\r\n    if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\r\n        if (sprite.vpDisposer) {\r\n            sprite.vpDisposer.dispose();\r\n        }\r\n        addToQueue(sprite);\r\n    }\r\n}\r\nexport function queueHandler(sprite) {\r\n    sprite.__disabled = false;\r\n    sprite.tooltipContainer.__disabled = false;\r\n    sprite.events.enableType(\"appeared\");\r\n    if (sprite.showOnInit) {\r\n        sprite.events.on(\"appeared\", function () {\r\n            removeFromQueue(sprite);\r\n        });\r\n    }\r\n    if (sprite.vpDisposer) {\r\n        sprite.vpDisposer.dispose();\r\n    }\r\n    if (sprite instanceof Component) {\r\n        sprite.invalidateData();\r\n        sprite.reinit();\r\n        sprite.events.once(\"datavalidated\", function () {\r\n            if (sprite.showOnInit) {\r\n                sprite.appear();\r\n            }\r\n            else {\r\n                removeFromQueue(sprite);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        if (sprite.showOnInit) {\r\n            sprite.appear();\r\n        }\r\n        else {\r\n            removeFromQueue(sprite);\r\n        }\r\n    }\r\n}\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\r\nexport function create(htmlElement, classType) {\r\n    // This is a nasty hack for the benefit of vanilla JS users, who do not\r\n    // enjoy benefits of type-check anyway.\r\n    // We're allowing passing in a name of the class rather than type reference\r\n    // itself.\r\n    var classError;\r\n    if ($type.isString(classType)) {\r\n        if ($type.hasValue(registry.registeredClasses[classType])) {\r\n            classType = registry.registeredClasses[classType];\r\n        }\r\n        else {\r\n            classType = registry.registeredClasses[\"Container\"];\r\n            classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n        }\r\n    }\r\n    // Create the chart\r\n    var chart = createChild(htmlElement, classType);\r\n    // Error?\r\n    if (classError) {\r\n        chart.raiseCriticalError(classError);\r\n    }\r\n    return chart;\r\n}\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config, htmlElement, classType) {\r\n    // Extract chart type from config if necessary\r\n    if (!$type.hasValue(classType)) {\r\n        classType = config.type;\r\n        delete config.type;\r\n    }\r\n    // Extract element from config if necessary\r\n    if (!$type.hasValue(htmlElement)) {\r\n        htmlElement = config.container;\r\n        delete config.container;\r\n    }\r\n    // Check if we need to extract actual type reference\r\n    var finalType;\r\n    var classError;\r\n    if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n        finalType = registry.registeredClasses[classType];\r\n    }\r\n    else if (typeof classType !== \"function\") {\r\n        finalType = Container;\r\n        classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n    }\r\n    else {\r\n        finalType = classType;\r\n    }\r\n    // Create the chart\r\n    var chart = createChild(htmlElement, finalType);\r\n    // Set config\r\n    if (classError) {\r\n        chart.raiseCriticalError(classError);\r\n    }\r\n    else {\r\n        chart.config = config;\r\n    }\r\n    return chart;\r\n}\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function useTheme(value) {\r\n    if (registry.themes.indexOf(value) === -1) {\r\n        registry.themes.push(value);\r\n    }\r\n}\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function unuseTheme(value) {\r\n    $array.remove(registry.themes, value);\r\n}\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes() {\r\n    registry.themes = [];\r\n}\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    options.licenses.push(license);\r\n}\r\n//# sourceMappingURL=Instance.js.map","/**\r\n * This module houses all core/framework functionality and is required for\r\n * all charting components to work\r\n */\r\n/**\r\n * Elements: core\r\n */\r\nexport { System, system } from \"./.internal/core/System\";\r\nexport { BaseObject, BaseObjectEvents } from \"./.internal/core/Base\";\r\nexport { Component } from \"./.internal/core/Component\";\r\nexport { Container } from \"./.internal/core/Container\";\r\nexport { DataItem } from \"./.internal/core/DataItem\";\r\nexport { Sprite } from \"./.internal/core/Sprite\";\r\nexport { SpriteEventDispatcher } from \"./.internal/core/SpriteEvents\";\r\nexport { SpriteState } from \"./.internal/core/SpriteState\";\r\nexport { registry, Registry } from \"./.internal/core/Registry\";\r\nexport { options } from \"./.internal/core/Options\";\r\n/**\r\n * Elements: data\r\n */\r\nexport { CSVParser } from \"./.internal/core/data/CSVParser\";\r\nexport { DataLoader, dataLoader } from \"./.internal/core/data/DataLoader\";\r\nexport { DataParser } from \"./.internal/core/data/DataParser\";\r\nexport { DataSource } from \"./.internal/core/data/DataSource\";\r\nexport { JSONParser } from \"./.internal/core/data/JSONParser\";\r\nexport { SVGDefaults } from \"./.internal/core/defs/SVGDefaults\";\r\n/**\r\n * Elements: elements\r\n */\r\nexport { Button } from \"./.internal/core/elements/Button\";\r\nexport { Circle } from \"./.internal/core/elements/Circle\";\r\nexport { Ellipse } from \"./.internal/core/elements/Ellipse\";\r\nexport { Image } from \"./.internal/core/elements/Image\";\r\nexport { Label } from \"./.internal/core/elements/Label\";\r\nexport { Line } from \"./.internal/core/elements/Line\";\r\nexport { Popup } from \"./.internal/core/elements/Popup\";\r\nexport { Modal } from \"./.internal/core/elements/Modal\";\r\nexport { PointedRectangle } from \"./.internal/core/elements/PointedRectangle\";\r\nexport { PointedShape } from \"./.internal/core/elements/PointedShape\";\r\nexport { Polyarc } from \"./.internal/core/elements/Polyarc\";\r\nexport { Polygon } from \"./.internal/core/elements/Polygon\";\r\nexport { Polyline } from \"./.internal/core/elements/Polyline\";\r\nexport { Polyspline } from \"./.internal/core/elements/Polyspline\";\r\nexport { Preloader } from \"./.internal/core/elements/Preloader\";\r\nexport { Rectangle } from \"./.internal/core/elements/Rectangle\";\r\nexport { ResizeButton } from \"./.internal/core/elements/ResizeButton\";\r\nexport { RoundedRectangle } from \"./.internal/core/elements/RoundedRectangle\";\r\nexport { Scrollbar } from \"./.internal/core/elements/Scrollbar\";\r\nexport { Slider } from \"./.internal/core/elements/Slider\";\r\nexport { Slice } from \"./.internal/core/elements/Slice\";\r\nexport { TextLink } from \"./.internal/core/elements/TextLink\";\r\nexport { Tooltip } from \"./.internal/core/elements/Tooltip\";\r\nexport { Trapezoid } from \"./.internal/core/elements/Trapezoid\";\r\nexport { Triangle } from \"./.internal/core/elements/Triangle\";\r\nexport { WavedCircle } from \"./.internal/core/elements/WavedCircle\";\r\nexport { WavedLine } from \"./.internal/core/elements/WavedLine\";\r\nexport { WavedRectangle } from \"./.internal/core/elements/WavedRectangle\";\r\nexport { ZoomOutButton } from \"./.internal/core/elements/ZoomOutButton\";\r\nexport { PlayButton } from \"./.internal/core/elements/PlayButton\";\r\n/**\r\n * Elements: 3d\r\n */\r\nexport { Cone } from \"./.internal/core/elements/3d/Cone\";\r\nexport { Rectangle3D } from \"./.internal/core/elements/3d/Rectangle3D\";\r\nexport { Slice3D } from \"./.internal/core/elements/3d/Slice3D\";\r\n/**\r\n * Elements: export\r\n */\r\nexport { Export } from \"./.internal/core/export/Export\";\r\nexport { ExportMenu } from \"./.internal/core/export/ExportMenu\";\r\n/**\r\n * Elements: formatters\r\n */\r\nexport { DateFormatter } from \"./.internal/core/formatters/DateFormatter\";\r\nexport { DurationFormatter } from \"./.internal/core/formatters/DurationFormatter\";\r\nexport { NumberFormatter } from \"./.internal/core/formatters/NumberFormatter\";\r\nexport { TextFormatter, getTextFormatter } from \"./.internal/core/formatters/TextFormatter\";\r\n/**\r\n * Elements: interaction\r\n */\r\nexport { Inertia } from \"./.internal/core/interaction/Inertia\";\r\nexport { Interaction, getInteraction } from \"./.internal/core/interaction/Interaction\";\r\nexport { InteractionKeyboardObject } from \"./.internal/core/interaction/InteractionKeyboardObject\";\r\nexport { InteractionObject } from \"./.internal/core/interaction/InteractionObject\";\r\nexport { InteractionObjectEventDispatcher } from \"./.internal/core/interaction/InteractionObjectEvents\";\r\nexport { MouseCursorStyle } from \"./.internal/core/interaction/Mouse\";\r\n/**\r\n * Elements: rendering\r\n */\r\nexport { AMElement } from \"./.internal/core/rendering/AMElement\";\r\nexport { Group } from \"./.internal/core/rendering/Group\";\r\nexport { Paper } from \"./.internal/core/rendering/Paper\";\r\nexport { Tension, Basis } from \"./.internal/core/rendering/Smoothing\";\r\nexport { SVGContainer } from \"./.internal/core/rendering/SVGContainer\";\r\n/**\r\n * Elements: fills\r\n */\r\nexport { ColorModifier } from \"./.internal/core/rendering/fills/ColorModifier\";\r\nexport { LinearGradient } from \"./.internal/core/rendering/fills/LinearGradient\";\r\nexport { LinearGradientModifier } from \"./.internal/core/rendering/fills/LinearGradientModifier\";\r\nexport { RadialGradientModifier } from \"./.internal/core/rendering/fills/RadialGradientModifier\";\r\nexport { LinePattern } from \"./.internal/core/rendering/fills/LinePattern\";\r\nexport { Pattern } from \"./.internal/core/rendering/fills/Pattern\";\r\nexport { RadialGradient } from \"./.internal/core/rendering/fills/RadialGradient\";\r\nexport { RectPattern } from \"./.internal/core/rendering/fills/RectPattern\";\r\n/**\r\n * Elements: filters\r\n */\r\nexport { ColorizeFilter } from \"./.internal/core/rendering/filters/ColorizeFilter\";\r\nexport { DesaturateFilter } from \"./.internal/core/rendering/filters/DesaturateFilter\";\r\nexport { DropShadowFilter } from \"./.internal/core/rendering/filters/DropShadowFilter\";\r\nexport { BlurFilter } from \"./.internal/core/rendering/filters/BlurFilter\";\r\nexport { Filter } from \"./.internal/core/rendering/filters/Filter\";\r\nexport { FocusFilter } from \"./.internal/core/rendering/filters/FocusFilter\";\r\nexport { LightenFilter } from \"./.internal/core/rendering/filters/LightenFilter\";\r\n/**\r\n * Elements: utils\r\n */\r\nexport { GlobalAdapter, globalAdapter, Adapter } from \"./.internal/core/utils/Adapter\";\r\nexport { Animation, animate } from \"./.internal/core/utils/Animation\";\r\nexport { nextFrame, readFrame, writeFrame, whenIdle, triggerIdle } from \"./.internal/core/utils/AsyncPending\";\r\nexport { Cache, cache } from \"./.internal/core/utils/Cache\";\r\nexport { Color, color, isColor, castColor } from \"./.internal/core/utils/Color\";\r\nexport { ColorSet } from \"./.internal/core/utils/ColorSet\";\r\nexport { PatternSet } from \"./.internal/core/utils/PatternSet\";\r\nexport { InterfaceColorSet } from \"./.internal/core/utils/InterfaceColorSet\";\r\nexport { DictionaryDisposer, Dictionary, DictionaryTemplate } from \"./.internal/core/utils/Dictionary\";\r\nexport { Disposer, MultiDisposer, MutableValueDisposer, CounterDisposer } from \"./.internal/core/utils/Disposer\";\r\nexport { StyleRule, StyleClass, getElement, addClass, removeClass, blur, focus, outerHTML, isElement, copyAttributes, fixPixelPerfect, ready } from \"./.internal/core/utils/DOM\";\r\nexport { EventDispatcher, TargetedEventDispatcher } from \"./.internal/core/utils/EventDispatcher\";\r\nexport { ListIterator, min, max, join } from \"./.internal/core/utils/Iterator\";\r\nexport { Keyboard, keyboard } from \"./.internal/core/utils/Keyboard\";\r\nexport { Language } from \"./.internal/core/utils/Language\";\r\nexport { IndexedIterable, ListGrouper, ListDisposer, List, ListTemplate } from \"./.internal/core/utils/List\";\r\nexport { Morpher } from \"./.internal/core/utils/Morpher\";\r\nexport { reverse, or } from \"./.internal/core/utils/Order\";\r\nexport { Percent, percent, isPercent } from \"./.internal/core/utils/Percent\";\r\nexport { Plugin } from \"./.internal/core/utils/Plugin\";\r\nexport { Responsive, ResponsiveBreakpoints, defaultRules } from \"./.internal/core/utils/Responsive\";\r\nexport { OrderedList, SortedList, OrderedListTemplate, SortedListTemplate } from \"./.internal/core/utils/SortedList\";\r\nexport { PX, STRING, NUMBER, DATE, DURATION, PLACEHOLDER, PLACEHOLDER2 } from \"./.internal/core/utils/Strings\";\r\nexport { isNaN, checkString, checkBoolean, checkNumber, checkObject, castString, castNumber, isString, isNumber, isObject, isArray } from \"./.internal/core/utils/Type\";\r\nexport { Validatable } from \"./.internal/core/utils/Validatable\";\r\n/**\r\n * Functions: rendering\r\n */\r\nimport * as path from \"./.internal/core/rendering/Path\";\r\nexport { path };\r\n/**\r\n * Functions: utils\r\n */\r\nimport * as colors from \"./.internal/core/utils/Colors\";\r\nexport { colors };\r\nimport * as ease from \"./.internal/core/utils/Ease\";\r\nexport { ease };\r\nimport * as math from \"./.internal/core/utils/Math\";\r\nexport { math };\r\nimport * as array from \"./.internal/core/utils/Array\";\r\nexport { array };\r\nimport * as number from \"./.internal/core/utils/Number\";\r\nexport { number };\r\nimport * as object from \"./.internal/core/utils/Object\";\r\nexport { object };\r\nimport * as string from \"./.internal/core/utils/String\";\r\nexport { string };\r\nimport * as time from \"./.internal/core/utils/Time\";\r\nexport { time };\r\nimport * as utils from \"./.internal/core/utils/Utils\";\r\nexport { utils };\r\nimport * as iter from \"./.internal/core/utils/Iterator\";\r\nexport { iter };\r\nimport * as type from \"./.internal/core/utils/Type\";\r\nexport { type };\r\nexport { create, createFromConfig, disposeAllCharts } from \"./.internal/core/utils/Instance\";\r\nexport { useTheme, unuseTheme, unuseAllThemes, addLicense } from \"./.internal/core/utils/Instance\";\r\n//# sourceMappingURL=core.js.map"],"sourceRoot":""}